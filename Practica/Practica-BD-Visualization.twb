<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20191.19.0213.2333                               -->
<workbook original-version='18.1' source-build='2019.1.0 (20191.19.0213.2333)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <SavingAnalyticObjects />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <VizInTooltipHideWorksheet />
    <WindowsPersistSimpleIdentifiers />
    <ZoneFriendlyName />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Selector' datatype='string' name='[Parámetro 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Compras&quot;'>
        <calculation class='tableau' formula='&quot;Compras&quot;' />
        <members>
          <member value='&quot;Compras&quot;' />
          <member value='&quot;Compradores&quot;' />
          <member value='&quot;Costes&quot;' />
          <member value='&quot;Registros&quot;' />
          <member value='&quot;Ventas&quot;' />
        </members>
      </column>
      <column caption='Top N' datatype='real' name='[Parámetro 2]' param-domain-type='any' role='measure' type='quantitative' value='30.0'>
        <calculation class='tableau' formula='30.0' />
      </column>
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Parámetro 1]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Compras&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Costes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Compradores&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
    </datasource>
    <datasource caption='crypto-prices' inline='true' name='federated.0ulbc2u06prnp31fb3zdi1jdepnk' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='crypto-prices' name='textscan.07my7g61y3kg5h1e9ld5915d1jkn'>
            <connection class='textscan' directory='C:/Users/alberto/Desktop/KeepCodingPracticas/KeepCoding-BD-Visualizacion/Practica/Ficheros' filename='crypto-prices.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.07my7g61y3kg5h1e9ld5915d1jkn' name='crypto-prices.csv' table='[crypto-prices#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='es_ES' separator=';'>
            <column datatype='string' name='symbol' ordinal='0' />
            <column datatype='date' name='date' ordinal='1' />
            <column datatype='real' name='open' ordinal='2' />
            <column datatype='real' name='high' ordinal='3' />
            <column datatype='real' name='low' ordinal='4' />
            <column datatype='real' name='close' ordinal='5' />
            <column datatype='integer' name='volume' ordinal='6' />
            <column datatype='integer' name='market' ordinal='7' />
            <column datatype='string' name='name' ordinal='8' />
            <column datatype='integer' name='ranknow' ordinal='9' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[crypto-prices.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;es&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;€&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;;&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;es_ES&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>symbol</remote-name>
            <remote-type>129</remote-type>
            <local-name>[symbol]</local-name>
            <parent-name>[crypto-prices.csv]</parent-name>
            <remote-alias>symbol</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LES_RES' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[crypto-prices.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>open</remote-name>
            <remote-type>5</remote-type>
            <local-name>[open]</local-name>
            <parent-name>[crypto-prices.csv]</parent-name>
            <remote-alias>open</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>high</remote-name>
            <remote-type>5</remote-type>
            <local-name>[high]</local-name>
            <parent-name>[crypto-prices.csv]</parent-name>
            <remote-alias>high</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>low</remote-name>
            <remote-type>5</remote-type>
            <local-name>[low]</local-name>
            <parent-name>[crypto-prices.csv]</parent-name>
            <remote-alias>low</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>close</remote-name>
            <remote-type>5</remote-type>
            <local-name>[close]</local-name>
            <parent-name>[crypto-prices.csv]</parent-name>
            <remote-alias>close</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>volume</remote-name>
            <remote-type>20</remote-type>
            <local-name>[volume]</local-name>
            <parent-name>[crypto-prices.csv]</parent-name>
            <remote-alias>volume</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>market</remote-name>
            <remote-type>20</remote-type>
            <local-name>[market]</local-name>
            <parent-name>[crypto-prices.csv]</parent-name>
            <remote-alias>market</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[crypto-prices.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LES_RES' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ranknow</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ranknow]</local-name>
            <parent-name>[crypto-prices.csv]</parent-name>
            <remote-alias>ranknow</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Volumen criptomonedas' datatype='real' name='[Calculation_421649547037532160]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Number of Records] : SUM([close] * [volume])}' />
      </column>
      <column caption='% volumen criptomoneda' datatype='real' name='[Calculation_421649547040026625]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([close]*[volume]) / SUM([Calculation_421649547037532160]) * 100' />
      </column>
      <column caption='Volumen criptomoneda' datatype='real' name='[Calculation_421649547042488322]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([volume]) * SUM([close])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Close' datatype='real' name='[close]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='High' datatype='real' name='[high]' role='measure' type='quantitative' />
      <column caption='Low' datatype='real' name='[low]' role='measure' type='quantitative' />
      <column caption='Market' datatype='integer' name='[market]' role='measure' type='quantitative' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Open' datatype='real' name='[open]' role='measure' type='quantitative' />
      <column caption='Ranknow' datatype='integer' name='[ranknow]' role='measure' type='quantitative' />
      <column caption='Symbol' datatype='string' name='[symbol]' role='dimension' type='nominal' />
      <column caption='Volume' datatype='integer' name='[volume]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
      <column-instance column='[symbol]' derivation='None' name='[none:symbol:nk]' pivot='key' type='nominal' />
      <group caption='Acción (Symbol)' hidden='true' name='[Action (Symbol)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[symbol]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.224231' measure-ordering='alphabetic' measure-percentage='0.663653' parameter-percentage='0.112116' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[none:symbol:nk]' palette='Figuras' type='shape'>
            <map to='Figuras/augur.png'>
              <bucket>&quot;BCH&quot;</bucket>
            </map>
            <map to='Figuras/bitcoin.png'>
              <bucket>&quot;BTC&quot;</bucket>
            </map>
            <map to='Figuras/bitcoinCash.jpeg'>
              <bucket>&quot;BTG&quot;</bucket>
            </map>
            <map to='Figuras/bitcoinGold.jpeg'>
              <bucket>&quot;DASH&quot;</bucket>
            </map>
            <map to='Figuras/cardano.png'>
              <bucket>&quot;ETC&quot;</bucket>
            </map>
            <map to='Figuras/dash.png'>
              <bucket>&quot;ETH&quot;</bucket>
            </map>
            <map to='Figuras/eos.png'>
              <bucket>&quot;LTC&quot;</bucket>
            </map>
            <map to='Figuras/ethereum.png'>
              <bucket>&quot;XMR&quot;</bucket>
            </map>
            <map to='Figuras/iota.png'>
              <bucket>&quot;ZEC&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;9COIN&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;ABJ&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;ADA&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;AEON&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;ALIS&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;AMP&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;ARB&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;ASAFE2&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;ATS&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;B@&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;BCC&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;BCY&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;BIOS&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;BITGOLD&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;BLITZ&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;BMC&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;BPC&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;BSC&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;BTBC&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;BTDX&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;BTX&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;BXT&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;CAPP&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;CCO&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;CHC&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;CMP&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;COAL&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;COXST&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;CREVA&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;CTIC3&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;CXT&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;DATA&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;DCRE&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;DGB&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;DIX&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;DOGE&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;DRM&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;DUTCH&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;EBT&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;EDOGE&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;EL&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;EMC&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;EOS&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;ETBS&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;EUSD&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;FAIR&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;FFC&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;FLIK&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;FRC&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;FUDD&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;G3N&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;GBC&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;GEO&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;GNT&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;GRID&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;GUC&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;HCC&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;HNC&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;HUSH&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;IBTC&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;IFLT&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;INFX&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;IQT&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;IXT&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;KASHH&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;KLN&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;LANA&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;LEPEN&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;LLT&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;LTCR&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;MAG&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;MAX&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;MDA&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;MGO&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;MNE&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;MOON&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;MTL&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;MZC&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;NEOS&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;NMR&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;NUKO&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;OBITS&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;OMG&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;ORLY&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;PART&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;PCS&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;PHS&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;PIZZA&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;PNX&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;POWR&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;PRIMU&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;PTC&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Q2C&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;QSP&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;RBT&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;REE&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;RISE&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;RPC&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;SAC&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;SC&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;SFC&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;SIB&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;SKULL&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;SMC&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;SNT&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;SPF&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;START&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;STU&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;SWT&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;TCC&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;TFL&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;TKN&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;TOP&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;TRIG&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;TTC&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;UFO&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;UNIFY&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;URO&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;VC&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;VIP&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;VOYA&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;VUC&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;WCT&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;WISH&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;X2&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;XCN&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;XEL&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;XLC&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;XOT&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;XRC&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;XTO&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;YAC&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;ZNY&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;1ST&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;888&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;ACN&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;ADT&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;AIB&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;AMB&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;ANTX&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;ARI&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;ATM&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;AXIOM&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;BBP&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;BCN&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;BET&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;BITBTC&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;BIXC&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;BLU&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;BON&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;BRIT&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;BT1&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;BTCR&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;BTS&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;BUZZ&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;CAG&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;CBX&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;CF&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;CLINT&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;CNNC&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;CORG&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;CRDNC&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;CRYPT&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;CV2&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;DAS&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;DBIX&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;DES&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;DICE&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;DMD&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;DP&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;DSR&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;EBCH&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;ECO&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;EGC&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;ELS&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;ENJ&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;EREAL&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;ETN&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;EXCL&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;FC2&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;FLAP&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;FNC&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;FRWC&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;FUZZ&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;GARY&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;GCC&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;GML&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;GPL&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;GRX&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;HALLO&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;HIGH&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;HST&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;HYPER&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;ICOS&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;INCNT&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;IOC&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;ITT&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;JOBS&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;KIC&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;KRONE&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;LDOGE&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;LINX&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;LRC&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;LUX&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;MAR&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;MCI&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;MER&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;MLN&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;MONA&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;MSD&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;MUT&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;NDC&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;NKA&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;NTC&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;NXT&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;OFF&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;OPAL&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;OXY&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;PBL&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;PFR&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;PIPL&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;PLR&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;POS&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;PRC&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;PROC&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;PX&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;QCN&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;RADS&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;RDN&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;RHOC&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;RNS&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;RUPX&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;SANDG&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;SDP&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;SHELL&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;SJCX&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;SLM&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;SNGLS&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;SOON&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;SRC&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;STORJ&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;SUR&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;TAG&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;TER&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;TIME&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;TOA&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;TRDT&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;TRX&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;UAHPAY&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;UNB&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;UNY&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;UTC&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;VIA&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;VOISE&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;VSX&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;WAY&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;WIC&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;WSX&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;XBTC21&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;XCT&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;XID&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;XMY&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;XPY&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;XSPEC&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;XVP&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;YTN&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;ZER&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;ZUR&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;10MT&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;ABN&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;ADC&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;AERM&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;ALL&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;AMS&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;ARC&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;ASN&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;ATX&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;BAC&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;BCCS&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;BDL&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;BIP&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;BITOK&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;BLK&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;BNB&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;BPL&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;BSD&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;BTE&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;BUB&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;BYC&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;CARBON&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;CCRB&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;CHEAP&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;CMPCO&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;COB&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;CPC&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;CRM&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;CTO&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;CYC&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;DAV&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;DCT&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;DGC&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;DLC&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;DOLLAR&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;DRP&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;DYN&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;EBTC&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;EDR&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;ELC&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;EMC2&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;EOT&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;EVC&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;FAL&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;FID&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;FLIXX&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;FRD&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;FUEL&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;GAIA&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;GBG&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;GIM&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;GNX&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;GRIM&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;GUN&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;HDG&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;HODL&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;HVCO&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;ICE&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;IFT&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;INK&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;IRL&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;J&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;KAYI&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;KMD&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;LAZ&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;LEX&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;LMC&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;LTCU&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;MAGE&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;MAY&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;MDS&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;MILO&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;MNM&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;MOTO&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;MTLMC3&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;NAMO&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;NET&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;NOBL&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;NULS&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;OCEAN&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;OMNI&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;ORME&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;PASC&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;PDC&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;PI&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;PKB&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;POE&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;PPC&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;PRIX&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;PTOY&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;QASH&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;QTL&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;RBX&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;REGA&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;RIYA&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;RPX&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;SAFEX&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;SCL&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;SFE&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;SIC&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;SKY&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;SMLY&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;SOAR&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;SPHR&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;STC&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;STV&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;SXC&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;TCOIN&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;TGC&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;TKR&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;TOPAZ&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;TRK&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;TURBO&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;UFR&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;UNIT&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;USC&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;VEC2&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;VISIO&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;VPRC&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;VULC&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;WDC&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;WMC&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;XAS&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;XCO&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;XEM&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;XLM&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;XP&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;XRE&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;XTZ&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;YASH&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;ZEIT&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;ZOI&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;300&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;AC&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;ADK&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;AGRS&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;ALT&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;ANI&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;ARDR&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;ASTRO&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;AUR&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;BASH&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;BCDN&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;BENJI&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;BIS&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;BITSILVER&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;BLOCK&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;BNX&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;BRAIN&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;BSR&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;BTCA&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;BTM&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;BUMBA&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;CAB&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;CASINO&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;CDN&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;CHIPS&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;CMT&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;CON&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;CRAVE&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;CRTM&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;CTX&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;CYP&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;DAY&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;DDF&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;DGD&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;DLT&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;DOPE&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;DRT&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;EAC&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;ECASH&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;EFL&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;ELITE&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;EMP&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;EQT&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;EVO&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;FAZZ&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;FIMK&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;FLT&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;FRK&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;FUNC&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;GAM&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;GBT&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;GLD&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;GOLOS&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;GRS&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;GVT&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;HEAT&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;HONEY&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;HWC&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;ICOB&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;IMPS&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;INPAY&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;ITC&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;JIN&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;KCS&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;KOBO&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;LBTC&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;LIFE&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;LOC&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;LTH&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;MAID&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;MBL&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;MEME&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;MINT&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;MOD&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;MRNG&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;MTNC&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;NAV&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;NEVA&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;NOTE&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;NVST&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;OCOW&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;ONION&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;OTN&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;PAY&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;PEC&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;PIGGY&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;PLBT&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;POLL&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;PPT&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;PRM&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;PURA&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;QBC&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;QVT&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;RC&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;REQ&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;RLC&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;RUBIT&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;SAK&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;SCRT&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;SH&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;SIGMA&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;SLFI&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;SNAKE&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;SOIL&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;SPR&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;STEEM&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;SUB&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;SYNX&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;TEAM&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;THC&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;TLE&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;TRADE&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;TRST&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;TYC&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;UIS&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;UNITY&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;USDT&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;VEN&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;VIVO&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;VRM&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;WABI&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;WGO&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;WORM&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;XAUR&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;XCPO&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;XGOX&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;XMCC&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;XPD&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;XRP&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;XVC&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;YES&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;ZENGOLD&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;ZRX&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;611&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;ACC&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;ADL&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;AHT&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;ALTC&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;ANT&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;ARG&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;ATB&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;AV&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;BAT&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;BCF&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;BERN&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;BIT&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;BITUSD&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;BLOCKPAY&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;BOAT&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;BRAT&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;BSTAR&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;BTCD&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;BTPL&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;BUN&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;CACH&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;CAT&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;CDT&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;CJ&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;CNC&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;CONX&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;CRB&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;CRW&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;CUBE&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;DALC&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;DBET&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;DEM&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;DGPT&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;DMB&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;DOT&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;DRXNE&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;EAG&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;ECC&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;EFYT&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;ELIX&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;EMV&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;ERC&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;ETHD&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;EVR&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;FBL&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;FIRE&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;FLVR&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;FRN&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;FUNK&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;GAME&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;GBX&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;GLS&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;GOOD&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;GRT&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;GXS&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;HERO&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;HPC&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;HXX&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;ICON&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;IMS&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;INSN&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;ITI&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;JINN&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;KED&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;KORE&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;LCP&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;LINDA&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;LOG&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;LUN&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;MANA&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;MBRS&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;MEN&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;MIOTA&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;MOIN&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;MRT&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;MUE&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;NBE&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;NEWB&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;NRO&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;NXC&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;OCT&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;ONX&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;OTX&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;PAYP&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;PEPECASH&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;PING&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;PLC&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;PONZI&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;PPY&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;PRN&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;PURE&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;QBK&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;QWARK&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;RCN&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;REX&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;RLT&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;RUNNERS&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;SALT&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;SCS&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;SHA&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;SIGT&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;SLG&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;SNC&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;SOJ&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;SPRTS&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;STEPS&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;SUMO&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;SYS&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;TEK&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;THS&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;TNB&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;TRC&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;TRUMP&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;TYCHO&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;UKG&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;UNO&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;USNBT&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;VERI&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;VLT&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;VRS&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;WARP&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;WGR&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;WOW&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;XBC&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;XCRE&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;XGR&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;XMG&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;XPM&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;XRY&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;XVE&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;YOC&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;ZENI&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;ZSC&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;$$$&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;4CHN&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;ACP&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;ADZ&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;AIR&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;AMM&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;APW&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;ARN&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;ATMS&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;B2X&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;BBT&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;BCPT&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;BIGUP&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;BITCNY&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;BLAZR&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;BLX&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;BOST&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;BRO&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;BTA&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;BTCS&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;BTU&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;BWK&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;CALC&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;CCM100&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;CFI&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;CLUB&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;CNT&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;COUPE&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;CRED&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;CSNO&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;CVCOIN&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;DASHS&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;DCN&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;DFS&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;DISK&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;DNR&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;DPY&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;DUB&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;EBIT&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;EDG&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;EGO&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;ELTCOIN&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;ENT&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;ERY&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;ETT&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;EXP&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;FCT&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;FLAX&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;FOR&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;FTC&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;FYN&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;GAY&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;GCR&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;GMX&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;GRC&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;GTC&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;HBN&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;HMP&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;HTML5&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;I0C&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;IETH&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;INDIA&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;IOP&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;IVZ&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;JWL&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;KIN&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;KUSH&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;LEND&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;LKC&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;LTB&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;MAC&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;MARX&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;MCR&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;MGC&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;MNC&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;MONEY&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;MST&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;MYB&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;NEO&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;NLG&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;NTRN&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;NYC&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;OK&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;OPT&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;PAC&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;PCN&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;PHO&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;PIVX&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;PLX&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;POSW&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;PRES&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;PST&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;PXI&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;QRK&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;RBBT&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;REC&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;RICHX&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;ROOFS&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;RVT&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;SBD&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;SEND&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;SHND&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;SKIN&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;SLS&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;SNOV&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;SPANK&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;STA&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;STRC&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;SWING&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;TAJ&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;TES&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;TIT&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;TOK&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;TRIA&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;TSL&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;UBTC&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;UNI&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;UR&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;VAL&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;VIBE&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;VOT&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;VTC&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;WBC&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;WINGS&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;WTT&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;XBY&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;XDE2&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;XIOS&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;XNN&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;XRA&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;XSTC&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;XYLO&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;ZCG&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;ZMC&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;ZZC&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;808&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;ACES&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;ADST&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;AI&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;ALTCOM&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;ANTI&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;ARGUS&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;ATL&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;AVT&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;BAY&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;BEST&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;BITB&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;BITZ&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;BLRY&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;BOLI&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;BRIA&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;BSTY&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;BTCM&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;BTQ&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;BURST&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;CADASTRAL&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;CBD&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;CESC&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;CLAM&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;CND&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;COR&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;CRC&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;CRX&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;CURE&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;DAR&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;DBG&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;DENT&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;DIBC&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;DMC&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;DOVU&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;DSH&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;EAGLE&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;ECN&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;EGAS&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;ELLA&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;ENG&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;ERC20&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;ETHOS&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;EVX&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;FC&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;FJC&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;FLY&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;FRST&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;FUTC&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;GAP&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;GBYTE&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;GLT&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;GP&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;GRWI&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;HAL&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;HGT&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;HSR&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;HYP&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;ICOO&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;IMX&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;INXT&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;ITNS&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;JNS&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;KEK&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;KRB&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;LDCN&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;LINK&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;LOT&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;LUNA&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;MAO&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;MCAP&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;MEOW&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;MKR&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;MOJO&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;MSCN&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;MUSIC&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;NBIT&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;NIO&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;NSR&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;NXS&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;ODN&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;OP&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;OX&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;PAYX&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;PEX&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;PINK&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;PLNC&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;POP&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;PR&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;PRO&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;PUT&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;QBT&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;R&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;RDD&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;RHFC&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;RMC&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;RUP&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;SAN&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;SDC&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;SHDW&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;SISA&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;SLING&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;SND&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;SONG&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;SPT&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;STEX&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;SUPER&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;TAAS&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;TELL&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;TIE&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;TNT&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;TRCT&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;TRUST&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;TZC&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;ULA&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;UNRC&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;UTA&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;VGC&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;VLTC&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;VSL&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;WAVES&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;WHL&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;WRC&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;XBL&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;XCS&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;XHI&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;XPTX&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;XSH&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;XVG&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;YOYOW&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;ZEPH&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;ZSE&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;1337&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;2GIVE&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;ACOIN&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;ADX&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;AION&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;AMBER&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;APC&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;ARK&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;ATMC&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;B2B&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;BBR&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;BCO&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;BGR&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;BITCF&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;BLAS&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;BLUE&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;BOS&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;BRK&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;BT2&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;BTCRED&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;BTSR&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;BVC&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;CAGE&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;CC&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;CFD&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;CLOAK&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;CNO&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;COSS&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;CREA&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;CSC&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;CVC&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;DBTC&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;DEUS&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;DIME&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;DNA&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;DPAY&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;DTB&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;EBET&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;ECOB&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;EGG&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;ELTC2&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;ENRG&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;ERO&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;ETP&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;EXN&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;FCN&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;FLASH&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;FONZ&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;FST&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;FXE&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;GAS&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;GCN&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;GMT&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;GPU&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;GSR&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;HAT&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;HMC&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;HTC&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;HYTV&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;ICX&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;IND&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;ION&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;ITZ&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;JS&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;KICK&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;KURT&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;LEA&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;LIR&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;LSK&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;LVPS&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;MARS&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;MCO&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;METAL&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;MMXVI&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;MONETA&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;MSP&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;MXT&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;NEBL&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;NLC2&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;NTO&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;NYAN&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;OHM&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;OPES&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;P7C&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;PBT&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;PGL&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;PIRL&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;PLU&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;POST&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;PRE&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;PRX&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;PXC&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;QORA&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;RAIN&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;REAL&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;RIC&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;ROC&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;RUSTBITS&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;SBC&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;SDRN&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;SHIFT&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;SKC&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;SLR&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;SNM&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;SPACE&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;SSS&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;STRAT&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;SWIFT&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;TAGR&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;TERA&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;TIPS&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;TODAY&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;TRI&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;TSE&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;UBQ&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;UNC&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;UQC&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;V&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;VIB&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;VOLT&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;VTA&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;WBB&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;WILD&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;WTC&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;XBTS&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;XCXT&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;XIN&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;XNG&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;XQN&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;XST&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;XWC&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;ZBC&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;ZET&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;ZYD&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;8BIT&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;ABC&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;ACT&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;AE&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;AKY&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;AMMO&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;APX&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;ART&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;ATOM&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;B3&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;BCAP&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;BCX&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;BIOB&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;BITEUR&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;BLC&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;BLZ&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;BOT&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;BRX&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;BTB&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;BTCZ&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;BTWTY&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;BXC&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;CANN&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;CCN&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;CFT&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;CME&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;CNX&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;COVAL&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;CREDO&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;CTIC2&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;CWXT&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;DAT&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;DCR&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;DFT&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;DIVX&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;DNT&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;DRGN&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;DUO&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;EBST&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;EDO&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;EGOLD&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;EMB&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;ENV&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;ESP&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;EUC&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;EXRN&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;FDC&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;FLDC&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;FRAZ&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;FUCK&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;FYP&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;GB&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;GEERT&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;GNO&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;GRE&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;GTO&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;HBT&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;HMQ&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;HUC&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;IBANK&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;IFC&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;INF&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;IPY&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;IXC&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;KARMA&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;KLC&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;LA&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;LEO&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;LKK&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;MAD&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;MAVRO&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;MCRN&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;MGM&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;MND&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;MONK&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;MTH&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;MYST&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;NEOG&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;NMC&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;NTWK&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;OAX&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;OMC&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;ORB&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;PAK&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;PCOIN&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;PHR&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;PIX&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;PND&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;POT&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;PRG&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;PSY&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;PZM&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;QRL&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;RBIES&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;RED&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;RIDE&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;ROYAL&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;RYZ&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;SBTC&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;SEQ&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;SHORTY&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;SKR&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;SMART&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;SNRG&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;SPEX&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;STARS&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;STS&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;SWP&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;TALK&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;TESLA&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;TIX&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;TOKEN&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;TRICK&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;TSTR&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;UET&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;UNIC&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;URC&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;VASH&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;VIDZ&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;VOX&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;VTR&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;WC&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;WINK&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;WYV&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;XC&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;XDN&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;XJO&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;XOC&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;XRB&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;XTD&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;XZC&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;ZCL&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;ZNE&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;42&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;ABY&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;ADCN&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;AGLC&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;ALQO&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;ANC&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;ARCO&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;AST&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;AU&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;BAS&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;BCD&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;BELA&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;BIRDS&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;BITS&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;BLN&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;BNT&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;BQ&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;BSN&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;BTC2X&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;BUCKS&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;C2&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;CASH&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;CCT&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;CHESS&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;CMS&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;COLX&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;CPN&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;CRT&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;CTR&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;CYDER&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;DAXX&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;DCY&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;DGCS&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;DLISK&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;DON&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;DRS&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;E4ROW&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;ECA&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;EDRC&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;ELE&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;EMD&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;EPY&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;ETG&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;EVIL&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;FAP&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;FIL&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;FLO&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;FRGC&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;FUN&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;GAIN&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;GBRC&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;GLC&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;GOLF&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;GRN&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;GUP&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;HDLB&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;HOLD&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;HVN&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;ICN&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;IGNIS&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;INN&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;ISL&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;JET&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;KBR&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;KNC&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;LBC&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;LGD&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;LNK&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;LTG&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;MAGN&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;MBI&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;MEC&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;MINEX&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;MNX&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;MRJA&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;MTM&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;NANOX&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;NETKO&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;NODC&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;NVC&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;OCL&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;ONG&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;OS76&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;PASL&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;PDG&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;PIE&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;PLACO&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;POKE&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;PPP&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;PRL&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;PULSE&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;QAU&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;QTUM&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;RBY&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;REP&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;RKC&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;RSGP&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;SAGA&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;SCORE&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;SGR&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;SIFT&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;SLEVIN&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;SMT&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;SOCC&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;SPORT&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;STCN&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;STX&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;SYNC&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;TCR&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;TGT&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;TKS&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;TOR&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;TROLL&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;TX&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;UGT&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;UNITS&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;USDE&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;VEE&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;VIU&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;VRC&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;WA&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;WEC&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;WOMEN&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;XAU&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;XCP&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;XFT&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;XLR&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;XPA&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;XRL&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;XUC&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;YEL&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;ZEN&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;ZRC&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;1337&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;AgrolifeCoin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Anoncoin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Aseancoin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;B2B&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Binance Coin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BitCoal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bitcrystals&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BitSoar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BlockMason Credit Protocol&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Braincoin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bytecent&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cashcoin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chronos&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ColossusCoinXT&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Credence Coin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cthulhu Offerings&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Databits&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Deutsche eMark&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Divi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;DynamicCoin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;eGold&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;EncrypGen&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;EtherDoge&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Everus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;FedoraCoin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;FoldingCoin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;G3N&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gimli&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Golos&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Happycoin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hshare&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ICOS&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;InPay&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;iXledger&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kittehcoin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;LEOcoin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;LLToken&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Maker&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MergeCoin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Moin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Musiconomi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Network Token&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nyancoin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;OracleChain&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;PayCoin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;PIECoin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Polybius&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;PrismChain&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Qbao&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ratecoin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ride My Car&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rupaya [OLD]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SecretCoin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Signatum&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Social Send&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SpreadCoin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Streamr DATAcoin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Syndicate&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;TerraNova&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tokes&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;TrustPlus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Universal Currency&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Verge&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;VoteCoin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;WhaleCoin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;XCurrency&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ZCash Gold&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;0x&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Advanced Internet Blocks&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Altcoin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ardor&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Auroracoin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BenjiRolls&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BitBay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bitcoin Unlimited (Futures)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bitpark Coin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Blakecoin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bolivarcoin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bubble&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CannaCoin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ChanCoin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Coimatic 2.0&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CORION&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CryptoForecast&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DAPPSTER&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Delphy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DigitalDevelopersFund&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DraftCoin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;eBoost&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ELTCOIN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;eREAL&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ETHLend&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Falcoin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;FlavorCoin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fujinto&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;GCoin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;GoldBlocks&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;GuccioneCoin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;High Voltage&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;iBank&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;InfChain&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ION&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;KashhCoin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LanaCoin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LiteBar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MACRON&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MazaCoin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Minex&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Monster Byte&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nekonium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;NoLimitCoin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Omni&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pandacoin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pesetacoin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PlayerCoin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;President Johnson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Publica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Quotient&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Renos&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;RoyalCoin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SaluS&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ShellCoin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SmartCash&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SpankChain&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Stellar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SwagBucks&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tattoocoin (Standard Edition)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;TIES Network&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trident Group&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;UnbreakableCoin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Valorbit&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Virta Unique Coin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Walton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Worldcore&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;YashCoin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Zilbercoin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;10M Token&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Aeron&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ammo Rewards&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ark&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AvatarCoin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BiblePay&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bitcedi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BitcoinX [Futures]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BitSend&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Blitzcash&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BoostCoin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Burst&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Carboncoin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CHIPS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CoinDash&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Crave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cryptonite&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DAS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dentacoin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dimecoin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DubaiCoin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Edgeless&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Emerald Crypto&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Espers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;eUSD&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fargocoin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;FlorinCoin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;FutCoin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GeoCoin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GoldReserve&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GXShares&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;HODL Bucks&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;iCoin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;InflationCoin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;IrishCoin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;KickCoin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lazaruscoin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Litecoin Plus&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Magnet&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Melon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MobileCash&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Motocoin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;NeosCoin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Numeraire&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Open Trading Network&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Particl&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Phoenixcoin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pluton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prime-XI&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PureVidz&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Radium&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;REX&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;RubleBit&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sativacoin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Shorty&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SnakeEyes&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sphre AIR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Storj&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Swing&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tellurion&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;TittieCoin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;TRON&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Unikoin Gold&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;VeChain&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Visio&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;WavesGo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;X2&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Yocoin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ZrCoin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Aces&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AirToken&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Antimatter&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ATBCoin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Basic Attention Token&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Birds&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bitcoin Diamond [Futures]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;bitEUR&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;bitUSD&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Blocktix&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BriaCoin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cabbage&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Catcoin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Clams&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;COMSA [ETH]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CrowdCoin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CybCSec&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DCORP&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DigiByte&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dollar Online&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;e-Gulden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Elastic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Energycoin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ethereum Dark&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ExchangeN&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Firecoin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Francs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;GameCredits&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Global Tour Coin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Granite&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;HEAT&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Huncoin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ignis [Futures]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;International Diamond&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jewels&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kore&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;LevoPlus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;LottoCoin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Marscoin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Metaverse ETP&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MonaCoin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Myriad&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NEVERDIE&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Oceanlab&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;OsmiumCoin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paypex&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;PinkDog&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;PosEx&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ProCurrency&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Quantstamp&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;REAL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ripple&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rustbits&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Senderon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Skeincoin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SolarCoin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;StarCash Network&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Substratum&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T-coin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tezos (Pre-Launch)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Torcoin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;UAHPay&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Unrealcoin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;VeriumReserve&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;vSlice&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wild Crypto&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Xios&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ZenCash&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Abjcoin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aidos Kuneen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ANRYZE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;AsiaCoin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;B3Coin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BioBar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bitcoin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bitcurrency&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bitstar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Blocknet&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BRAT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bytecoin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cashme&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cindicator&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Comet&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Creditbit&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cubits&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Datum&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DFSCoin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dix Asset&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E4ROW&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eidoo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;EncryptoTel [ETH]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ethereum&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Evil Coin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Filecoin [Futures - 6 Month]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fonziecoin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;GAIA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;GlassCoin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Golos Gold&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;HarmonyCoin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;HTMLCOIN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;iDice&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;InsaneCoin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Janus&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kobocoin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;LePen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;LockChain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MantraCoin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Metal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MojoCoin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MustangCoin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Neuro&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;OAX&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Orbitcoin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PayCon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Piggycoin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PonziCoin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Privatix&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Qibuck Asset&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rawcoin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Riecoin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rupee&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SecureCoin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SingularDTV&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SocialCoin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sprouts&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Stress&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Synereo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TeslaCoilCoin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tokugawa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TurboCoin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;UniversalRoyalCoin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;VeriCoin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Voxels&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;WhiteCoin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;XDE II&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ZClassic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;42-coin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Aeternity&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;AmsterdamCoin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ArtByte&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Aventus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BigUp&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BitCentavo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BitcoinZ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BitSerial&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BlockCAT&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BOScoin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BurstOcean&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cardano&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CHNCoin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Coinonat&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cream&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CryptoPing&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dash&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Desire&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DimonCoin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dubstep&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;EDRCoin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Emercoin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eternity&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;EventChain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fastcoin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;FlutterCoin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Future Digital Currency&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;GeyserCoin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;GoldUnionCoin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Halcyon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;HOdlcoin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ICON&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Influxcoin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;IslaCoin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;KiloCoin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;LBRY Credits&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;LiteCoin Ultra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Magnetcoin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Memetic / PepeCoin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MobileGo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MSD&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;netBit&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;NuShares&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Operand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pascal Coin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Phore&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Po.et&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Primecoin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PutinCoin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;RaiBlocks&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;RHFCoin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rubycoin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SatoshiMadness&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Siacoin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Snovio&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SportsCoin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Storjcoin X&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Swisscoin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TenX&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ToaCoin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Truckcoin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;United Bitcoin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;VectorAI&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Viuly&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;WayGuide&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;X-Coin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;YOYOW&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ZSEcoin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;AdShares&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Alphabit&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Arcade Token&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;AudioCoin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BeaverCoin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BitBar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bitcoin Scrypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bitmark&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Blackmoon Crypto&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bodhi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BTCtalkcoin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Canada eCoin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;ChainCoin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CoExistCoin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Corethum&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CryptoCarbon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dalecoin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Decred&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Digital Rupees&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dovu&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;eBitcoinCash&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ellaism&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;EquiTrader&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Etherparty&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Factom&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;FlappyCoin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;FuelCoin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;GAY Money&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gold Pressed Latinum&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Groestlcoin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;HiCoin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;I0Coin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;India Coin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;InvestFeed&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Karbowanec&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kyber Network&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Linx&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Machinecoin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mavro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Miners&apos; Reward Token&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MoneyCoin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;NAV Coin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;NobleCoin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Omicron&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Paccoin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PeopleCoin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PizzaCoin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PRCoin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prototanium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;QubitCoin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Regalcoin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;RouletteToken&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sakuracoin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sharechain&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Smart Investment Fund Token&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sovereign Hero&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Steem&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SuperNET&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Target Coin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Theresa May Coin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Triangles&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ultimate Secure Cash&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Useless Ethereum Token&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Viberate&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wagerr&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Woodcoin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;XYLO&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;ZetaMicron&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;2GIVE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Adzcoin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AltCommunity Coin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Argentum&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AurumCoin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BERNcash&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BitBean&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bitcoin2x&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BitQuark&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BlakeStar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bongger&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bulwark&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cannation&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Change&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coimatic 3.0&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;COSS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CryptoInsight&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Darcrus&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DeltaCredits&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DigitalNote&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dragonchain&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ECC&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Elysium&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ergo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ethos&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fantomcoin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Flaxscript&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;FUNCoin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;GeertCoin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;GoldCoin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gulden&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;HitCoin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;iBTC&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Infinitecoin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;IoT Chain&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kayicoin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LandCoin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LiteBitcoin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Maecenas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MCAP&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MinexCoin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mooncoin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;NEM&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Novacoin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;onG.social&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Paragon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PetroDollar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PlexCoin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;President Trump&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pulse&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qvolta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Request Network&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Royalties&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sand Coin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SHIELD&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SmartCoin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Spectrecoin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Steps&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Swapcoin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;TeamUp&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tigercoin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Triggers&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;UNCoin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;VapersCoin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Virtacoin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;WARP&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wowcoin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Yellow Token&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Zoin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Adelphoi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;AllSafe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Aragon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Atmos&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BCAP&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BitAlphaCoin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bitcoin Plus&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;bitJob&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BIXC&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BnrtxCoin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BT2 [CST]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CaliphCoin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Centra&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ClubCoin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Confido&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Crypto&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cyder&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Decentraland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Digital Credits&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DopeCoin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;eBIT&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Elementrem&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;EOS&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Etheriya&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Faceblock&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;FirstBlood&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Freicoin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gapcoin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gnosis&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;GridCoin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;HempCoin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hyper TV&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Incent&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Interstellar Holdings&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Joincoin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kurrent&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Link Platform&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;LUXCoin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Masternodecoin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MindCoin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Monetha&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;NamoCoin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nexus&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;OHM&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;P7Coin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Peercoin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pirl&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PotCoin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prospectors Gold&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Quatloo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ReeCoin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;RonPaulCoin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SafeCoin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Shadow Token&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Slimcoin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SONM&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Status&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Super Bitcoin [Futures]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;TajCoin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;TheCreed&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;TrezarCoin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;UGAIN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uro&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Viacoin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;WA Space&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;WMCoin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;XTD Coin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Zero&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;300 Token&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Agoras Tokens&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;AnarchistsPrime&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Artex Coin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Avoncoin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BillaryCoin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bitcloud&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BitConnect&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BitShares&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BlockCDN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bowhead&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BuzzCoin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CarTaxi Token&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chronobank&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CoinonatX&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Creatio&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CryptoWorldX Token&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dashcoin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Destiny&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dinastycoin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dutch Coin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;EggCoin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;EMoneyPower&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;EthBet&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Everex&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fazzcoin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Flycoin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;FuturXe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gifto&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Golem&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Halloween Coin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;HollyWoodCoin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Iconic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ink&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;iTicoin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;LeaCoin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Litecred&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Magnum&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mercury&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Modum&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MTMGaming&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;NetCoin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;NVO&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Opescoin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pascal Lite&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Photon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;PokeCoin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Primulon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;PX&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Raiden Network Token&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rialto&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Runners&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Save and Gain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SIBCoin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Soarcoin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SportyFi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stox&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SydPak&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TeraCoin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TodayCoin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TrueFlip&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Unitus&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;VegasCoin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;VIVO&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;WeAreSatoshi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Xaucoin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Zayedcoin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Zurcoin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Achain&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Akuya Coin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AppleCoin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ATLANT&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bastonet&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bismuth&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bitcoin Fast&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BITFID&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bitvolt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BLOCKv&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BridgeCoin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CacheCoin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CBD Crystals&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ClearPoll&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;COMSA [XEM]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Crown&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CyberCoin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Debitcoin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DigiCube&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dollarcoin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;EA Coin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Elcoin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Enigma&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ethereum Gold&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ExclusiveCoin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;FireFlyCoin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Franko&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;GameLeagueCoin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;GlobalBoost-Y&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grantcoin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hedge&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;HunterCoin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Impact&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Internet of People&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jin Coin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kronecoin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lex4All&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;LuckChain&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MarteXcoin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MicroMoney&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Monero&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mysterium&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Newbium&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;OCOW&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;OX Fina&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PayPie&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pioneer Coin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PostCoin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Project Decorum&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Quantum&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Red Pulse&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ripto Bux&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SACoin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sequence&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SkinCoin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Solarflarecoin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;StarCredits&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sugar Exchange&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TaaS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;The ChampCoin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tracto&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ubiq&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Upfiring&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Veros&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vsync&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;WINCOIN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Xonecoin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ZenGold&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Acoin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ALIS&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;APX&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ATMChain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bata&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bit20&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bitcoin Gold&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bitgem&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bitz&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BLUE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BritCoin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CageCoin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CCMiner&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Concoin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CRTCoin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CyberMiles&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DECENT&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DigiPulse&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DomRaider&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;EagleCoin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Electra&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Enjin Coin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ethereum Lite&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Expanse&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;First Bitcoin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;FrankyWillCoin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;GameUnits&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;GlobalCoin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Greencoin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Helleniccoin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hush&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ImpulseCoin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Internet of Things&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jinn&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kubera Coin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LIFE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Luna Coin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MarxCoin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MiloCoin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Moneta&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MyWish&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;NewYorkCoin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Octanox&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oxycoin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Peacecoin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PiplCoin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PoSToken&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Project-X&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Quantum Resistant Ledger&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;RedCoin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rise&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Safe Exchange Coin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sexcoin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Skycoin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Solaris&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Starta&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sumokoin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;TagCoin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;The Cypherfunks&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tradecoin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;UFO Coin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uquid Coin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Version&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;vTorrent&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Wings&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;XP&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zennies&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;AdEx&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;AlpaCoin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ARbit&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Atomic Coin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Beatcoin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BitAsean&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bitcoin Red&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bitland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BlackCoin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BOAT&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BTCMoon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CampusCoin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Centurion&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cobinhood&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Copico&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Crypto Bullion&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cypher&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Decision Token&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Digital Money Bits&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dotcoin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;eBitcoin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Elixir&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;EOT Token&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Etheroll&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Facecoin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;FirstCoin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;FuckToken&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gas&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;GoByte&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Grimcoin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hexx&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;HyperStake&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Independent Money System&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Interzone&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Joulecoin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;KushCoin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;LinkedCoin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lykke&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Matchpool&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Minereum&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Money&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Natcoin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nimiq&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;OKCash&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pabyosi Coin (Special)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peerplays&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PIVX&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Power Ledger&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Protean&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;QuazarCoin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Regacoin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Roofs&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SagaCoin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ShadowCash&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sling&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SoonCoin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Stealthcoin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SuperCoin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tao&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;TheGCCcoin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Triaconta&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ulatech&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;USDe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;VIBE&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;WaBi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;WomenCoin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;XTRABYTES&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zetacoin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;adToken&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ALQO&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ArcticCoin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Augur&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bela&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bitbase&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bitcoin Silver&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bitok&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Blackstar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bolenum&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BTSR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CannabisCoin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ChainLink&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cofound.it&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CorgiCoin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CryptoEscudo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DAO.Casino&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DeepOnion&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Digitalcoin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DPAY&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ebittree Coin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;eLTC&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ERC20&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ETHGAS&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;FairCoin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Flash&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;FujiCoin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;GBCGoldCoin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;GOLD Reward Token&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Growers International&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;High Gain&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;I/O Coin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Indorse Token&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;InvisibleCoin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Karmacoin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lampix&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lisk&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Macro&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MaxCoin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mineum&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Monkey Project&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Neblio&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;NodeCoin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;OmiseGO&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pakcoin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pepe Cash&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PlatinumBAR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Presearch&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Psilocybin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Quebecoin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Remicoin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Royal Kingdom Coin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SALT&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sharkcoin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SmartBillions&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SpaceCoin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Steem Dollars&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Suretly&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tattoocoin (Limited Edition)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tierion&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;TrickyCoin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;UltraCoin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;UtaCoin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;VIP Tokens&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;WalletBuildersCoin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;WorldCoin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Yacoin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zeusshield&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Abncoin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aion&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;AntiBitcoin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Asiadigicoin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bancor&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BiosCrypto&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bitcoin 21&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bitdeal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bitswift&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BlockPay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Breakout&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bytom&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Casino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Circuits of Value&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Compcoin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Credo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Curecoin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DavorCoin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Diamond&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DNotes&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E-coin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Einsteinium&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;EncryptoTel [WAVES]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ethereum Cash&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Evotion&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;FIMKrypto&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Footy Cash&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gambit&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Global Business Revolution&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Goodomy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hawala.Today&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hubii Network&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;iEthereum&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Intelligent Trading Tech&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;JavaScript Token&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kolion&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;LetItRide&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;LoMoCoin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mao Zedong&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Metal Music Coin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mutual Coin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Neutron&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;OBITS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Orlycoin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Payfair&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pillar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PopularCoin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PRIZM&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Qora&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;RChain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rimbit&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;RussiaCoin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SegWit2x [Futures]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SISA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SOILcoin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SproutsExtreme&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;StrikeBitClub&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Synergy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TeslaCoin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Topaz Coin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tychocoin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Universe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Verify&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Voyacoin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wi Coin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Xenon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ZCoin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;808Coin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Agrello&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Animecoin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Asch&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Axiom&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Billionaire Token&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;bitCNY&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bitcore&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;bitSilver&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Blockchain Index&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BowsCoin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Byteball Bytes&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cash Poker Pro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chronologic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Colossuscoin V2&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Creativecoin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Crystal Clear&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dashs&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DeusCoin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;district0x&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dynamic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;EGO&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Emphy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethbits&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;EverGreenCoin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Feathercoin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;FlypMe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;FuzzBalls&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Giga Watt Token&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Golfcoin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Happy Creator Coin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Iconomi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Innova&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ixcoin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;KingN Coin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Legends Room&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;LiteDoge&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MaidSafeCoin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mercury Protocol&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Moeda Loyalty Points&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Musicoin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Netko&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nxt&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Opus&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Patientory&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PiCoin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;POLY AI&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Printerium&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;QASH&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rasputin Online Coin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;RichCoin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rupaya&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Scorecoin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SIGMAcoin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Social&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spots&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Stratis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sync&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Terracoin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TokenCard&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TrumpCoin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Unity Ingot&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Veltor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Voise&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;WeTrust&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Xaurum&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Zcash&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;8Bit&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Aeon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AmberCoin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Argus&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Authorship&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BestChain&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BitBoost&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BitcoinCashScrypt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;bitqy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BlazeCoin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bonpay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BumbaCoin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cappasity&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cheapcoin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Coin2.1&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Counterparty&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cryptojacks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DarkLisk&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Denarius&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DigitalPrice&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dreamcoin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ecobit&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;EmberCoin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eroscoin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eurocoin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;FAPcoin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;FLiK&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;FundYourselfNow&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Genaro Network&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GoldMaxCoin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GulfCoin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hive&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ICO OpenLedger&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Infinity Economics&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;IOTA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;KekCoin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;LAthaan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Litecoin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Magi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MediShares&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mintcoin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MorningStar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;NEO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;NuBits&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Onix&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ParallelCoin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Phantomx&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PLNcoin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Primalbase Token&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pura&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Qwark&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Revain&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;RSGPcoin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Santa Coin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Shift&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SmartMesh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Speedcash&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sterlingcoin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SwapToken&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;TechShares&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Time New Bank&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tristar Coin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;UniCoin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vault Coin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Virtacoinplus&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Waves&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wowecoin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;YENTEN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zonecoin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AdCoin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Allion&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AquariusCoin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ATMCoin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BatCoin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bitair&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bitcoin Planet&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;bitGold&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bitzeny&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BlueCoin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BT1 [CST]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Californium&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ccore&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CloakCoin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Condensate&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CryptCoin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cycling Coin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DecentBet&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Digital Bullion Gold&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Donationcoin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;EarthCoin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Electroneum&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Environ&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ethereum Movie Venture&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;EXRNchain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;First Bitcoin Capital&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Frazcoin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;GanjaCoin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;GlobalToken&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Grid+&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;HelloGold&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hyper&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;IncaKoin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Internxt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;JobsCoin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;KuCoin Shares&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Linda&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lunyr&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Master Swiscoin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mincoin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MonetaryUnit&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Namecoin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nexium&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;OctoCoin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oyster Pearl&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PeepCoin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pirate Blocks&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PoSW Coin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Propy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Quark&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ReddCoin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rivetz&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Safe Trade Coin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SHACoin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Slevin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SongCoin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Startcoin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SunContract&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;TAGRcoin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;The Vegan Initiative&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;TransferCoin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;UG Token&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;UR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vertcoin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vulcano&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Wink&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;XPlay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Zephyr&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Accelerator Network&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AirSwap&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Antilitecoin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Astro&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bankcoin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BipCoin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bitcoin Cash&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BitDice&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BitTokens&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Blockpool&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Breakout Stake&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;C-Bit&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CasinoCoin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Civic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CompuCoin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CrevaCoin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CVCoin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DaxxCoin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DIBCOIN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dogecoin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E-Dinar Coin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Elacoin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Energo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ethereum Classic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Exchange Union&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;FinCoin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;FORCE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;GameBet Coin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Global Currency Reserve&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;GPU Coin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;HealthyWormCoin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Humaniq&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;iExec RLC&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;IntenseCoin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jetcoin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Komodo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LeviarCoin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Loopring&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Marijuanacoin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MetalCoin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MonacoCoin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MyBit Token&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NevaCoin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Obsidian&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ormeus Coin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;PayPeer&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;PinkCoin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Populous&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ProChain&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Qtum&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rcoin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ripio Credit Network&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Russian Miner Coin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Selfiecoin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SixEleven&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sojourn&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Stakecoin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;StrongHands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Syscoin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tether&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TopCoin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tyrocoin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Unobtanium&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Veritaseum&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;VPNCoin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wild Beast Block&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;XGOX&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zeitcoin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;9COIN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Aerium&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ambrosus&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Aricoin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Autonio&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BetaCoin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;bitBTC&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BitcoinDark&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bitradio&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BlazerCoin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Boolberry&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BunnyCoin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Capricoin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ChessCoin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Coin(O)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Coupecoin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cryptonex&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Darsek&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dent&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DigixDAO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DROXNE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;EcoCoin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Embers&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eryllium&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;EuropeCoin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Farad&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Flixxo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;FunFair&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Genesis Vision&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;GoldPieces&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guncoin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;HoboNickels&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ICOBID&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Infinity Pay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;iQuant&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;KibiCoin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;LAToken&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;LiteCoin Gold&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MagicCoin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Megacoin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MMXVI&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mothership&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;NEO GOLD&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nuls&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Opal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ParkByte&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Philosopher Stones&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PlusCoin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Primas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pure&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;RabbitCoin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;RevolverCoin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rubies&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Santiment Network Token&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Shilling&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SmileyCoin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sphere&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;STEX&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Swarm City&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;TEKcoin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Titcoin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Trollcoin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Unify&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vcash&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;VirtualCoin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Waves Community Token&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wyvern&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yescoin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ZoZoCoin&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:symbol:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;BTWTY&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BCH&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ETC&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;DASH&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NEO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;GBYTE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BT1&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;USDT&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;ZEC&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MIOTA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;42&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;OMG&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;HSR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;LTC&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;B2X&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;FCT&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PBT&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;QTUM&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;NANOX&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BTG&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;EOS&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;ETH&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BITBTC&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BTC&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;RMC&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;GNO&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;XMR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BCC&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:name:nk]&#10;[none:Forecast Indicator:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Abncoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Advanced Internet Blocks&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Aion&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Altcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;AntiBitcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Ardor&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Asiadigicoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Auroracoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Bancor&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;BenjiRolls&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;BiosCrypto&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;BitBay&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Bitcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Bitcoin 21&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Bitcoin Unlimited (Futures)&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Bitdeal&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Bitpark Coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Bitswift&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Blakecoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;BlockPay&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Bolivarcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Breakout&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Bubble&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Bytom&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;CannaCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Casino&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;ChanCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Circuits of Value&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Coimatic 2.0&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Compcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;CORION&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Credo&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;CryptoForecast&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Curecoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;DAPPSTER&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;DavorCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Delphy&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Diamond&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;DigitalDevelopersFund&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;DNotes&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;DraftCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;E-coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;eBoost&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Einsteinium&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;ELTCOIN&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;EncryptoTel [WAVES]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;eREAL&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Ethereum Cash&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;ETHLend&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Evotion&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Falcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;FIMKrypto&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;FlavorCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Footy Cash&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Fujinto&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Gambit&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;GCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Global Business Revolution&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;GoldBlocks&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Goodomy&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;GuccioneCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Hawala.Today&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;High Voltage&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Hubii Network&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;iBank&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;iEthereum&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;InfChain&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Intelligent Trading Tech&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;ION&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;JavaScript Token&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;KashhCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Kolion&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;LanaCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;LetItRide&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;LiteBar&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;LoMoCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;MACRON&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Mao Zedong&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;MazaCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Metal Music Coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Minex&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Monster Byte&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Mutual Coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Nekonium&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Neutron&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;NoLimitCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;OBITS&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Omni&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Orlycoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Pandacoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Payfair&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Pesetacoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Pillar&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;PlayerCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;PopularCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;President Johnson&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;PRIZM&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Publica&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Qora&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Quotient&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;RChain&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Renos&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Rimbit&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;RoyalCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;RussiaCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;SaluS&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;SegWit2x [Futures]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;ShellCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;SISA&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;SmartCash&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;SOILcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;SpankChain&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;SproutsExtreme&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Stellar&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;StrikeBitClub&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;SwagBucks&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Synergy&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Tattoocoin (Standard Edition)&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;TeslaCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;TIES Network&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Topaz Coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Trident Group&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Tychocoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;UnbreakableCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Universe&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Valorbit&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Verify&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Virta Unique Coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Voyacoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Walton&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Wi Coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Worldcore&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Xenon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;YashCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;ZCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Zilbercoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;1337&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Abjcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;adToken&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Aidos Kuneen&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;ALQO&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;ANRYZE&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;ArcticCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;AsiaCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Augur&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;B3Coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Bela&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;BioBar&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Bitbase&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Bitcoin Silver&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Bitcurrency&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Bitok&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Bitstar&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Blackstar&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Blocknet&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Bolenum&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;BRAT&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;BTSR&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Bytecoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;CannabisCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Cashme&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;ChainLink&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Cindicator&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Cofound.it&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Comet&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;CorgiCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Creditbit&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;CryptoEscudo&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Cubits&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;DAO.Casino&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Datum&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;DeepOnion&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;DFSCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Digitalcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Dix Asset&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;DPAY&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;E4ROW&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Ebittree Coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Eidoo&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;eLTC&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;EncryptoTel [ETH]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;ERC20&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Ethereum&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;ETHGAS&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Evil Coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;FairCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Filecoin [Futures - 6 Month]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Flash&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Fonziecoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;FujiCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;GAIA&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;GBCGoldCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;GlassCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;GOLD Reward Token&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Golos Gold&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Growers International&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;HarmonyCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;High Gain&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;HTMLCOIN&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;I/O Coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;iDice&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Indorse Token&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;InsaneCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;InvisibleCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Janus&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Karmacoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Kobocoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Lampix&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;LePen&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Lisk&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;LockChain&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Macro&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;MantraCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;MaxCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Metal&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Mineum&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;MojoCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Monkey Project&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;MustangCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Neblio&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Neuro&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;NodeCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;OAX&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;OmiseGO&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Orbitcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Pakcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;PayCon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Pepe Cash&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Piggycoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;PlatinumBAR&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;PonziCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Presearch&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Privatix&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Psilocybin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Qibuck Asset&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Quebecoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Rawcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Remicoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Riecoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Royal Kingdom Coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Rupee&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;SALT&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;SecureCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Sharkcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;SingularDTV&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;SmartBillions&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;SocialCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;SpaceCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Sprouts&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Steem Dollars&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Stress&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Suretly&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Synereo&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Tattoocoin (Limited Edition)&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;TeslaCoilCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Tierion&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Tokugawa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;TrickyCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;TurboCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;UltraCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;UniversalRoyalCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;UtaCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;VeriCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;VIP Tokens&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Voxels&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;WalletBuildersCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;WhiteCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;WorldCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;XDE II&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Yacoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;ZClassic&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Zeusshield&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;8Bit&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Achain&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Aerium&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Akuya Coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Ambrosus&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;AppleCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Aricoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;ATLANT&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Autonio&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Bastonet&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;BetaCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Bismuth&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;bitBTC&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Bitcoin Fast&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;BitcoinDark&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;BITFID&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Bitradio&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Bitvolt&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;BlazerCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;BLOCKv&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Boolberry&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;BridgeCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;BunnyCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;CacheCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Capricoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;CBD Crystals&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;ChessCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;ClearPoll&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Coin(O)&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;COMSA [XEM]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Coupecoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Crown&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Cryptonex&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;CyberCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Darsek&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Debitcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Dent&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;DigiCube&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;DigixDAO&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Dollarcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;DROXNE&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;EA Coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;EcoCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Elcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Embers&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Enigma&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Eryllium&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Ethereum Gold&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;EuropeCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;ExclusiveCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Farad&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;FireFlyCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Flixxo&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Franko&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;FunFair&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;GameLeagueCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Genesis Vision&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;GlobalBoost-Y&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;GoldPieces&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Grantcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Guncoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Hedge&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;HoboNickels&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;HunterCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;ICOBID&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Impact&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Infinity Pay&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Internet of People&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;iQuant&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Jin Coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;KibiCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Kronecoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;LAToken&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Lex4All&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;LiteCoin Gold&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;LuckChain&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;MagicCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;MarteXcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Megacoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;MicroMoney&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;MMXVI&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Monero&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Mothership&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Mysterium&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;NEO GOLD&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Newbium&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Nuls&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;OCOW&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Opal&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;OX Fina&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;ParkByte&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;PayPie&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Philosopher Stones&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Pioneer Coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;PlusCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;PostCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Primas&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Project Decorum&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Pure&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Quantum&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;RabbitCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Red Pulse&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;RevolverCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Ripto Bux&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Rubies&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;SACoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Santiment Network Token&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Sequence&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Shilling&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;SkinCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;SmileyCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Solarflarecoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Sphere&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;StarCredits&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;STEX&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Sugar Exchange&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Swarm City&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;TaaS&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;TEKcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;The ChampCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Titcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Tracto&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Trollcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Ubiq&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Unify&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Upfiring&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Vcash&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Veros&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;VirtualCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Vsync&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Waves Community Token&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;WINCOIN&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Wyvern&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Xonecoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Yescoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;ZenGold&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;ZoZoCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;42-coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Adelphoi&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Agoras Tokens&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;AllSafe&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;AnarchistsPrime&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Aragon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Artex Coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Atmos&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Avoncoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;BCAP&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;BillaryCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;BitAlphaCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Bitcloud&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Bitcoin Plus&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;BitConnect&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;bitJob&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;BitShares&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;BIXC&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;BlockCDN&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;BnrtxCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Bowhead&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;BT2 [CST]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;BuzzCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;CaliphCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;CarTaxi Token&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Centra&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Chronobank&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;ClubCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;CoinonatX&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Confido&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Creatio&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Crypto&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;CryptoWorldX Token&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Cyder&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Dashcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Decentraland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Destiny&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Digital Credits&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Dinastycoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;DopeCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Dutch Coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;eBIT&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;EggCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Elementrem&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;EMoneyPower&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;EOS&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;EthBet&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Etheriya&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Everex&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Faceblock&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Fazzcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;FirstBlood&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Flycoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Freicoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;FuturXe&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Gapcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Gifto&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Gnosis&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Golem&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;GridCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Halloween Coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;HempCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;HollyWoodCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Hyper TV&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Iconic&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Incent&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Ink&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Interstellar Holdings&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;iTicoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Joincoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Kin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Kurrent&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;LeaCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Link Platform&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Litecred&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;LUXCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Magnum&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Masternodecoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Mercury&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;MindCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Modum&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Monetha&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;MTMGaming&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;NamoCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;NetCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Nexus&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;NVO&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;OHM&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Opescoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;P7Coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Pascal Lite&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Peercoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Photon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Pirl&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;PokeCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;PotCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Primulon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Prospectors Gold&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;PX&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Quatloo&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Raiden Network Token&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;ReeCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Rialto&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;RonPaulCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Runners&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;SafeCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Save and Gain&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Shadow Token&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;SIBCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Slimcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Soarcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;SONM&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;SportyFi&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Status&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Stox&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Super Bitcoin [Futures]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;SydPak&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;TajCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;TeraCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;TheCreed&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;TodayCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;TrezarCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;TrueFlip&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;UGAIN&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Unitus&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Uro&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;VegasCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Viacoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;VIVO&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;WA Space&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;WeAreSatoshi&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;WMCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Xaucoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;XTD Coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Zayedcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Zero&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Zurcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;2GIVE&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Aces&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Aeon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;AirToken&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;AmberCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Antimatter&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Argus&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;ATBCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Authorship&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Basic Attention Token&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;BestChain&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Birds&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;BitBoost&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Bitcoin Diamond [Futures]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;BitcoinCashScrypt&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;bitEUR&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;bitqy&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;bitUSD&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;BlazeCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Blocktix&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Bonpay&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;BriaCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;BumbaCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Cabbage&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Cappasity&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Catcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Cheapcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Clams&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Coin2.1&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;COMSA [ETH]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Counterparty&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;CrowdCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Cryptojacks&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;CybCSec&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;DarkLisk&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;DCORP&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Denarius&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;DigiByte&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;DigitalPrice&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Dollar Online&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Dreamcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;e-Gulden&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Ecobit&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Elastic&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;EmberCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Energycoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Eroscoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Ethereum Dark&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Eurocoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;ExchangeN&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;FAPcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Firecoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;FLiK&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Francs&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;FundYourselfNow&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;GameCredits&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Genaro Network&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Global Tour Coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;GoldMaxCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Granite&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;GulfCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;HEAT&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Hive&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Huncoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;ICO OpenLedger&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Ignis [Futures]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Infinity Economics&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;International Diamond&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;IOTA&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Jewels&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;KekCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Kore&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;LAthaan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;LevoPlus&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Litecoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;LottoCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Magi&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Marscoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;MediShares&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Metaverse ETP&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Mintcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;MonaCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;MorningStar&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Myriad&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;NEO&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;NEVERDIE&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;NuBits&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Oceanlab&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Onix&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;OsmiumCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;ParallelCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Paypex&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Phantomx&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;PinkDog&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;PLNcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;PosEx&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Primalbase Token&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;ProCurrency&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Pura&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Quantstamp&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Qwark&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;REAL&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Revain&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Ripple&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;RSGPcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Rustbits&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Santa Coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Senderon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Shift&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Skeincoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;SmartMesh&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;SolarCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Speedcash&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;StarCash Network&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Sterlingcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Substratum&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;SwapToken&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;T-coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;TechShares&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Tezos (Pre-Launch)&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Time New Bank&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Torcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Tristar Coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;UAHPay&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;UniCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Unrealcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Vault Coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;VeriumReserve&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Virtacoinplus&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;vSlice&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Waves&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Wild Crypto&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Wowecoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Xios&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;YENTEN&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;ZenCash&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Zonecoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;0x&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Accelerator Network&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Adzcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;AirSwap&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;AltCommunity Coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Antilitecoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Argentum&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Astro&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;AurumCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Bankcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;BERNcash&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;BipCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;BitBean&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Bitcoin Cash&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Bitcoin2x&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;BitDice&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;BitQuark&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;BitTokens&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;BlakeStar&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Blockpool&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Bongger&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Breakout Stake&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Bulwark&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;C-Bit&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Cannation&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;CasinoCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Change&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Civic&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Coimatic 3.0&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;CompuCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;COSS&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;CrevaCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;CryptoInsight&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;CVCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Darcrus&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;DaxxCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;DeltaCredits&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;DIBCOIN&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;DigitalNote&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Dogecoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Dragonchain&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;E-Dinar Coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;ECC&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Elacoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Elysium&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Energo&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Ergo&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Ethereum Classic&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Ethos&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Exchange Union&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Fantomcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;FinCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Flaxscript&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;FORCE&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;FUNCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;GameBet Coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;GeertCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Global Currency Reserve&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;GoldCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;GPU Coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Gulden&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;HealthyWormCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;HitCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Humaniq&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;iBTC&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;iExec RLC&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Infinitecoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;IntenseCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;IoT Chain&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Jetcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Kayicoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Komodo&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;LandCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;LeviarCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;LiteBitcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Loopring&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Maecenas&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Marijuanacoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;MCAP&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;MetalCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;MinexCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;MonacoCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Mooncoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;MyBit Token&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;NEM&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;NevaCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Novacoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Obsidian&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;onG.social&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Ormeus Coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Paragon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;PayPeer&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;PetroDollar&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;PinkCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;PlexCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Populous&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;President Trump&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;ProChain&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Pulse&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Qtum&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Qvolta&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Rcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Request Network&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Ripio Credit Network&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Royalties&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Russian Miner Coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Sand Coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Selfiecoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;SHIELD&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;SixEleven&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;SmartCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Sojourn&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Spectrecoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Stakecoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Steps&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;StrongHands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Swapcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Syscoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;TeamUp&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Tether&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Tigercoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;TopCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Triggers&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Tyrocoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;UNCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Unobtanium&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;VapersCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Veritaseum&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Virtacoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;VPNCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;WARP&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Wild Beast Block&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Wowcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;XGOX&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Yellow Token&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Zeitcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Zoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;300 Token&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;AdEx&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Agrello&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;AlpaCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Animecoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;ARbit&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Asch&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Atomic Coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Axiom&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Beatcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Billionaire Token&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;BitAsean&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;bitCNY&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Bitcoin Red&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Bitcore&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Bitland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;bitSilver&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;BlackCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Blockchain Index&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;BOAT&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;BowsCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;BTCMoon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Byteball Bytes&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;CampusCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Cash Poker Pro&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Centurion&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Chronologic&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Cobinhood&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Colossuscoin V2&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Copico&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Creativecoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Crypto Bullion&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Crystal Clear&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Cypher&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Dashs&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Decision Token&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;DeusCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Digital Money Bits&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;district0x&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Dotcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Dynamic&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;eBitcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;EGO&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Elixir&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Emphy&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;EOT Token&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Ethbits&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Etheroll&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;EverGreenCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Facecoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Feathercoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;FirstCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;FlypMe&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;FuckToken&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;FuzzBalls&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Gas&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Giga Watt Token&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;GoByte&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Golfcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Grimcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Happy Creator Coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Hexx&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Honey&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;HyperStake&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Iconomi&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Independent Money System&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Innova&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Interzone&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Ixcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Joulecoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;KingN Coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;KushCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Legends Room&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;LinkedCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;LiteDoge&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Lykke&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;MaidSafeCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Matchpool&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Mercury Protocol&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Minereum&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Moeda Loyalty Points&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Money&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Musicoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Natcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Netko&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Nimiq&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Nxt&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;OKCash&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Opus&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Pabyosi Coin (Special)&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Patientory&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Peerplays&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;PiCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;PIVX&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;POLY AI&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Power Ledger&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Printerium&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Protean&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;QASH&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;QuazarCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Rasputin Online Coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Regacoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;RichCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Roofs&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Rupaya&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;SagaCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Scorecoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;ShadowCash&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;SIGMAcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Sling&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Social&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;SoonCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Spots&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Stealthcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Stratis&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;SuperCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Sync&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Tao&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Terracoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;TheGCCcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;TokenCard&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Triaconta&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;TrumpCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Ulatech&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Unity Ingot&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;USDe&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Veltor&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;VIBE&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Voise&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;WaBi&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;WeTrust&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;WomenCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Xaurum&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;XTRABYTES&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Zcash&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Zetacoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;808Coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;AdShares&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;AgrolifeCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Alphabit&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Anoncoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Arcade Token&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Aseancoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;AudioCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;B2B&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;BeaverCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Binance Coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;BitBar&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;BitCoal&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Bitcoin Scrypt&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Bitcrystals&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Bitmark&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;BitSoar&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Blackmoon Crypto&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;BlockMason Credit Protocol&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Bodhi&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Braincoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;BTCtalkcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Bytecent&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Canada eCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Cashcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;ChainCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Chronos&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;CoExistCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;ColossusCoinXT&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Corethum&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Credence Coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;CryptoCarbon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Cthulhu Offerings&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Dalecoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Databits&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Decred&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Deutsche eMark&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Digital Rupees&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Divi&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Dovu&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;DynamicCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;eBitcoinCash&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;eGold&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Ellaism&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;EncrypGen&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;EquiTrader&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;EtherDoge&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Etherparty&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Everus&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Factom&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;FedoraCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;FlappyCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;FoldingCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;FuelCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;G3N&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;GAY Money&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Gimli&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Gold Pressed Latinum&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Golos&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Groestlcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Happycoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;HiCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Hshare&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;I0Coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;ICOS&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;India Coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;InPay&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;InvestFeed&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;iXledger&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Karbowanec&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Kittehcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Kyber Network&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;LEOcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Linx&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;LLToken&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Machinecoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Maker&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Mavro&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;MergeCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Miners&apos; Reward Token&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Moin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;MoneyCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Musiconomi&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;NAV Coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Network Token&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;NobleCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Nyancoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Omicron&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;OracleChain&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Paccoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;PayCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;PeopleCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;PIECoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;PizzaCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Polybius&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;PRCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;PrismChain&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Prototanium&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Qbao&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;QubitCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Ratecoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Regalcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Ride My Car&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;RouletteToken&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Rupaya [OLD]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Sakuracoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;SecretCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Sharechain&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Signatum&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Smart Investment Fund Token&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Social Send&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Sovereign Hero&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;SpreadCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Steem&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Streamr DATAcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;SuperNET&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Syndicate&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Target Coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;TerraNova&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Theresa May Coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Tokes&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Triangles&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;TrustPlus&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Ultimate Secure Cash&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Universal Currency&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Useless Ethereum Token&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Verge&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Viberate&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;VoteCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Wagerr&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;WhaleCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Woodcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;XCurrency&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;XYLO&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;ZCash Gold&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;ZetaMicron&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;10M Token&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;AdCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Aeternity&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Allion&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;AmsterdamCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;AquariusCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;ArtByte&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;ATMCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Aventus&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;BatCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;BigUp&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Bitair&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;BitCentavo&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Bitcoin Planet&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;BitcoinZ&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;bitGold&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;BitSerial&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Bitzeny&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;BlockCAT&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;BlueCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;BOScoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;BT1 [CST]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;BurstOcean&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Californium&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Cardano&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Ccore&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;CHNCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;CloakCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Coinonat&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Condensate&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Cream&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;CryptCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;CryptoPing&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Cycling Coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Dash&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;DecentBet&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Desire&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Digital Bullion Gold&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;DimonCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Donationcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Dubstep&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;EarthCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;EDRCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Electroneum&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Emercoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Environ&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Eternity&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Ethereum Movie Venture&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;EventChain&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;EXRNchain&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Fastcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;First Bitcoin Capital&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;FlutterCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Frazcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Future Digital Currency&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;GanjaCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;GeyserCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;GlobalToken&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;GoldUnionCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Grid+&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Halcyon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;HelloGold&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;HOdlcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Hyper&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;ICON&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;IncaKoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Influxcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Internxt&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;IslaCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;JobsCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;KiloCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;KuCoin Shares&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;LBRY Credits&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Linda&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;LiteCoin Ultra&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Lunyr&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Magnetcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Master Swiscoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Memetic / PepeCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Mincoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;MobileGo&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;MonetaryUnit&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;MSD&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Namecoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;netBit&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Nexium&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;NuShares&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;OctoCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Operand&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Oyster Pearl&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Pascal Coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;PeepCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Phore&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Pirate Blocks&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Po.et&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;PoSW Coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Primecoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Propy&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;PutinCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Quark&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;RaiBlocks&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;ReddCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;RHFCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Rivetz&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Rubycoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Safe Trade Coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;SatoshiMadness&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;SHACoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Siacoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Slevin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Snovio&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;SongCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;SportsCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Startcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Storjcoin X&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;SunContract&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Swisscoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;TAGRcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;TenX&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;The Vegan Initiative&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;ToaCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;TransferCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Truckcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;UG Token&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;United Bitcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;UR&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;VectorAI&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Vertcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Viuly&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Vulcano&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;WayGuide&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Wink&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;X-Coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;XPlay&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;YOYOW&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Zephyr&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;ZSEcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;9COIN&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Acoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Aeron&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;ALIS&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Ammo Rewards&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;APX&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Ark&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;ATMChain&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;AvatarCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Bata&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;BiblePay&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Bit20&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Bitcedi&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Bitcoin Gold&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;BitcoinX [Futures]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Bitgem&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;BitSend&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Bitz&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Blitzcash&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;BLUE&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;BoostCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;BritCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Burst&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;CageCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Carboncoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;CCMiner&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;CHIPS&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;CoinDash&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Concoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Crave&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;CRTCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Cryptonite&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;CyberMiles&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;DAS&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;DECENT&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Dentacoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;DigiPulse&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Dimecoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;DomRaider&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;DubaiCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;EagleCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Edgeless&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Electra&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Emerald Crypto&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Enjin Coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Espers&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Ethereum Lite&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;eUSD&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Expanse&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Fargocoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;First Bitcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;FlorinCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;FrankyWillCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;FutCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;GameUnits&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;GeoCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;GlobalCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;GoldReserve&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Greencoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;GXShares&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Helleniccoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;HODL Bucks&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Hush&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;iCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;ImpulseCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;InflationCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Internet of Things&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;IrishCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Jinn&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;KickCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Kubera Coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Lazaruscoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;LIFE&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Litecoin Plus&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Luna Coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Magnet&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;MarxCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Melon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;MiloCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;MobileCash&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Moneta&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Motocoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;MyWish&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;NeosCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;NewYorkCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Numeraire&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Octanox&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Open Trading Network&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Oxycoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Particl&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Peacecoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Phoenixcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;PiplCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Pluton&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;PoSToken&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Prime-XI&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Project-X&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;PureVidz&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Quantum Resistant Ledger&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Radium&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;RedCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;REX&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Rise&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;RubleBit&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Safe Exchange Coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Sativacoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Sexcoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Shorty&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Skycoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;SnakeEyes&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Solaris&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Sphre AIR&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Starta&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Storj&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Sumokoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Swing&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;TagCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Tellurion&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;The Cypherfunks&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;TittieCoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Tradecoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;TRON&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;UFO Coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Unikoin Gold&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Uquid Coin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;VeChain&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Version&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Visio&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;vTorrent&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;WavesGo&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Wings&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;X2&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;XP&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Yocoin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Zennies&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;ZrCoin&quot;</bucket>
            </map-pri>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimación&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
    </datasource>
    <datasource caption='Ejercicio1' inline='true' name='federated.1igvexc0iup5at14xo3dc1qq969o' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Ejercicio1' name='excel-direct.033l6q11273ko71g0vple01itnem'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/alberto/Desktop/KeepCodingPracticas/KeepCoding-BD-Visualizacion/Practica/Ficheros/CriptoMarket.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation all='true' name='Ordenes+' type='union'>
          <columns header='yes'>
            <column datatype='integer' name='Filas ID' />
            <column datatype='string' name='Orden ID' />
            <column datatype='date' name='Fecha Orden' />
            <column datatype='string' name='Comprador ID' />
            <column datatype='string' name='Comprador' />
            <column datatype='string' name='Exchanges' />
            <column datatype='string' name='Pais' />
            <column datatype='string' name='Ciudad' />
            <column datatype='string' name='Estado' />
            <column datatype='integer' name='Codigo postal' />
            <column datatype='string' name='Region' />
            <column datatype='string' name='Clases de cripto' />
            <column datatype='string' name='Criptomonedas' />
            <column datatype='real' name='Compras' />
            <column datatype='integer' name='Cantidad' />
            <column datatype='real' name='Coste' />
            <column datatype='real' name='Ventas' />
            <column datatype='string' name='Sheet' />
            <column datatype='string' name='Table Name' />
          </columns>
          <relation connection='excel-direct.033l6q11273ko71g0vple01itnem' name='Ordenes' table='[Ordenes$]' type='table'>
            <columns gridOrigin='A1:Q9995:no:A1:Q9995:0' header='yes' outcome='6'>
              <column datatype='integer' name='Filas ID' ordinal='0' />
              <column datatype='string' name='Orden ID' ordinal='1' />
              <column datatype='date' name='Fecha Orden' ordinal='2' />
              <column datatype='string' name='Comprador ID' ordinal='3' />
              <column datatype='string' name='Comprador' ordinal='4' />
              <column datatype='string' name='Exchanges' ordinal='5' />
              <column datatype='string' name='Pais' ordinal='6' />
              <column datatype='string' name='Ciudad' ordinal='7' />
              <column datatype='string' name='Estado' ordinal='8' />
              <column datatype='integer' name='Codigo postal' ordinal='9' />
              <column datatype='string' name='Region' ordinal='10' />
              <column datatype='string' name='Clases de cripto' ordinal='11' />
              <column datatype='string' name='Criptomonedas' ordinal='12' />
              <column datatype='real' name='Compras' ordinal='13' />
              <column datatype='integer' name='Cantidad' ordinal='14' />
              <column datatype='real' name='Coste' ordinal='15' />
              <column datatype='real' name='Ventas' ordinal='16' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Ordenes+]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Q9995:no:A1:Q9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Filas ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Filas ID]</local-name>
            <parent-name>[Ordenes+]</parent-name>
            <remote-alias>Filas ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Orden ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Orden ID]</local-name>
            <parent-name>[Ordenes+]</parent-name>
            <remote-alias>Orden ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fecha Orden</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Fecha Orden]</local-name>
            <parent-name>[Ordenes+]</parent-name>
            <remote-alias>Fecha Orden</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Comprador ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Comprador ID]</local-name>
            <parent-name>[Ordenes+]</parent-name>
            <remote-alias>Comprador ID</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Comprador</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Comprador]</local-name>
            <parent-name>[Ordenes+]</parent-name>
            <remote-alias>Comprador</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Exchanges</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Exchanges]</local-name>
            <parent-name>[Ordenes+]</parent-name>
            <remote-alias>Exchanges</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pais</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Pais]</local-name>
            <parent-name>[Ordenes+]</parent-name>
            <remote-alias>Pais</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ciudad</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ciudad]</local-name>
            <parent-name>[Ordenes+]</parent-name>
            <remote-alias>Ciudad</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Estado</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Estado]</local-name>
            <parent-name>[Ordenes+]</parent-name>
            <remote-alias>Estado</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Codigo postal</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Codigo postal]</local-name>
            <parent-name>[Ordenes+]</parent-name>
            <remote-alias>Codigo postal</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Ordenes+]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Clases de cripto</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Clases de cripto]</local-name>
            <parent-name>[Ordenes+]</parent-name>
            <remote-alias>Clases de cripto</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Criptomonedas</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Criptomonedas]</local-name>
            <parent-name>[Ordenes+]</parent-name>
            <remote-alias>Criptomonedas</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Compras</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Compras]</local-name>
            <parent-name>[Ordenes+]</parent-name>
            <remote-alias>Compras</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cantidad</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cantidad]</local-name>
            <parent-name>[Ordenes+]</parent-name>
            <remote-alias>Cantidad</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Coste</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Coste]</local-name>
            <parent-name>[Ordenes+]</parent-name>
            <remote-alias>Coste</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ventas</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Ventas]</local-name>
            <parent-name>[Ordenes+]</parent-name>
            <remote-alias>Ventas</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sheet</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sheet]</local-name>
            <parent-name>[Ordenes+]</parent-name>
            <remote-alias>Sheet</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[Ordenes+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='% total registros' datatype='real' name='[% total compradores (copia)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([Number of Records])/SUM([Conteo compradores por region anual  (copia)]) * 100' />
      </column>
      <column caption='% total ventas' datatype='real' name='[% total compras (copia)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([Ventas])/AVG([Compras por region anual (copia)]) * 100' />
      </column>
      <column caption='% total cantidad' datatype='real' name='[% total ventas (copia 2)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([Cantidad])/AVG([Costes por region anual (copia)]) * 100' />
      </column>
      <column caption='% total compradores' datatype='real' name='[% total ventas (copia 3)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Comprador ID])/SUM([Cantidad por region anual  (copia)]) * 100' />
      </column>
      <column caption='% total costes' datatype='real' name='[% total ventas (copia)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([Coste])/AVG([Compras por region anual (copia 2)]) * 100' />
      </column>
      <column caption='Ratio beneficios' datatype='real' name='[Calculation_1036109419619012608]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Ventas]) / SUM([Compras])' />
      </column>
      <column caption='Maximo de compras' datatype='real' name='[Calculation_1036109419651473410]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Criptomonedas],[Ciudad]:MAX([Compras]) }' />
      </column>
      <column caption='Calculation1' datatype='real' name='[Calculation_2140969072715608064]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Ventas]) - SUM([Compras])) / SUM([Compras])' />
      </column>
      <column caption='Factor Beneficio' datatype='real' name='[Calculation_2140969072719982593]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Criptomonedas] : SUM([Compras]) / SUM([Ventas])}' />
      </column>
      <column caption='Factor beneficio' datatype='real' name='[Calculation_2140969072720740355]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Compras])/SUM([Ventas])' />
      </column>
      <column caption='Compras por region anual' datatype='real' name='[Calculation_61924526476177408]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED [Criptomonedas],[Region]:AVG([Compras])}' />
      </column>
      <column caption='% total compras' datatype='real' name='[Calculation_61924526476660740]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([Compras])/AVG([Calculation_61924526476177408]) * 100' />
      </column>
      <column caption='SelectorEjer' datatype='real' name='[Calculation_61924526499041285]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parámetro 1]&#13;&#10;WHEN &quot;Compras&quot; THEN [Calculation_61924526476660740]&#13;&#10;WHEN &quot;Ventas&quot; THEN [% total compras (copia)]&#13;&#10;WHEN &quot;Compradores&quot; THEN [% total ventas (copia 3)]&#13;&#10;WHEN &quot;Costes&quot; THEN [% total ventas (copia)]&#13;&#10;WHEN &quot;Registros&quot; THEN [% total compradores (copia)]&#13;&#10;WHEN &quot;Cantidad&quot; THEN [% total ventas (copia 2)]&#13;&#10;END' />
      </column>
      <column caption='Ventas diferencia' datatype='real' name='[Calculation_705094847374811136]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Ventas])' />
      </column>
      <column caption='Conteo compradores por region anual ' datatype='integer' name='[Cantidad por region anual  (copia)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED [Criptomonedas],[Region]:COUNTD([Comprador ID])}' />
      </column>
      <column datatype='string' name='[Ciudad]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Clases de cripto]' role='dimension' type='nominal' />
      <column datatype='integer' default-format='*00000' name='[Codigo postal]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='string' name='[Comprador ID]' role='dimension' type='nominal' />
      <column caption='Costes por region anual' datatype='real' name='[Compras por region anual (copia 2)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED [Criptomonedas],[Region]:AVG([Coste])}' />
      </column>
      <column caption='Ventas por region anual' datatype='real' name='[Compras por region anual (copia)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED [Criptomonedas],[Region]:AVG([Ventas])}' />
      </column>
      <column datatype='real' name='[Compras]' role='measure' type='quantitative' />
      <column caption='Conteo registros por region anual' datatype='integer' name='[Conteo compradores por region anual  (copia)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED [Criptomonedas],[Region]:COUNT([Number of Records])}' />
      </column>
      <column caption='Cantidad por region anual ' datatype='real' name='[Costes por region anual (copia)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED [Criptomonedas],[Region]:AVG([Cantidad])}' />
      </column>
      <column datatype='string' name='[Criptomonedas]' role='dimension' type='nominal' />
      <column datatype='string' name='[Estado]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Filas ID]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Pais]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Ratio beneficios %' datatype='real' name='[Ratio beneficios (copia)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Ventas])) / SUM([Compras]) * 100 * SUM([Calculation_2140969072719982593])' />
      </column>
      <column datatype='real' name='[Ventas]' role='measure' type='quantitative' />
      <column-instance column='[Comprador ID]' derivation='Attribute' name='[attr:Comprador ID:nk]' pivot='key' type='nominal' />
      <column-instance column='[Compras]' derivation='Avg' name='[avg:Compras:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Comprador ID]' derivation='Count' name='[cnt:Comprador ID:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Compras]' derivation='Count' name='[cnt:Compras:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Filas ID]' derivation='Count' name='[cnt:Filas ID:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Comprador ID]' derivation='CountD' name='[ctd:Comprador ID:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Filas ID]' derivation='CountD' name='[ctd:Filas ID:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Clases de cripto]' derivation='None' name='[none:Clases de cripto:nk]' pivot='key' type='nominal' />
      <column-instance column='[Comprador ID]' derivation='None' name='[none:Comprador ID:nk]' pivot='key' type='nominal' />
      <column-instance column='[Criptomonedas]' derivation='None' name='[none:Criptomonedas:nk]' pivot='key' type='nominal' />
      <column-instance column='[Filas ID]' derivation='None' name='[none:Filas ID:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Compras]' derivation='Sum' name='[sum:Compras:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Ventas]' derivation='Sum' name='[sum:Ventas:qk]' pivot='key' type='quantitative' />
      <column-instance column='[% total compradores (copia)]' derivation='User' name='[usr:% total compradores (copia):qk]' pivot='key' type='quantitative' />
      <column-instance column='[% total ventas (copia 2)]' derivation='User' name='[usr:% total ventas (copia 2):qk]' pivot='key' type='quantitative' />
      <column-instance column='[% total ventas (copia 3)]' derivation='User' name='[usr:% total ventas (copia 3):qk]' pivot='key' type='quantitative' />
      <column-instance column='[% total ventas (copia)]' derivation='User' name='[usr:% total ventas (copia):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1036109419619012608]' derivation='User' name='[usr:Calculation_1036109419619012608:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_61924526476660740]' derivation='User' name='[usr:Calculation_61924526476660740:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_705094847374811136]' derivation='User' name='[usr:Calculation_705094847374811136:qk]' pivot='key' type='quantitative' />
      <group caption='Acción (Estado,Pais)' hidden='true' name='[Action (Estado,Pais)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Estado]' />
          <groupfilter function='level-members' level='[Pais]' />
        </groupfilter>
      </group>
      <group caption='Descripción emergente (Estado,Pais)' hidden='true' name='[Tooltip (Estado,Pais)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Estado]' />
          <groupfilter function='level-members' level='[Pais]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Jerarquía de criptos'>
          <field>[Exchanges]</field>
          <field>[Clases de cripto]</field>
          <field>[Criptomonedas]</field>
        </drill-path>
        <drill-path name='Jerarquía geográfica'>
          <field>[Pais]</field>
          <field>[Estado]</field>
          <field>[Ciudad]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.482821' measure-ordering='alphabetic' measure-percentage='0.405063' parameter-percentage='0.112116' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Clases de cripto:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;1º clase&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;3º clase&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;2º clase&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:Criptomonedas:nk]' palette='Figuras' type='shape'>
            <map to='Figuras/augur.png'>
              <bucket>&quot;Augur&quot;</bucket>
            </map>
            <map to='Figuras/bitcoin.png'>
              <bucket>&quot;Bitcoin&quot;</bucket>
            </map>
            <map to='Figuras/bitcoinCash.jpeg'>
              <bucket>&quot;Bitcoin cash&quot;</bucket>
            </map>
            <map to='Figuras/bitcoinGold.jpeg'>
              <bucket>&quot;Bitcoin Gold&quot;</bucket>
            </map>
            <map to='Figuras/cardano.png'>
              <bucket>&quot;Cardano&quot;</bucket>
            </map>
            <map to='Figuras/dash.png'>
              <bucket>&quot;Dash&quot;</bucket>
            </map>
            <map to='Figuras/eos.png'>
              <bucket>&quot;EOS&quot;</bucket>
            </map>
            <map to='Figuras/ethereum.png'>
              <bucket>&quot;Ethereum&quot;</bucket>
            </map>
            <map to='Figuras/iota.png'>
              <bucket>&quot;IOTA&quot;</bucket>
            </map>
            <map to='Figuras/litecoin.jpeg'>
              <bucket>&quot;Litecoin&quot;</bucket>
            </map>
            <map to='Figuras/monero.jpeg'>
              <bucket>&quot;Monero&quot;</bucket>
            </map>
            <map to='Figuras/nem.png'>
              <bucket>&quot;NEM&quot;</bucket>
            </map>
            <map to='Figuras/qtum.png'>
              <bucket>&quot;Qtum&quot;</bucket>
            </map>
            <map to='Figuras/ripple.png'>
              <bucket>&quot;Ripple&quot;</bucket>
            </map>
            <map to='Figuras/verge.jpeg'>
              <bucket>&quot;Verge&quot;</bucket>
            </map>
            <map to='Figuras/zcash.jpeg'>
              <bucket>&quot;Zcash&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Criptomonedas:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;IOTA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Augur&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cardano&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Qtum&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Litecoin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dash&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bitcoin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;EOS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ripple&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Verge&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Monero&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethereum&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bitcoin cash&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Zcash&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NEM&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bitcoin Gold&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0mumqo20a6h1f317s3a600drqbbb].[sum:Ventas:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1igvexc0iup5at14xo3dc1qq969o].[attr:Comprador ID:nk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1igvexc0iup5at14xo3dc1qq969o].[avg:Compras:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1igvexc0iup5at14xo3dc1qq969o].[cnt:Comprador ID:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1igvexc0iup5at14xo3dc1qq969o].[cnt:Compras:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1igvexc0iup5at14xo3dc1qq969o].[cnt:Filas ID:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1igvexc0iup5at14xo3dc1qq969o].[ctd:Comprador ID:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1igvexc0iup5at14xo3dc1qq969o].[ctd:Filas ID:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Comprador ID:nk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Filas ID:ok]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Calculation_61924526476505089:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Calculation_61924526476521474:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Compras:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Ventas:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1igvexc0iup5at14xo3dc1qq969o].[usr:\% total compradores (copia):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1igvexc0iup5at14xo3dc1qq969o].[usr:\% total ventas (copia 2):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1igvexc0iup5at14xo3dc1qq969o].[usr:\% total ventas (copia 3):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1igvexc0iup5at14xo3dc1qq969o].[usr:\% total ventas (copia):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1igvexc0iup5at14xo3dc1qq969o].[usr:Calculation_61924526476660740:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1igvexc0iup5at14xo3dc1qq969o].[usr:Calculation_705094847374811136:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1igvexc0iup5at14xo3dc1qq969o].[usr:Calculation_1036109419619012608:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;España&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <datasource-dependencies datasource='Parameters'>
        <column caption='Selector' datatype='string' name='[Parámetro 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Compras&quot;'>
          <calculation class='tableau' formula='&quot;Compras&quot;' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0mumqo20a6h1f317s3a600drqbbb'>
        <column datatype='real' name='[Ventas]' role='measure' type='quantitative' />
        <column-instance column='[Ventas]' derivation='Sum' name='[sum:Ventas:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
    </datasource>
    <datasource caption='Ejercicio2' inline='true' name='federated.0mumqo20a6h1f317s3a600drqbbb' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='OperacionesCripto' name='excel-direct.1lr3k1t01s1ffr1cicxcb1xyinxu'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/alberto/Desktop/KeepCodingPracticas/KeepCoding-BD-Visualizacion/Practica/Ficheros/OperacionesCripto.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='CriptoMarket' name='excel-direct.1ox2oam0vw37yl15z6uhf1kb4a3n'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/alberto/Desktop/KeepCodingPracticas/KeepCoding-BD-Visualizacion/Practica/Ficheros/CriptoMarket.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Ordenes].[Filas ID]' />
              <expression op='[Hoja1].[Row ID]' />
            </expression>
          </clause>
          <relation join='left' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[Ordenes].[Orden ID]' />
                <expression op='[Negro].[Order ID]' />
              </expression>
            </clause>
            <relation connection='excel-direct.1ox2oam0vw37yl15z6uhf1kb4a3n' name='Ordenes' table='[Ordenes$]' type='table'>
              <columns gridOrigin='A1:Q9995:no:A1:Q9995:0' header='yes' outcome='6'>
                <column datatype='integer' name='Filas ID' ordinal='0' />
                <column datatype='string' name='Orden ID' ordinal='1' />
                <column datatype='date' name='Fecha Orden' ordinal='2' />
                <column datatype='string' name='Comprador ID' ordinal='3' />
                <column datatype='string' name='Comprador' ordinal='4' />
                <column datatype='string' name='Exchanges' ordinal='5' />
                <column datatype='string' name='Pais' ordinal='6' />
                <column datatype='string' name='Ciudad' ordinal='7' />
                <column datatype='string' name='Estado' ordinal='8' />
                <column datatype='integer' name='Codigo postal' ordinal='9' />
                <column datatype='string' name='Region' ordinal='10' />
                <column datatype='string' name='Clases de cripto' ordinal='11' />
                <column datatype='string' name='Criptomonedas' ordinal='12' />
                <column datatype='real' name='Compras' ordinal='13' />
                <column datatype='integer' name='Cantidad' ordinal='14' />
                <column datatype='real' name='Coste' ordinal='15' />
                <column datatype='real' name='Ventas' ordinal='16' />
              </columns>
            </relation>
            <relation connection='excel-direct.1ox2oam0vw37yl15z6uhf1kb4a3n' name='Negro' table='[Negro$]' type='table'>
              <columns gridOrigin='A1:B297:no:A1:B297:0' header='yes' outcome='6'>
                <column datatype='string' name='Dinero Negro' ordinal='0' />
                <column datatype='string' name='Order ID' ordinal='1' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.1lr3k1t01s1ffr1cicxcb1xyinxu' name='Hoja1' table='[Hoja1$]' type='table'>
            <columns gridOrigin='A1:B9427:no:A1:B9427:0' header='yes' outcome='6'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='real' name='Operaciones' ordinal='1' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Filas ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Filas ID]</local-name>
            <parent-name>[Ordenes]</parent-name>
            <remote-alias>Filas ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Orden ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Orden ID]</local-name>
            <parent-name>[Ordenes]</parent-name>
            <remote-alias>Orden ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fecha Orden</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Fecha Orden]</local-name>
            <parent-name>[Ordenes]</parent-name>
            <remote-alias>Fecha Orden</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Comprador ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Comprador ID]</local-name>
            <parent-name>[Ordenes]</parent-name>
            <remote-alias>Comprador ID</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Comprador</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Comprador]</local-name>
            <parent-name>[Ordenes]</parent-name>
            <remote-alias>Comprador</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Exchanges</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Exchanges]</local-name>
            <parent-name>[Ordenes]</parent-name>
            <remote-alias>Exchanges</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pais</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Pais]</local-name>
            <parent-name>[Ordenes]</parent-name>
            <remote-alias>Pais</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ciudad</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ciudad]</local-name>
            <parent-name>[Ordenes]</parent-name>
            <remote-alias>Ciudad</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Estado</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Estado]</local-name>
            <parent-name>[Ordenes]</parent-name>
            <remote-alias>Estado</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Codigo postal</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Codigo postal]</local-name>
            <parent-name>[Ordenes]</parent-name>
            <remote-alias>Codigo postal</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Ordenes]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Clases de cripto</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Clases de cripto]</local-name>
            <parent-name>[Ordenes]</parent-name>
            <remote-alias>Clases de cripto</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Criptomonedas</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Criptomonedas]</local-name>
            <parent-name>[Ordenes]</parent-name>
            <remote-alias>Criptomonedas</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Compras</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Compras]</local-name>
            <parent-name>[Ordenes]</parent-name>
            <remote-alias>Compras</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cantidad</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cantidad]</local-name>
            <parent-name>[Ordenes]</parent-name>
            <remote-alias>Cantidad</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Coste</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Coste]</local-name>
            <parent-name>[Ordenes]</parent-name>
            <remote-alias>Coste</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ventas</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Ventas]</local-name>
            <parent-name>[Ordenes]</parent-name>
            <remote-alias>Ventas</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Ordenes]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Q9995:no:A1:Q9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dinero Negro</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Dinero Negro]</local-name>
            <parent-name>[Negro]</parent-name>
            <remote-alias>Dinero Negro</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Negro]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Negro]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B297:no:A1:B297:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Hoja1]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Operaciones</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Operaciones]</local-name>
            <parent-name>[Hoja1]</parent-name>
            <remote-alias>Operaciones</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Hoja1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B9427:no:A1:B9427:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Count comprador' datatype='integer' name='[Calculation_1036109419676045320]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([Comprador ID])' />
      </column>
      <column caption='Count compras' datatype='integer' name='[Calculation_1036109419676643337]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([Compras])' />
      </column>
      <column caption='Compras No nulas' datatype='real' name='[Calculation_743656919689469952]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='zn([Compras])' />
      </column>
      <column caption='NumClientes' datatype='integer' name='[Calculation_743656919691988993]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([Comprador ID])' />
      </column>
      <column caption='Operaciones no nulas' datatype='real' name='[Calculation_743656919693017090]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN([Operaciones])' />
      </column>
      <column datatype='integer' name='[Cantidad]' role='measure' type='quantitative' />
      <column datatype='string' name='[Ciudad]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='integer' default-format='*00000' name='[Codigo postal]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column caption='Comprador1' datatype='string' name='[Comprador]' role='dimension' type='nominal' />
      <column datatype='string' name='[Estado]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Filas ID]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Pais]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Ventas]' role='measure' type='quantitative' />
      <column-instance column='[Cantidad]' derivation='Sum' name='[sum:Cantidad:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Ventas]' derivation='Sum' name='[sum:Ventas:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.518987' measure-ordering='alphabetic' measure-percentage='0.41953' parameter-percentage='0.0614828' rowDisplayCount='1000' show-structure='true' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;España&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{e81125de-4382-417e-8a61-fba835b7653d}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.0mumqo20a6h1f317s3a600drqbbb].[sum:Cantidad:qk]' />
            <field name='[federated.0mumqo20a6h1f317s3a600drqbbb].[sum:Ventas:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>0</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filtro 1 (generado)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Ejercicio 1 - dashboard' type='sheet' worksheet='Ejercicio1-b' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Ejercicio 1 - dashboard' />
      </command>
    </action>
    <action caption='Filtro 2 (generado)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Ejercicio4 - dashboard' type='sheet' worksheet='Ejercicio4' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Ejercicio4 - dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Ejercicio1-b'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Ejercicio1' name='federated.1igvexc0iup5at14xo3dc1qq969o' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1igvexc0iup5at14xo3dc1qq969o'>
            <column caption='Ratio beneficios' datatype='real' name='[Calculation_1036109419619012608]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Ventas]) / SUM([Compras])' />
            </column>
            <column datatype='real' name='[Compras]' role='measure' type='quantitative' />
            <column datatype='string' name='[Estado]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='date' name='[Fecha Orden]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Pais]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Ventas]' role='measure' type='quantitative' />
            <column-instance column='[Estado]' derivation='None' name='[none:Estado:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pais]' derivation='None' name='[none:Pais:nk]' pivot='key' type='nominal' />
            <column-instance column='[Compras]' derivation='Sum' name='[sum:Compras:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1036109419619012608]' derivation='User' name='[usr:Calculation_1036109419619012608:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fecha Orden]' derivation='Year' name='[yr:Fecha Orden:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1igvexc0iup5at14xo3dc1qq969o].[yr:Fecha Orden:ok]'>
            <groupfilter function='member' level='[yr:Fecha Orden:ok]' member='2017' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1igvexc0iup5at14xo3dc1qq969o].[yr:Fecha Orden:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='legend'>
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Compras:qk]' value='Compras'>
              <formatted-text>
                <run bold='true' fontcolor='#ffffff' fontsize='11'>Compras</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Compras:qk]' />
              <lod column='[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Pais:nk]' />
              <lod column='[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Estado:nk]' />
              <lod column='[federated.1igvexc0iup5at14xo3dc1qq969o].[usr:Calculation_1036109419619012608:qk]' />
              <geometry column='[federated.1igvexc0iup5at14xo3dc1qq969o].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Estado:&#9;</run>
                <run bold='true'>&lt;[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Estado:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Pais:&#9;</run>
                <run bold='true'>&lt;[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Pais:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Compras:&#9;</run>
                <run bold='true'>&lt;[federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Compras:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true'>&lt;Sheet name=&quot;Ejercicio1-b-popup&quot; maxwidth=&quot;300&quot; maxheight=&quot;300&quot; filter=&quot;&lt;All Fields&gt;&quot;&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1igvexc0iup5at14xo3dc1qq969o].[Latitude (generated)]</rows>
        <cols>[federated.1igvexc0iup5at14xo3dc1qq969o].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{9462B4FD-F196-4B0F-BF9D-A1A2573C22FF}' />
    </worksheet>
    <worksheet name='Ejercicio1-b-popup'>
      <table>
        <view>
          <datasources>
            <datasource caption='Ejercicio1' name='federated.1igvexc0iup5at14xo3dc1qq969o' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1igvexc0iup5at14xo3dc1qq969o'>
            <column caption='Ratio beneficios' datatype='real' name='[Calculation_1036109419619012608]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Ventas]) / SUM([Compras])' />
            </column>
            <column datatype='real' name='[Compras]' role='measure' type='quantitative' />
            <column datatype='string' name='[Estado]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='date' name='[Fecha Orden]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Pais]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Ventas]' role='measure' type='quantitative' />
            <column-instance column='[Estado]' derivation='None' name='[none:Estado:nk]' pivot='key' type='nominal' />
            <column-instance column='[Compras]' derivation='Sum' name='[sum:Compras:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1036109419619012608]' derivation='User' name='[usr:Calculation_1036109419619012608:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fecha Orden]' derivation='Year' name='[yr:Fecha Orden:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1igvexc0iup5at14xo3dc1qq969o].[Tooltip (Estado,Pais)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Ejercicio1-b-popup]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Estado]' />
              <groupfilter function='level-members' level='[Pais]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1igvexc0iup5at14xo3dc1qq969o].[yr:Fecha Orden:ok]'>
            <groupfilter function='member' level='[yr:Fecha Orden:ok]' member='2017' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1igvexc0iup5at14xo3dc1qq969o].[yr:Fecha Orden:ok]</column>
            <column>[federated.1igvexc0iup5at14xo3dc1qq969o].[Tooltip (Estado,Pais)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Compras:qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.1igvexc0iup5at14xo3dc1qq969o].[usr:Calculation_1036109419619012608:qk]' field-type='quantitative' fold='true' max='1.0' min='-1.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1igvexc0iup5at14xo3dc1qq969o].[usr:Calculation_1036109419619012608:qk]' scope='rows' value='' />
            <format attr='display' class='0' field='[federated.1igvexc0iup5at14xo3dc1qq969o].[usr:Calculation_1036109419619012608:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='table'>
            <format attr='alternate-text' field='[federated.1igvexc0iup5at14xo3dc1qq969o].[usr:Calculation_1036109419619012608:qk]' value='Ratios beneficios' />
            <format attr='display-alternate-text' field='[federated.1igvexc0iup5at14xo3dc1qq969o].[usr:Calculation_1036109419619012608:qk]' value='true' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <lod column='[federated.1igvexc0iup5at14xo3dc1qq969o].[usr:Calculation_1036109419619012608:qk]' />
              <color column='[federated.1igvexc0iup5at14xo3dc1qq969o].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Compras:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <lod column='[federated.1igvexc0iup5at14xo3dc1qq969o].[usr:Calculation_1036109419619012608:qk]' />
              <color column='[federated.1igvexc0iup5at14xo3dc1qq969o].[:Measure Names]' />
              <text column='[federated.1igvexc0iup5at14xo3dc1qq969o].[usr:Calculation_1036109419619012608:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1igvexc0iup5at14xo3dc1qq969o].[usr:Calculation_1036109419619012608:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <lod column='[federated.1igvexc0iup5at14xo3dc1qq969o].[usr:Calculation_1036109419619012608:qk]' />
              <color column='[federated.1igvexc0iup5at14xo3dc1qq969o].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1igvexc0iup5at14xo3dc1qq969o].[none:Estado:nk] * ([federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Compras:qk] + [federated.1igvexc0iup5at14xo3dc1qq969o].[usr:Calculation_1036109419619012608:qk]))</rows>
        <cols>[federated.1igvexc0iup5at14xo3dc1qq969o].[yr:Fecha Orden:ok]</cols>
      </table>
      <simple-id uuid='{54EB6CA2-CB36-4205-A44B-F360CAB1C7CD}' />
    </worksheet>
    <worksheet name='Ejercicio1-c'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Ejercicio1' name='federated.1igvexc0iup5at14xo3dc1qq969o' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1igvexc0iup5at14xo3dc1qq969o'>
            <column caption='Maximo de compras' datatype='real' name='[Calculation_1036109419651473410]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Criptomonedas],[Ciudad]:MAX([Compras]) }' />
            </column>
            <column datatype='string' name='[Ciudad]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Compras]' role='measure' type='quantitative' />
            <column datatype='string' name='[Criptomonedas]' role='dimension' type='nominal' />
            <column datatype='string' name='[Estado]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Pais]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Ciudad]' derivation='None' name='[none:Ciudad:nk]' pivot='key' type='nominal' />
            <column-instance column='[Criptomonedas]' derivation='None' name='[none:Criptomonedas:nk]' pivot='key' type='nominal' />
            <column-instance column='[Estado]' derivation='None' name='[none:Estado:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pais]' derivation='None' name='[none:Pais:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1036109419651473410]' derivation='Sum' name='[sum:Calculation_1036109419651473410:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1igvexc0iup5at14xo3dc1qq969o].[Action (Estado,Pais)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Estado]' member='&quot;Minnesota&quot;' />
              <groupfilter function='member' level='[Pais]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1igvexc0iup5at14xo3dc1qq969o].[Action (Estado,Pais)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1igvexc0iup5at14xo3dc1qq969o].[Longitude (generated)]' field-type='quantitative' max='-10534640.613098986' min='-12240181.292138197' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1igvexc0iup5at14xo3dc1qq969o].[Latitude (generated)]' field-type='quantitative' max='4465761.3717326662' min='2500757.1005475339' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='shape' field='[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]' value='ref'>
              <formatted-text>
                <run fontcolor='#ffffff'>ref</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <shape column='[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]' />
              <lod column='[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Pais:nk]' />
              <lod column='[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Estado:nk]' />
              <lod column='[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Ciudad:nk]' />
              <lod column='[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]' />
              <size column='[federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Calculation_1036109419651473410:qk]' />
              <lod column='[federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Calculation_1036109419651473410:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value='Figuras/EOS.png' />
                <format attr='size' value='2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1igvexc0iup5at14xo3dc1qq969o].[Latitude (generated)]</rows>
        <cols>[federated.1igvexc0iup5at14xo3dc1qq969o].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{3442F9C3-CA04-46D7-830F-48C76CF64F4D}' />
    </worksheet>
    <worksheet name='Ejercicio1-d'>
      <table>
        <view>
          <datasources>
            <datasource caption='Ejercicio1' name='federated.1igvexc0iup5at14xo3dc1qq969o' />
          </datasources>
          <datasource-dependencies datasource='federated.1igvexc0iup5at14xo3dc1qq969o'>
            <column datatype='real' name='[Compras]' role='measure' type='quantitative' />
            <column datatype='string' name='[Criptomonedas]' role='dimension' type='nominal' />
            <column datatype='string' name='[Estado]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Pais]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Min' name='[min:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Criptomonedas]' derivation='None' name='[none:Criptomonedas:nk]' pivot='key' type='nominal' />
            <column-instance column='[Compras]' derivation='Sum' name='[sum:Compras:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1igvexc0iup5at14xo3dc1qq969o].[Action (Estado,Pais)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Estado]' member='&quot;Minnesota&quot;' />
              <groupfilter function='member' level='[Pais]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Compras])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Criptomonedas:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]</column>
            <column>[federated.1igvexc0iup5at14xo3dc1qq969o].[Action (Estado,Pais)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.1igvexc0iup5at14xo3dc1qq969o].[min:Number of Records:qk]' field-type='quantitative' fold='true' max='3' min='-1' range-type='fixed' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.1igvexc0iup5at14xo3dc1qq969o].[min:Number of Records:qk]' scope='rows' value='false' />
            <format attr='display' class='1' field='[federated.1igvexc0iup5at14xo3dc1qq969o].[min:Number of Records:qk]' scope='rows' value='false' />
            <encoding attr='space' class='0' field='[federated.1igvexc0iup5at14xo3dc1qq969o].[min:Number of Records:qk]' field-type='quantitative' max='3' min='-1' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <text column='[federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Compras:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1igvexc0iup5at14xo3dc1qq969o].[min:Number of Records:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]' />
              <wedge-size column='[federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Compras:qk]' />
              <size column='[federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Compras:qk]' />
              <text column='[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]' />
              <text column='[federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Compras:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='4.284820556640625' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1igvexc0iup5at14xo3dc1qq969o].[min:Number of Records:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Compras:qk]' />
              <lod column='[federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Compras:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='16'>Total : </run>
                <run>Æ&#10;</run>
                <run fontsize='16'>&lt;[federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Compras:qk]&gt; €</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='3.3038673400878906' />
                <format attr='mark-color' value='#ffffff' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1igvexc0iup5at14xo3dc1qq969o].[min:Number of Records:qk] + [federated.1igvexc0iup5at14xo3dc1qq969o].[min:Number of Records:qk])</rows>
        <cols />
      </table>
      <simple-id uuid='{A2DF3B47-081F-4333-81B4-A9C27C411E08}' />
    </worksheet>
    <worksheet name='Ejercicio2-a'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Ejercicio2' name='federated.0mumqo20a6h1f317s3a600drqbbb' />
          </datasources>
          <datasource-dependencies datasource='federated.0mumqo20a6h1f317s3a600drqbbb'>
            <column auto-hidden='true' caption='Clústeres (7)' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:8]' parent-model='[AnalyticModel:{e81125de-4382-417e-8a61-fba835b7653d}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Valores atípicos de clúster' />
                <alias key='0' value='Sin clústeres' />
                <alias key='1' value='Clúster 1' />
                <alias key='2' value='Clúster 2' />
                <alias key='3' value='Clúster 3' />
                <alias key='4' value='Clúster 4' />
                <alias key='5' value='Clúster 5' />
                <alias key='6' value='Clúster 6' />
                <alias key='7' value='Clúster 7' />
                <alias key='8' value='Clúster 8' />
                <alias key='9' value='Clúster 9' />
                <alias key='10' value='Clúster 10' />
                <alias key='11' value='Clúster 11' />
                <alias key='12' value='Clúster 12' />
                <alias key='13' value='Clúster 13' />
                <alias key='14' value='Clúster 14' />
                <alias key='15' value='Clúster 15' />
                <alias key='16' value='Clúster 16' />
                <alias key='17' value='Clúster 17' />
                <alias key='18' value='Clúster 18' />
                <alias key='19' value='Clúster 19' />
                <alias key='20' value='Clúster 20' />
                <alias key='21' value='Clúster 21' />
                <alias key='22' value='Clúster 22' />
                <alias key='23' value='Clúster 23' />
                <alias key='24' value='Clúster 24' />
                <alias key='25' value='Clúster 25' />
                <alias key='26' value='Clúster 26' />
                <alias key='27' value='Clúster 27' />
                <alias key='28' value='Clúster 28' />
                <alias key='29' value='Clúster 29' />
                <alias key='30' value='Clúster 30' />
                <alias key='31' value='Clúster 31' />
                <alias key='32' value='Clúster 32' />
                <alias key='33' value='Clúster 33' />
                <alias key='34' value='Clúster 34' />
                <alias key='35' value='Clúster 35' />
                <alias key='36' value='Clúster 36' />
                <alias key='37' value='Clúster 37' />
                <alias key='38' value='Clúster 38' />
                <alias key='39' value='Clúster 39' />
                <alias key='40' value='Clúster 40' />
                <alias key='41' value='Clúster 41' />
                <alias key='42' value='Clúster 42' />
                <alias key='43' value='Clúster 43' />
                <alias key='44' value='Clúster 44' />
                <alias key='45' value='Clúster 45' />
                <alias key='46' value='Clúster 46' />
                <alias key='47' value='Clúster 47' />
                <alias key='48' value='Clúster 48' />
                <alias key='49' value='Clúster 49' />
                <alias key='50' value='Clúster 50' />
              </aliases>
            </column>
            <column datatype='integer' name='[Cantidad]' role='measure' type='quantitative' />
            <column caption='Comprador1' datatype='string' name='[Comprador]' role='dimension' type='nominal' />
            <column datatype='string' name='[Dinero Negro]' role='dimension' type='nominal' />
            <column datatype='real' name='[Ventas]' role='measure' type='quantitative' />
            <column-instance column='[AdhocCluster:8]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:8:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Comprador]' derivation='None' name='[none:Comprador:nk]' pivot='key' type='nominal' />
            <column-instance column='[Dinero Negro]' derivation='None' name='[none:Dinero Negro:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cantidad]' derivation='Sum' name='[sum:Cantidad:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ventas]' derivation='Sum' name='[sum:Ventas:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mumqo20a6h1f317s3a600drqbbb].[none:Dinero Negro:nk]'>
            <groupfilter function='member' level='[none:Dinero Negro:nk]' member='&quot;Yes&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0mumqo20a6h1f317s3a600drqbbb].[none:Dinero Negro:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0mumqo20a6h1f317s3a600drqbbb].[sum:Cantidad:qk]' field-type='quantitative' max='21' min='1' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0mumqo20a6h1f317s3a600drqbbb].[sum:Ventas:qk]' field-type='quantitative' max='734.99640575536932' min='-939.5385075649707' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0mumqo20a6h1f317s3a600drqbbb].[none:Comprador:nk]' />
              <lod column='[federated.0mumqo20a6h1f317s3a600drqbbb].[none:Comprador:nk]' />
              <color column='[federated.0mumqo20a6h1f317s3a600drqbbb].[none:AdhocCluster:8:ok]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='exp' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='698' />
                <format attr='maxwidth' value='698' />
                <format attr='minheight' value='582' />
                <format attr='maxheight' value='582' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='698' />
                <format attr='maxwidth' value='698' />
                <format attr='minheight' value='582' />
                <format attr='maxheight' value='582' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='698' />
                <format attr='maxwidth' value='698' />
                <format attr='minheight' value='582' />
                <format attr='maxheight' value='582' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0mumqo20a6h1f317s3a600drqbbb].[sum:Ventas:qk]</rows>
        <cols>[federated.0mumqo20a6h1f317s3a600drqbbb].[sum:Cantidad:qk]</cols>
      </table>
      <simple-id uuid='{47413365-1ADD-4031-97AE-11C02113B85E}' />
    </worksheet>
    <worksheet name='Ejercicio2-c'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Ejercicio2' name='federated.0mumqo20a6h1f317s3a600drqbbb' />
          </datasources>
          <datasource-dependencies datasource='federated.0mumqo20a6h1f317s3a600drqbbb'>
            <column datatype='string' name='[Comprador ID]' role='dimension' type='nominal' />
            <column datatype='date' name='[Fecha Orden]' role='dimension' type='ordinal' />
            <column-instance column='[Comprador ID]' derivation='Count' name='[cnt:Comprador ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Comprador ID]' derivation='CountD' name='[ctd:Comprador ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fecha Orden]' derivation='Quarter-Trunc' name='[tqr:Fecha Orden:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <text column='[federated.0mumqo20a6h1f317s3a600drqbbb].[ctd:Comprador ID:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0mumqo20a6h1f317s3a600drqbbb].[cnt:Comprador ID:qk]</rows>
        <cols>[federated.0mumqo20a6h1f317s3a600drqbbb].[tqr:Fecha Orden:qk]</cols>
      </table>
      <simple-id uuid='{C0B0E9FE-CB9C-4E35-B7C7-E424AD9F329D}' />
    </worksheet>
    <worksheet name='Ejercicio2-d'>
      <table>
        <view>
          <datasources>
            <datasource caption='Ejercicio2' name='federated.0mumqo20a6h1f317s3a600drqbbb' />
          </datasources>
          <datasource-dependencies datasource='federated.0mumqo20a6h1f317s3a600drqbbb'>
            <column caption='Comprador1' datatype='string' name='[Comprador]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Ventas]' role='measure' type='quantitative' />
            <column-instance column='[Comprador]' derivation='None' name='[none:Comprador:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ventas]' derivation='Sum' name='[sum:Ventas:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0mumqo20a6h1f317s3a600drqbbb].[sum:Ventas:qk]' field-type='quantitative' max='10164.34899767067' min='-2512.57075697665' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.0mumqo20a6h1f317s3a600drqbbb].[sum:Ventas:qk]' />
              <text column='[federated.0mumqo20a6h1f317s3a600drqbbb].[none:Comprador:nk]' />
              <lod column='[federated.0mumqo20a6h1f317s3a600drqbbb].[sum:Ventas:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0mumqo20a6h1f317s3a600drqbbb].[sum:Ventas:qk]</rows>
        <cols>[federated.0mumqo20a6h1f317s3a600drqbbb].[none:Region:nk]</cols>
      </table>
      <simple-id uuid='{C3F7F4A4-D98B-4F38-93F0-CFE7F642F92B}' />
    </worksheet>
    <worksheet name='Ejercicio3-aCompradores'>
      <table>
        <view>
          <datasources>
            <datasource caption='Ejercicio1' name='federated.1igvexc0iup5at14xo3dc1qq969o' />
          </datasources>
          <datasource-dependencies datasource='federated.1igvexc0iup5at14xo3dc1qq969o'>
            <column datatype='string' name='[Comprador ID]' role='dimension' type='nominal' />
            <column datatype='string' name='[Criptomonedas]' role='dimension' type='nominal' />
            <column-instance column='[Comprador ID]' derivation='CountD' name='[ctd:Comprador ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Criptomonedas]' derivation='None' name='[none:Criptomonedas:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]'>
            <groupfilter function='member' level='[none:Criptomonedas:nk]' member='&quot;Bitcoin&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
            <format attr='text-orientation' value='0' />
            <format attr='width' value='172' />
            <format attr='height' field='[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]' value='72' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1igvexc0iup5at14xo3dc1qq969o].[ctd:Comprador ID:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#4e79a7' fontsize='15'>&lt;</run>
                <run bold='true' fontcolor='#4e79a7' fontsize='15'>[federated.1igvexc0iup5at14xo3dc1qq969o].[ctd:Comprador ID:qk]</run>
                <run bold='true' fontcolor='#4e79a7' fontsize='15'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{23C031E2-5D6A-4671-8FD7-C06D4959A856}' />
    </worksheet>
    <worksheet name='Ejercicio3-aCompras'>
      <table>
        <view>
          <datasources>
            <datasource caption='Ejercicio1' name='federated.1igvexc0iup5at14xo3dc1qq969o' />
          </datasources>
          <datasource-dependencies datasource='federated.1igvexc0iup5at14xo3dc1qq969o'>
            <column datatype='real' name='[Compras]' role='measure' type='quantitative' />
            <column datatype='string' name='[Criptomonedas]' role='dimension' type='nominal' />
            <column-instance column='[Criptomonedas]' derivation='None' name='[none:Criptomonedas:nk]' pivot='key' type='nominal' />
            <column-instance column='[Compras]' derivation='Sum' name='[sum:Compras:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]'>
            <groupfilter function='member' level='[none:Criptomonedas:nk]' member='&quot;Bitcoin&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='240' />
            <format attr='height' field='[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]' value='81' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Compras:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#4e79a7' fontsize='15'>&lt;</run>
                <run bold='true' fontcolor='#4e79a7' fontsize='15'>[federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Compras:qk]</run>
                <run bold='true' fontcolor='#4e79a7' fontsize='15'>&gt;€</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{BC594F67-B22C-49DB-B83B-6E66D9337E85}' />
    </worksheet>
    <worksheet name='Ejercicio3-aRegistros'>
      <table>
        <view>
          <datasources>
            <datasource caption='Ejercicio1' name='federated.1igvexc0iup5at14xo3dc1qq969o' />
          </datasources>
          <datasource-dependencies datasource='federated.1igvexc0iup5at14xo3dc1qq969o'>
            <column datatype='string' name='[Criptomonedas]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Filas ID]' role='dimension' type='ordinal' />
            <column-instance column='[Filas ID]' derivation='Count' name='[cnt:Filas ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Criptomonedas]' derivation='None' name='[none:Criptomonedas:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]'>
            <groupfilter function='member' level='[none:Criptomonedas:nk]' member='&quot;Bitcoin&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='152' />
            <format attr='height' field='[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]' value='98' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1igvexc0iup5at14xo3dc1qq969o].[cnt:Filas ID:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#4e79a7' fontsize='15'>&lt;</run>
                <run bold='true' fontcolor='#4e79a7' fontsize='15'>[federated.1igvexc0iup5at14xo3dc1qq969o].[cnt:Filas ID:qk]</run>
                <run bold='true' fontcolor='#4e79a7' fontsize='15'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{FCEB8338-25EE-4F06-A492-B5F002C04914}' />
    </worksheet>
    <worksheet name='Ejercicio3-aVentas'>
      <table>
        <view>
          <datasources>
            <datasource caption='Ejercicio1' name='federated.1igvexc0iup5at14xo3dc1qq969o' />
          </datasources>
          <datasource-dependencies datasource='federated.1igvexc0iup5at14xo3dc1qq969o'>
            <column datatype='string' name='[Criptomonedas]' role='dimension' type='nominal' />
            <column datatype='real' name='[Ventas]' role='measure' type='quantitative' />
            <column-instance column='[Criptomonedas]' derivation='None' name='[none:Criptomonedas:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ventas]' derivation='Sum' name='[sum:Ventas:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]'>
            <groupfilter function='member' level='[none:Criptomonedas:nk]' member='&quot;Bitcoin&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
            <format attr='height' field='[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]' value='77' />
            <format attr='width' value='193' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Ventas:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#4e79a7' fontsize='15'>&lt;</run>
                <run bold='true' fontcolor='#4e79a7' fontsize='15'>[federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Ventas:qk]</run>
                <run bold='true' fontcolor='#4e79a7' fontsize='15'>&gt;€</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{7181CAA7-2B57-4F37-8D82-05BBF09760C3}' />
    </worksheet>
    <worksheet name='Ejercicio3-b'>
      <table>
        <view>
          <datasources>
            <datasource caption='Ejercicio1' name='federated.1igvexc0iup5at14xo3dc1qq969o' />
          </datasources>
          <datasource-dependencies datasource='federated.1igvexc0iup5at14xo3dc1qq969o'>
            <column caption='Factor Beneficio' datatype='real' name='[Calculation_2140969072719982593]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Criptomonedas] : SUM([Compras]) / SUM([Ventas])}' />
            </column>
            <column datatype='real' name='[Compras]' role='measure' type='quantitative' />
            <column datatype='string' name='[Criptomonedas]' role='dimension' type='nominal' />
            <column caption='Ratio beneficios %' datatype='real' name='[Ratio beneficios (copia)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Ventas])) / SUM([Compras]) * 100 * SUM([Calculation_2140969072719982593])' />
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Ventas]' role='measure' type='quantitative' />
            <column-instance column='[Criptomonedas]' derivation='None' name='[none:Criptomonedas:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Compras]' derivation='Sum' name='[sum:Compras:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ventas]' derivation='Sum' name='[sum:Ventas:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ratio beneficios (copia)]' derivation='User' name='[usr:Ratio beneficios (copia):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]'>
            <groupfilter function='member' level='[none:Criptomonedas:nk]' member='&quot;Bitcoin&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Region:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Compras:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Compras:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1igvexc0iup5at14xo3dc1qq969o].[usr:Ratio beneficios (copia):qk]' max='136.90330148780916' min='68.440819474999998' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#cae1ca</color>
                <color>#a7d1a7</color>
                <color>#87c287</color>
                <color>#6bb26b</color>
                <color>#51a351</color>
                <color>#3a933a</color>
                <color>#278327</color>
                <color>#177417</color>
                <color>#0a640a</color>
                <color>#005500</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='stroke-color' id='refline1' value='#f28e2b' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1igvexc0iup5at14xo3dc1qq969o].[usr:Ratio beneficios (copia):qk]' value='% de total Ratio beneficio'>
              <formatted-text>
                <run>% de total Ratio beneficio</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1igvexc0iup5at14xo3dc1qq969o].[usr:Ratio beneficios (copia):qk]' />
              <text column='[federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Compras:qk]' />
              <lod column='[federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Ventas:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Compras:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='none' probability='95' scope='per-cell' value-column='[federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Compras:qk]' z-order='1' />
            <reference-line axis-column='[federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Compras:qk]' enable-instant-analytics='true' formula='sum' id='refline1' label-type='none' scope='per-cell' value-column='[federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Ventas:qk]' z-order='2' />
            <reference-line axis-column='[federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Compras:qk]' enable-instant-analytics='true' formula='average' id='refline2' label='&lt;FieldLabel&gt; : &lt;Value&gt;' label-type='custom' probability='95' scope='per-cell' value-column='[federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Ventas:qk]' z-order='3' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Region:nk]</rows>
        <cols>[federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Compras:qk]</cols>
      </table>
      <simple-id uuid='{CBDB20D9-8EFB-4FD1-8CFD-ACB4EB17FC1A}' />
    </worksheet>
    <worksheet name='Ejercicio3-b-compradores'>
      <table>
        <view>
          <datasources>
            <datasource caption='Ejercicio1' name='federated.1igvexc0iup5at14xo3dc1qq969o' />
          </datasources>
          <datasource-dependencies datasource='federated.1igvexc0iup5at14xo3dc1qq969o'>
            <column datatype='string' name='[Comprador ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Compras]' role='measure' type='quantitative' />
            <column datatype='string' name='[Criptomonedas]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Comprador ID]' derivation='CountD' name='[ctd:Comprador ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Criptomonedas]' derivation='None' name='[none:Criptomonedas:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Compras]' derivation='Sum' name='[sum:Compras:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]'>
            <groupfilter function='member' level='[none:Criptomonedas:nk]' member='&quot;Bitcoin&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Region:nk]' direction='DESC' using='[federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Compras:qk]' />
          <slices>
            <column>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Compras:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' value='91' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Region:nk]' value='92' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Region:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1igvexc0iup5at14xo3dc1qq969o].[ctd:Comprador ID:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Region:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{9E423E64-B732-4394-A0BB-68716EA8577D}' />
    </worksheet>
    <worksheet name='Ejercicio3-b-compras'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#f28e2b' fontsize='18'>Compras</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Ejercicio1' name='federated.1igvexc0iup5at14xo3dc1qq969o' />
          </datasources>
          <datasource-dependencies datasource='federated.1igvexc0iup5at14xo3dc1qq969o'>
            <column datatype='real' name='[Compras]' role='measure' type='quantitative' />
            <column datatype='string' name='[Criptomonedas]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Criptomonedas]' derivation='None' name='[none:Criptomonedas:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Compras]' derivation='Sum' name='[sum:Compras:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]'>
            <groupfilter function='member' level='[none:Criptomonedas:nk]' member='&quot;Bitcoin&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Region:nk]' direction='DESC' using='[federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Compras:qk]' />
          <slices>
            <column>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Compras:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' value='138' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Region:nk]' value='92' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Region:nk]' value='false' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-color' data-class='total' value='#c0c0c0' />
            <format attr='border-width' value='2' />
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Compras:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Compras:qk]</run>
                <run>&gt;€</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Region:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{D0D01D51-A45E-4B4B-A967-F477CE5BDF14}' />
    </worksheet>
    <worksheet name='Ejercicio3-b-registros'>
      <table>
        <view>
          <datasources>
            <datasource caption='Ejercicio1' name='federated.1igvexc0iup5at14xo3dc1qq969o' />
          </datasources>
          <datasource-dependencies datasource='federated.1igvexc0iup5at14xo3dc1qq969o'>
            <column datatype='real' name='[Compras]' role='measure' type='quantitative' />
            <column datatype='string' name='[Criptomonedas]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Filas ID]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Filas ID]' derivation='Count' name='[cnt:Filas ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Criptomonedas]' derivation='None' name='[none:Criptomonedas:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Compras]' derivation='Sum' name='[sum:Compras:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]'>
            <groupfilter function='member' level='[none:Criptomonedas:nk]' member='&quot;Bitcoin&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Region:nk]' direction='DESC' using='[federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Compras:qk]' />
          <slices>
            <column>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Compras:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' value='98' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Region:nk]' value='92' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Region:nk]' value='false' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' value='2' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#c0c0c0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1igvexc0iup5at14xo3dc1qq969o].[cnt:Filas ID:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='center' />
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Region:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{EB380EF3-CD1C-4D9B-9C07-4BD63F34D5B3}' />
    </worksheet>
    <worksheet name='Ejercicio3-b-ventas'>
      <table>
        <view>
          <datasources>
            <datasource caption='Ejercicio1' name='federated.1igvexc0iup5at14xo3dc1qq969o' />
          </datasources>
          <datasource-dependencies datasource='federated.1igvexc0iup5at14xo3dc1qq969o'>
            <column datatype='real' name='[Compras]' role='measure' type='quantitative' />
            <column datatype='string' name='[Criptomonedas]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Ventas]' role='measure' type='quantitative' />
            <column-instance column='[Criptomonedas]' derivation='None' name='[none:Criptomonedas:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Compras]' derivation='Sum' name='[sum:Compras:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ventas]' derivation='Sum' name='[sum:Ventas:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]'>
            <groupfilter function='member' level='[none:Criptomonedas:nk]' member='&quot;Bitcoin&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Region:nk]' direction='DESC' using='[federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Compras:qk]' />
          <slices>
            <column>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Compras:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' value='100' />
            <format attr='border-width' value='2' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Region:nk]' value='92' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Region:nk]' value='false' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='subtotal' scope='rows' value='3' />
            <format attr='border-color' value='#c0c0c0' />
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Ventas:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Ventas:qk]</run>
                <run>&gt;€</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='center' />
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Region:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{D4F7574E-767D-42DD-BC5E-8492B9886AF6}' />
    </worksheet>
    <worksheet name='Ejercicio3-d'>
      <table>
        <view>
          <datasources>
            <datasource caption='Ejercicio1' name='federated.1igvexc0iup5at14xo3dc1qq969o' />
            <datasource caption='Parámetros' name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Selector' datatype='string' name='[Parámetro 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Compras&quot;'>
              <calculation class='tableau' formula='&quot;Compras&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1igvexc0iup5at14xo3dc1qq969o'>
            <column caption='% total registros' datatype='real' name='[% total compradores (copia)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([Number of Records])/SUM([Conteo compradores por region anual  (copia)]) * 100' />
            </column>
            <column caption='% total ventas' datatype='real' name='[% total compras (copia)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Ventas])/AVG([Compras por region anual (copia)]) * 100' />
            </column>
            <column caption='% total cantidad' datatype='real' name='[% total ventas (copia 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Cantidad])/AVG([Costes por region anual (copia)]) * 100' />
            </column>
            <column caption='% total compradores' datatype='real' name='[% total ventas (copia 3)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([Comprador ID])/SUM([Cantidad por region anual  (copia)]) * 100' />
            </column>
            <column caption='% total costes' datatype='real' name='[% total ventas (copia)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Coste])/AVG([Compras por region anual (copia 2)]) * 100' />
            </column>
            <column caption='Compras por region anual' datatype='real' name='[Calculation_61924526476177408]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [Criptomonedas],[Region]:AVG([Compras])}' />
            </column>
            <column caption='% total compras' datatype='real' name='[Calculation_61924526476660740]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Compras])/AVG([Calculation_61924526476177408]) * 100' />
            </column>
            <column caption='SelectorEjer' datatype='real' name='[Calculation_61924526499041285]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parámetro 1]&#13;&#10;WHEN &quot;Compras&quot; THEN [Calculation_61924526476660740]&#13;&#10;WHEN &quot;Ventas&quot; THEN [% total compras (copia)]&#13;&#10;WHEN &quot;Compradores&quot; THEN [% total ventas (copia 3)]&#13;&#10;WHEN &quot;Costes&quot; THEN [% total ventas (copia)]&#13;&#10;WHEN &quot;Registros&quot; THEN [% total compradores (copia)]&#13;&#10;WHEN &quot;Cantidad&quot; THEN [% total ventas (copia 2)]&#13;&#10;END' />
            </column>
            <column caption='Conteo compradores por region anual ' datatype='integer' name='[Cantidad por region anual  (copia)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [Criptomonedas],[Region]:COUNTD([Comprador ID])}' />
            </column>
            <column datatype='integer' name='[Cantidad]' role='measure' type='quantitative' />
            <column datatype='string' name='[Comprador ID]' role='dimension' type='nominal' />
            <column caption='Costes por region anual' datatype='real' name='[Compras por region anual (copia 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [Criptomonedas],[Region]:AVG([Coste])}' />
            </column>
            <column caption='Ventas por region anual' datatype='real' name='[Compras por region anual (copia)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [Criptomonedas],[Region]:AVG([Ventas])}' />
            </column>
            <column datatype='real' name='[Compras]' role='measure' type='quantitative' />
            <column caption='Conteo registros por region anual' datatype='integer' name='[Conteo compradores por region anual  (copia)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [Criptomonedas],[Region]:COUNT([Number of Records])}' />
            </column>
            <column datatype='real' name='[Coste]' role='measure' type='quantitative' />
            <column caption='Cantidad por region anual ' datatype='real' name='[Costes por region anual (copia)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [Criptomonedas],[Region]:AVG([Cantidad])}' />
            </column>
            <column datatype='string' name='[Criptomonedas]' role='dimension' type='nominal' />
            <column datatype='date' name='[Fecha Orden]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Ventas]' role='measure' type='quantitative' />
            <column-instance column='[Fecha Orden]' derivation='Month' name='[mn:Fecha Orden:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Criptomonedas]' derivation='None' name='[none:Criptomonedas:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_61924526499041285]' derivation='User' name='[usr:Calculation_61924526499041285:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]'>
            <groupfilter function='member' level='[none:Criptomonedas:nk]' member='&quot;Bitcoin&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Region:nk]' value='56' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1igvexc0iup5at14xo3dc1qq969o].[usr:Calculation_61924526499041285:qk]' value='% total de medidas'>
              <formatted-text>
                <run fontalignment='1'>% total de medidas</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1igvexc0iup5at14xo3dc1qq969o].[usr:Calculation_61924526499041285:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Region:nk]</rows>
        <cols>[federated.1igvexc0iup5at14xo3dc1qq969o].[mn:Fecha Orden:ok]</cols>
      </table>
      <simple-id uuid='{6EE5D4D2-FF99-41EE-A672-E54484E28B2C}' />
    </worksheet>
    <worksheet name='Ejercicio4'>
      <table>
        <view>
          <datasources>
            <datasource caption='crypto-prices' name='federated.0ulbc2u06prnp31fb3zdi1jdepnk' />
            <datasource caption='Parámetros' name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N' datatype='real' name='[Parámetro 2]' param-domain-type='any' role='measure' type='quantitative' value='30.0'>
              <calculation class='tableau' formula='30.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0ulbc2u06prnp31fb3zdi1jdepnk'>
            <column caption='Total Volumen criptomonedas' datatype='real' name='[Calculation_421649547037532160]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Number of Records] : SUM([close] * [volume])}' />
            </column>
            <column caption='% volumen criptomoneda' datatype='real' name='[Calculation_421649547040026625]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([close]*[volume]) / SUM([Calculation_421649547037532160]) * 100' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Close' datatype='real' name='[close]' role='measure' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[symbol]' derivation='None' name='[none:symbol:nk]' pivot='key' type='nominal' />
            <column-instance column='[volume]' derivation='Sum' name='[sum:volume:qk]' pivot='key' type='quantitative' />
            <column caption='Symbol' datatype='string' name='[symbol]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_421649547040026625]' derivation='User' name='[usr:Calculation_421649547040026625:qk]' pivot='key' type='quantitative' />
            <column caption='Volume' datatype='integer' name='[volume]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[none:name:nk]'>
            <groupfilter count='[Parameters].[Parámetro 2]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='[Calculation_421649547040026625]' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:name:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[none:name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[usr:Calculation_421649547040026625:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[sum:volume:qk]' />
              <lod column='[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[usr:Calculation_421649547040026625:qk]' />
              <text column='[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[none:symbol:nk]' />
              <color column='[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[none:symbol:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{6884EE86-0807-48E7-9F9A-C1F9BEEDA815}' />
    </worksheet>
    <worksheet name='Ejercicio4-b'>
      <table>
        <view>
          <datasources>
            <datasource caption='crypto-prices' name='federated.0ulbc2u06prnp31fb3zdi1jdepnk' />
          </datasources>
          <datasource-dependencies datasource='federated.0ulbc2u06prnp31fb3zdi1jdepnk'>
            <column caption='Volumen criptomoneda' datatype='real' name='[Calculation_421649547042488322]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([volume]) * SUM([close])' />
            </column>
            <column caption='Close' datatype='real' name='[close]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column caption='Symbol' datatype='string' name='[symbol]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_421649547042488322]' derivation='User' name='[usr:Calculation_421649547042488322:qk]' pivot='key' type='quantitative' />
            <column caption='Volume' datatype='integer' name='[volume]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[Action (Symbol)]'>
            <groupfilter function='member' level='[symbol]' member='&quot;BTC&quot;' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[yr:date:ok]'>
            <groupfilter function='member' level='[yr:date:ok]' member='2017' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[yr:date:ok]</column>
            <column>[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[Action (Symbol)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[usr:Calculation_421649547042488322:qk]</rows>
        <cols>[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[mn:date:ok]</cols>
      </table>
      <simple-id uuid='{1294023F-8EF9-406D-9E54-FC55E4D1F745}' />
    </worksheet>
    <worksheet name='Ejercicio4-c'>
      <table>
        <view>
          <datasources>
            <datasource caption='crypto-prices' name='federated.0ulbc2u06prnp31fb3zdi1jdepnk' />
          </datasources>
          <datasource-dependencies datasource='federated.0ulbc2u06prnp31fb3zdi1jdepnk'>
            <column-instance column='[close]' derivation='Avg' name='[avg:close:qk]' pivot='key' type='quantitative' />
            <column-instance column='[high]' derivation='Avg' name='[avg:high:qk]' pivot='key' type='quantitative' />
            <column-instance column='[low]' derivation='Avg' name='[avg:low:qk]' pivot='key' type='quantitative' />
            <column-instance column='[open]' derivation='Avg' name='[avg:open:qk]' pivot='key' type='quantitative' />
            <column-instance column='[volume]' derivation='Avg' name='[avg:volume:qk]' pivot='key' type='quantitative' />
            <column caption='Close' datatype='real' name='[close]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='High' datatype='real' name='[high]' role='measure' type='quantitative' />
            <column caption='Low' datatype='real' name='[low]' role='measure' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column caption='Open' datatype='real' name='[open]' role='measure' type='quantitative' />
            <column caption='Symbol' datatype='string' name='[symbol]' role='dimension' type='nominal' />
            <column caption='Volume' datatype='integer' name='[volume]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[avg:volume:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[avg:close:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[avg:open:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[avg:high:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[avg:low:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[avg:volume:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[avg:close:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[Action (Symbol)]'>
            <groupfilter function='member' level='[symbol]' member='&quot;BTC&quot;' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[yr:date:ok]'>
            <groupfilter function='member' level='[yr:date:ok]' member='2017' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[yr:date:ok]</column>
            <column>[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[Action (Symbol)]</column>
            <column>[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[:Measure Names]' value='153' />
            <format attr='width' field='[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[none:name:nk]' value='403' />
            <format attr='height' field='[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[:Measure Names]' value='52' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[:Measure Names]' value='140' />
            <format attr='height' field='[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[none:name:nk]' value='40' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[:Measure Names]</rows>
        <cols>[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[none:name:nk]</cols>
      </table>
      <simple-id uuid='{2E542396-E2B4-4852-8098-24CF76AD107F}' />
    </worksheet>
    <worksheet name='Ejercicio4-d'>
      <table>
        <view>
          <datasources>
            <datasource caption='crypto-prices' name='federated.0ulbc2u06prnp31fb3zdi1jdepnk' />
          </datasources>
          <datasource-dependencies datasource='federated.0ulbc2u06prnp31fb3zdi1jdepnk'>
            <column-instance column='[close]' derivation='Avg' name='[avg:close:qk]' pivot='key' type='quantitative' />
            <column caption='Close' datatype='real' name='[close]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[close]' derivation='Avg' forecast-column-base='[avg:close:qk]' forecast-column-type='forecast-value' name='[fVal:avg:close:qk]' pivot='key' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column caption='Symbol' datatype='string' name='[symbol]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[Action (Symbol)]'>
            <groupfilter function='member' level='[symbol]' member='&quot;BTC&quot;' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[yr:date:ok]'>
            <groupfilter function='member' level='[yr:date:ok]' member='2017' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[yr:date:ok]</column>
            <column>[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[Action (Symbol)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[none:name:nk]' />
              <color column='[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[none:Forecast Indicator:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[fVal:avg:close:qk]</rows>
        <cols>[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{5751ECD9-D377-45BA-929F-13030E26D232}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Ejercicio 1 - dashboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff'>Análisis de criptomonedas por estado y ciudad</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#ffaa00' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98044' id='14' param='vert' type='layout-flow' w='99002' x='499' y='978'>
            <zone fixed-size='33' h='5012' id='15' is-fixed='true' type='title' w='99002' x='499' y='978'>
              <zone-style>
                <format attr='border-color' value='#edc948' />
                <format attr='border-style' value='dotted' />
                <format attr='border-width' value='4' />
                <format attr='margin' value='4' />
                <format attr='background-color' value='#00aa00' />
              </zone-style>
            </zone>
            <zone h='93032' id='12' type='layout-basic' w='99002' x='499' y='5990'>
              <zone h='93032' id='7' param='horz' type='layout-flow' w='99002' x='499' y='5990'>
                <zone h='93032' id='5' type='layout-basic' w='85286' x='499' y='5990'>
                  <zone h='51534' id='3' name='Ejercicio1-b' w='45105' x='499' y='5990'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='93032' id='9' name='Ejercicio1-c' w='40181' x='45604' y='5990'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='41498' id='121' name='Ejercicio1-d' show-title='false' w='45105' x='499' y='57524'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone fixed-size='220' h='93032' id='6' is-fixed='true' param='vert' type='layout-flow' w='13716' x='85785' y='5990'>
                  <zone h='11002' id='8' name='Ejercicio1-b' pane-specification-id='0' param='[federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Compras:qk]' type='color' w='13716' x='85785' y='5990'>
                    <zone-style>
                      <format attr='border-color' value='#d4d4d4' />
                      <format attr='border-style' value='dotted' />
                      <format attr='border-width' value='2' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone fixed-size='24' h='3912' id='17' is-fixed='true' type='empty' w='13716' x='85785' y='16992'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='47433' id='16' name='Ejercicio1-c' pane-specification-id='0' param='[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]' type='shape' w='13716' x='85785' y='20904'>
                    <zone-style>
                      <format attr='border-color' value='#d4d4d4' />
                      <format attr='border-style' value='dotted' />
                      <format attr='border-width' value='2' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='20905' id='122' name='Ejercicio1-d' pane-specification-id='1' param='[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]' type='color' w='5985' x='686' y='61002' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#ffffff'>Análisis de criptomonedas por estado y ciudad</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='229' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98044' id='230' param='vert' type='layout-flow' w='99002' x='499' y='978'>
                <zone fixed-size='33' h='5012' id='15' type='title' w='99002' x='499' y='978'>
                  <zone-style>
                    <format attr='border-color' value='#edc948' />
                    <format attr='border-style' value='dotted' />
                    <format attr='border-width' value='4' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#00aa00' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='51534' id='3' is-fixed='true' name='Ejercicio1-b' w='45105' x='499' y='5990'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11002' id='8' name='Ejercicio1-b' pane-specification-id='0' param='[federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Compras:qk]' type='color' w='13716' x='85785' y='5990'>
                  <zone-style>
                    <format attr='border-color' value='#d4d4d4' />
                    <format attr='border-style' value='dotted' />
                    <format attr='border-width' value='2' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='93032' id='9' is-fixed='true' name='Ejercicio1-c' w='40181' x='45604' y='5990'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='47433' id='16' name='Ejercicio1-c' pane-specification-id='0' param='[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]' type='shape' w='13716' x='85785' y='20904'>
                  <zone-style>
                    <format attr='border-color' value='#d4d4d4' />
                    <format attr='border-style' value='dotted' />
                    <format attr='border-width' value='2' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41498' id='121' is-fixed='true' name='Ejercicio1-d' show-title='false' w='45105' x='499' y='57524'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='20905' id='122' name='Ejercicio1-d' pane-specification-id='1' param='[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]' type='color' w='5985' x='686' y='61002'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{9D52587A-554E-4222-9384-410AA03F65AF}' />
    </dashboard>
    <dashboard name='Ejercicio 2 - dashboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Clasificación de clientes</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='764' maxwidth='1575' minheight='764' minwidth='1575' sizing-mode='fixed' />
      <zones>
        <zone friendly-name='Mosaico' h='100000' id='6' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97906' id='107' param='horz' type='layout-flow' w='98984' x='508' y='1047'>
            <zone h='97906' id='15' param='vert' type='layout-flow' w='98984' x='508' y='1047'>
              <zone h='7592' id='16' type='title' w='98984' x='508' y='1047'>
                <zone-style>
                  <format attr='border-color' value='#555555' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='2' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='90314' id='13' type='layout-basic' w='98984' x='508' y='8639'>
                <zone h='51022' id='9' param='horz' type='layout-flow' w='98984' x='508' y='8639'>
                  <zone h='51022' id='7' type='layout-basic' w='98984' x='508' y='8639'>
                    <zone h='51022' id='5' name='Ejercicio2-a' w='50787' x='508' y='8639'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='51022' id='11' name='Ejercicio2-c' w='48197' x='51295' y='8639'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                        <format attr='background-color' value='#d3d2d2' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
                <zone h='2618' id='12' type='empty' w='98984' x='508' y='96335'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='36674' id='105' name='Ejercicio2-d' show-title='false' w='98984' x='508' y='59661'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
            <format attr='background-color' value='#d3d2d2' />
          </zone-style>
        </zone>
        <zone h='7250' id='10' name='Ejercicio2-a' pane-specification-id='2' param='[federated.0mumqo20a6h1f317s3a600drqbbb].[none:AdhocCluster:2:ok]' type='color' w='14000' x='9900' y='8750' />
        <zone h='6545' id='108' name='Ejercicio2-d' pane-specification-id='0' param='[federated.0mumqo20a6h1f317s3a600drqbbb].[sum:Ventas:qk]' type='color' w='11873' x='85016' y='60864' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run fontalignment='1'>Clasificación de clientes</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1050' minheight='1050' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='211' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='97906' id='212' param='vert' type='layout-flow' w='98984' x='508' y='1047'>
                <zone h='7592' id='16' type='title' w='98984' x='508' y='1047'>
                  <zone-style>
                    <format attr='border-color' value='#555555' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='2' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='51022' id='5' is-fixed='true' name='Ejercicio2-a' w='50787' x='508' y='8639'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7250' id='10' name='Ejercicio2-a' pane-specification-id='2' param='[federated.0mumqo20a6h1f317s3a600drqbbb].[none:AdhocCluster:2:ok]' type='color' w='14000' x='9900' y='8750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='51022' id='11' is-fixed='true' name='Ejercicio2-c' w='48197' x='51295' y='8639'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#d3d2d2' />
                  </zone-style>
                </zone>
                <zone fixed-size='272' h='36674' id='105' is-fixed='true' name='Ejercicio2-d' show-title='false' w='98984' x='508' y='59661'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6545' id='108' name='Ejercicio2-d' pane-specification-id='0' param='[federated.0mumqo20a6h1f317s3a600drqbbb].[sum:Ventas:qk]' type='color' w='11873' x='85016' y='60864'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D403DB80-CA65-4304-A4C6-DFA68E6AFD42}' />
    </dashboard>
    <dashboard name='Ejercicio 3 -dashboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontsize='25' italic='true'>Análisis del bitcoin</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f5ead7' />
        </style-rule>
      </style>
      <size maxheight='818' maxwidth='1604' minheight='818' minwidth='1604' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Parámetros' name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Selector' datatype='string' name='[Parámetro 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Compras&quot;'>
          <calculation class='tableau' formula='&quot;Compras&quot;' />
          <members>
            <member value='&quot;Compras&quot;' />
            <member value='&quot;Compradores&quot;' />
            <member value='&quot;Costes&quot;' />
            <member value='&quot;Registros&quot;' />
            <member value='&quot;Ventas&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98044' id='175' param='horz' type='layout-flow' w='99002' x='499' y='978'>
            <zone h='98044' id='95' param='vert' type='layout-flow' w='99002' x='499' y='978'>
              <zone h='9413' id='96' type='title' w='99002' x='499' y='978'>
                <zone-style>
                  <format attr='border-color' value='#f28e2b' />
                  <format attr='border-style' value='dotted' />
                  <format attr='border-width' value='2' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='119' h='14548' id='101' is-fixed='true' param='horz' type='layout-flow' w='99002' x='499' y='10391'>
                <zone fixed-size='251' h='14548' id='102' is-fixed='true' name='Ejercicio3-aCompras' show-title='false' w='16147' x='499' y='10391'>
                  <layout-cache fixed-size-h='82' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#4e79a7' />
                    <format attr='border-style' value='dashed' />
                    <format attr='border-width' value='2' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone fixed-size='217' h='14548' id='106' is-fixed='true' type='empty' w='14028' x='16646' y='10391'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone fixed-size='204' h='14548' id='103' is-fixed='true' name='Ejercicio3-aVentas' show-title='false' w='13217' x='30674' y='10391'>
                  <layout-cache fixed-size-h='78' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#4e79a7' />
                    <format attr='border-style' value='dashed' />
                    <format attr='border-width' value='2' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone fixed-size='208' h='14548' id='107' is-fixed='true' type='empty' w='13467' x='43891' y='10391'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone fixed-size='183' h='14548' id='104' is-fixed='true' name='Ejercicio3-aCompradores' show-title='false' w='11908' x='57358' y='10391'>
                  <layout-cache fixed-size-h='73' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#4e79a7' />
                    <format attr='border-style' value='dashed' />
                    <format attr='border-width' value='2' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone fixed-size='238' h='14548' id='108' is-fixed='true' type='empty' w='15337' x='69266' y='10391'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone fixed-size='157' h='14548' id='105' is-fixed='true' name='Ejercicio3-aRegistros' show-title='false' w='10287' x='84603' y='10391'>
                  <layout-cache fixed-size-h='99' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#4e79a7' />
                    <format attr='border-style' value='dashed' />
                    <format attr='border-width' value='2' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='74083' id='93' type='layout-basic' w='99002' x='499' y='24939'>
                <zone h='74083' id='63' param='horz' type='layout-flow' w='99002' x='499' y='24939'>
                  <zone h='74083' id='61' type='layout-basic' w='99002' x='499' y='24939'>
                    <zone h='31172' id='8' param='horz' type='layout-flow' w='99002' x='499' y='24939'>
                      <zone h='31172' id='6' type='layout-basic' w='99002' x='499' y='24939'>
                        <zone h='31172' id='5' name='Ejercicio3-b' show-title='false' w='55920' x='499' y='24939'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='31172' id='125' param='vert' type='layout-flow' w='43082' x='56419' y='24939'>
                          <zone fixed-size='53' h='7457' id='131' is-fixed='true' type='empty' w='43082' x='56419' y='24939'>
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                          <zone h='23712' id='132' param='horz' type='layout-flow' w='43082' x='56419' y='32396'>
                            <zone fixed-size='169' h='23712' id='133' is-fixed='true' name='Ejercicio3-b-ventas' show-title='false' w='11035' x='56419' y='32396'>
                              <layout-cache type-h='cell' type-w='fixed' />
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone fixed-size='198' h='23712' id='135' is-fixed='true' name='Ejercicio3-b-compras' show-title='false' w='12843' x='67454' y='32396'>
                              <layout-cache type-h='cell' type-w='fixed' />
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone fixed-size='147' h='23712' id='136' is-fixed='true' name='Ejercicio3-b-registros' show-title='false' w='9664' x='80297' y='32396'>
                              <layout-cache type-h='cell' type-w='fixed' />
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone fixed-size='104' h='23712' id='141' is-fixed='true' name='Ejercicio3-b-compradores' show-title='false' w='6983' x='89961' y='32396'>
                              <layout-cache type-h='cell' type-w='fixed' />
                              <zone-style>
                                <format attr='border-color' value='#c0c0c0' />
                                <format attr='border-style' value='solid' />
                                <format attr='border-width' value='1' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                          </zone>
                        </zone>
                      </zone>
                    </zone>
                    <zone h='42911' id='100' param='horz' type='layout-flow' w='99002' x='499' y='56111'>
                      <zone h='42911' id='150' param='vert' type='layout-flow' w='99002' x='499' y='56111'>
                        <zone fixed-size='89' h='11858' id='152' is-fixed='true' type='empty' w='99002' x='499' y='56111'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone fixed-size='509' h='31053' id='173' is-fixed='true' name='Ejercicio3-d' show-title='false' w='99002' x='499' y='67969'>
                          <layout-cache type-h='fixed' type-w='cell' />
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='8313' id='109' type='text' w='12531' x='1746' y='14548'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontsize='12'>Compras</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='9046' id='112' type='text' w='15773' x='29364' y='14303'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontsize='12'>Ventas</run>
          </formatted-text>
        </zone>
        <zone h='9046' id='113' type='text' w='10474' x='58167' y='12958'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontsize='12'>Compradores</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='9169' id='116' type='text' w='13529' x='83354' y='14670'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontsize='10'>Total de </run>
            <run fontalignment='1'>Æ&#10;</run>
            <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontsize='10'>registros</run>
          </formatted-text>
        </zone>
        <zone h='12225' id='9' name='Ejercicio3-b' pane-specification-id='0' param='[federated.1igvexc0iup5at14xo3dc1qq969o].[usr:Ratio beneficios (copia):qk]' type='color' w='13653' x='41521' y='43643' />
        <zone forceUpdate='true' h='11125' id='144' type='text' w='6733' x='56359' y='25672'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontsize='10' underline='true'>Ventas</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='11247' id='145' type='text' w='6796' x='68579' y='25550'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontsize='10' underline='true'>Compras</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='11247' id='146' type='text' w='6733' x='80486' y='23961'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontsize='10' underline='true'>Total</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontsize='10' underline='true'>registros</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='11247' id='149' type='text' w='8728' x='88778' y='23105'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontsize='10' underline='true'>Total</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontsize='10' underline='true'>compradores</run>
          </formatted-text>
        </zone>
        <zone h='6357' id='177' mode='compact' param='[Parameters].[Parámetro 1]' show-title='false' type='paramctrl' w='15274' x='46820' y='61125'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#f5ead7' />
          </zone-style>
        </zone>
        <zone h='12347' id='176' name='Ejercicio3-d' pane-specification-id='0' param='[federated.1igvexc0iup5at14xo3dc1qq969o].[usr:Calculation_61924526499041285:qk]' type='color' w='18890' x='70761' y='58924' />
        <zone forceUpdate='true' h='9046' id='178' type='text' w='29676' x='873' y='55501'>
          <formatted-text>
            <run bold='true' fontcolor='#898989' fontsize='12'>Porcentaje total  de medidas/mes/region</run>
          </formatted-text>
        </zone>
        <zone h='9291' id='179' type='text' w='7045' x='39277' y='57702'>
          <formatted-text>
            <run fontcolor='#000000' fontsize='12'>Medidas</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontsize='25' italic='true'>Análisis del bitcoin</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='2550' minheight='2550' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='230' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98044' id='231' param='vert' type='layout-flow' w='99002' x='499' y='978'>
                <zone h='9413' id='96' type='title' w='99002' x='499' y='978'>
                  <zone-style>
                    <format attr='border-color' value='#f28e2b' />
                    <format attr='border-style' value='dotted' />
                    <format attr='border-width' value='2' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='107' h='14548' id='102' is-fixed='true' name='Ejercicio3-aCompras' show-title='false' w='16147' x='499' y='10391'>
                  <layout-cache fixed-size-h='82' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#4e79a7' />
                    <format attr='border-style' value='dashed' />
                    <format attr='border-width' value='2' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='107' h='14548' id='103' is-fixed='true' name='Ejercicio3-aVentas' show-title='false' w='13217' x='30674' y='10391'>
                  <layout-cache fixed-size-h='78' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#4e79a7' />
                    <format attr='border-style' value='dashed' />
                    <format attr='border-width' value='2' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='107' h='14548' id='104' is-fixed='true' name='Ejercicio3-aCompradores' show-title='false' w='11908' x='57358' y='10391'>
                  <layout-cache fixed-size-h='73' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#4e79a7' />
                    <format attr='border-style' value='dashed' />
                    <format attr='border-width' value='2' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='107' h='14548' id='105' is-fixed='true' name='Ejercicio3-aRegistros' show-title='false' w='10287' x='84603' y='10391'>
                  <layout-cache fixed-size-h='99' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#4e79a7' />
                    <format attr='border-style' value='dashed' />
                    <format attr='border-width' value='2' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9046' id='113' type='text' w='10474' x='58167' y='12958'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontsize='12'>Compradores</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='9046' id='112' type='text' w='15773' x='29364' y='14303'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontsize='12'>Ventas</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='8313' id='109' type='text' w='12531' x='1746' y='14548'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontsize='12'>Compras</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='9169' id='116' type='text' w='13529' x='83354' y='14670'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontsize='10'>Total de </run>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontsize='10'>registros</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='11247' id='149' type='text' w='8728' x='88778' y='23105'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontsize='10' underline='true'>Total</run>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontsize='10' underline='true'>compradores</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='11247' id='146' type='text' w='6733' x='80486' y='23961'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontsize='10' underline='true'>Total</run>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontsize='10' underline='true'>registros</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='247' h='31172' id='5' is-fixed='true' name='Ejercicio3-b' show-title='false' w='55920' x='499' y='24939'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12225' id='9' name='Ejercicio3-b' pane-specification-id='0' param='[federated.1igvexc0iup5at14xo3dc1qq969o].[usr:Ratio beneficios (copia):qk]' type='color' w='13653' x='41521' y='43643'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='11247' id='145' type='text' w='6796' x='68579' y='25550'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontsize='10' underline='true'>Compras</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='11125' id='144' type='text' w='6733' x='56359' y='25672'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontsize='10' underline='true'>Ventas</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='186' h='23712' id='133' is-fixed='true' name='Ejercicio3-b-ventas' show-title='false' w='11035' x='56419' y='32396'>
                  <layout-cache type-h='cell' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='186' h='23712' id='135' is-fixed='true' name='Ejercicio3-b-compras' show-title='false' w='12843' x='67454' y='32396'>
                  <layout-cache type-h='cell' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='186' h='23712' id='136' is-fixed='true' name='Ejercicio3-b-registros' show-title='false' w='9664' x='80297' y='32396'>
                  <layout-cache type-h='cell' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='184' h='23712' id='141' is-fixed='true' name='Ejercicio3-b-compradores' show-title='false' w='6983' x='89961' y='32396'>
                  <layout-cache type-h='cell' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#c0c0c0' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='9046' id='178' type='text' w='29676' x='873' y='55501'>
                  <formatted-text>
                    <run bold='true' fontcolor='#898989' fontsize='12'>Porcentaje total  de medidas/mes/region</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9291' id='179' type='text' w='7045' x='39277' y='57702'>
                  <formatted-text>
                    <run fontcolor='#000000' fontsize='12'>Medidas</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6357' id='177' mode='compact' param='[Parameters].[Parámetro 1]' show-title='false' type='paramctrl' w='15274' x='46820' y='61125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#f5ead7' />
                  </zone-style>
                </zone>
                <zone fixed-size='246' h='31053' id='173' is-fixed='true' name='Ejercicio3-d' show-title='false' w='99002' x='499' y='67969'>
                  <layout-cache type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12347' id='176' name='Ejercicio3-d' pane-specification-id='0' param='[federated.1igvexc0iup5at14xo3dc1qq969o].[usr:Calculation_61924526499041285:qk]' type='color' w='18890' x='70761' y='58924'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{0C8392D1-40AB-4007-A230-8D4F784306C9}' />
    </dashboard>
    <dashboard name='Ejercicio4 - dashboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Obtener la evolución de las criptomonedas más importantes del 2017 y analizar el pronóstico de cierre</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Parámetros' name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top N' datatype='real' name='[Parámetro 2]' param-domain-type='any' role='measure' type='quantitative' value='30.0'>
          <calculation class='tableau' formula='30.0' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98044' id='11' param='horz' type='layout-flow' w='99002' x='499' y='978'>
            <zone h='98044' id='5' param='vert' type='layout-flow' w='99002' x='499' y='978'>
              <zone h='13203' id='7' type='title' w='99002' x='499' y='978'>
                <zone-style>
                  <format attr='border-color' value='#b6992d' />
                  <format attr='border-style' value='dotted' />
                  <format attr='border-width' value='2' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#faf5f0' />
                </zone-style>
              </zone>
              <zone h='84841' id='6' type='layout-basic' w='99002' x='499' y='14181'>
                <zone h='84841' id='8' param='vert' type='layout-flow' w='99002' x='499' y='14181'>
                  <zone fixed-size='340' h='41565' id='38' is-fixed='true' type='layout-basic' w='99002' x='499' y='14181'>
                    <zone h='41565' id='15' param='horz' type='layout-flow' w='51621' x='499' y='14181'>
                      <zone fixed-size='889' h='41565' id='9' is-fixed='true' name='Ejercicio4' show-title='false' w='51621' x='499' y='14181'>
                        <layout-cache cell-count-h='1' type-h='cell' type-w='cell' />
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                    <zone h='41565' id='39' param='horz' type='layout-flow' w='47381' x='52120' y='14181'>
                      <zone h='41565' id='12' mode='type_in' param='[Parameters].[Parámetro 2]' type='paramctrl' w='9663' x='52120' y='14181'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone fixed-size='597' h='41565' id='14' is-fixed='true' name='Ejercicio4-c' show-title='false' w='37718' x='61783' y='14181'>
                        <layout-cache fixed-size-h='301' type-h='fixed' type-w='fixed' />
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                  </zone>
                  <zone h='43276' id='20' param='horz' type='layout-flow' w='99002' x='499' y='55746'>
                    <zone h='43276' id='13' name='Ejercicio4-b' show-title='false' w='51615' x='499' y='55746'>
                      <layout-cache cell-count-w='12' minheight='129' non-cell-size-w='78' type-h='scalable' type-w='cell' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone fixed-size='752' h='43276' id='21' is-fixed='true' name='Ejercicio4-d' show-title='false' w='47382' x='52114' y='55746'>
                      <layout-cache minheight='171' minwidth='178' type-h='scalable' type-w='scalable' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
            <format attr='background-color' value='#f2f9f9' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run>Obtener la evolución de las criptomonedas más importantes del 2017 y analizar el pronóstico de cierre</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='56' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98044' id='57' param='vert' type='layout-flow' w='99002' x='499' y='978'>
                <zone h='13203' id='7' type='title' w='99002' x='499' y='978'>
                  <zone-style>
                    <format attr='border-color' value='#b6992d' />
                    <format attr='border-style' value='dotted' />
                    <format attr='border-width' value='2' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#faf5f0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41565' id='9' is-fixed='true' name='Ejercicio4' show-title='false' w='51621' x='499' y='14181'>
                  <layout-cache cell-count-h='1' type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='41565' id='12' mode='type_in' param='[Parameters].[Parámetro 2]' type='paramctrl' w='9663' x='52120' y='14181'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41565' id='14' is-fixed='true' name='Ejercicio4-c' show-title='false' w='37718' x='61783' y='14181'>
                  <layout-cache fixed-size-h='301' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43276' id='13' is-fixed='true' name='Ejercicio4-b' show-title='false' w='51615' x='499' y='55746'>
                  <layout-cache cell-count-w='12' minheight='129' non-cell-size-w='78' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43276' id='21' is-fixed='true' name='Ejercicio4-d' show-title='false' w='47382' x='52114' y='55746'>
                  <layout-cache minheight='171' minwidth='178' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{492A6C9D-6F4C-4785-ABE4-57B9972EA72F}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='106'>
    <window class='worksheet' name='Ejercicio1-b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='175'>
            <card pane-specification-id='0' param='[federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Compras:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[yr:Fecha Orden:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FFFB8643-F68E-4EA5-BD13-D1E0557363D2}' />
    </window>
    <window class='worksheet' name='Ejercicio1-b-popup'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='174'>
            <card pane-specification-id='3' param='[federated.1igvexc0iup5at14xo3dc1qq969o].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Estado:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Alabama&quot;</bucket>
                </multibucket>
                <axis>[federated.1igvexc0iup5at14xo3dc1qq969o].[usr:Calculation_1036109419619012608:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Clases de cripto:nk]</field>
            <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]</field>
            <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Estado:nk]</field>
            <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Ventas:qk]</field>
            <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[usr:Calculation_1036109419619012608:qk]</field>
            <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[yr:Fecha Orden:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BF5E58C4-73BD-4EDA-ABCE-C7FD86B7A0F9}' />
    </window>
    <window class='worksheet' name='Ejercicio1-c'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='174'>
            <card pane-specification-id='0' param='[federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Calculation_1036109419651473410:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]</field>
            <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[yr:Fecha Orden:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{821F18E7-D80B-492F-AE9E-A06C8CDFA579}' />
    </window>
    <window class='worksheet' name='Ejercicio1-d'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F9F4F208-C40E-4BC3-B392-A1258715E799}' />
    </window>
    <window class='worksheet' name='Ejercicio2-a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='174'>
            <card pane-specification-id='6' param='[federated.0mumqo20a6h1f317s3a600drqbbb].[none:AdhocCluster:8:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0mumqo20a6h1f317s3a600drqbbb].[none:AdhocCluster:1:ok]</field>
            <field>[federated.0mumqo20a6h1f317s3a600drqbbb].[none:AdhocCluster:2:ok]</field>
            <field>[federated.0mumqo20a6h1f317s3a600drqbbb].[none:AdhocCluster:3:ok]</field>
            <field>[federated.0mumqo20a6h1f317s3a600drqbbb].[none:AdhocCluster:4:ok]</field>
            <field>[federated.0mumqo20a6h1f317s3a600drqbbb].[none:AdhocCluster:6:ok]</field>
            <field>[federated.0mumqo20a6h1f317s3a600drqbbb].[none:AdhocCluster:7:ok]</field>
            <field>[federated.0mumqo20a6h1f317s3a600drqbbb].[none:AdhocCluster:8:ok]</field>
            <field>[federated.0mumqo20a6h1f317s3a600drqbbb].[none:Comprador ID:nk]</field>
            <field>[federated.0mumqo20a6h1f317s3a600drqbbb].[none:Comprador:nk]</field>
            <field>[federated.0mumqo20a6h1f317s3a600drqbbb].[none:Criptomonedas:nk]</field>
            <field>[federated.0mumqo20a6h1f317s3a600drqbbb].[none:Dinero Negro:nk]</field>
            <field>[federated.0mumqo20a6h1f317s3a600drqbbb].[none:Orden ID:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8E435011-2E53-40E1-8AC8-63004C2F5AF2}' />
    </window>
    <window class='worksheet' name='Ejercicio2-c'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0mumqo20a6h1f317s3a600drqbbb].[none:Comprador ID:nk]</field>
            <field>[federated.0mumqo20a6h1f317s3a600drqbbb].[none:Dinero Negro:nk]</field>
            <field>[federated.0mumqo20a6h1f317s3a600drqbbb].[none:Operaciones:qk]</field>
            <field>[federated.0mumqo20a6h1f317s3a600drqbbb].[yr:Fecha Orden:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8DCD0857-3882-42D2-8E81-D4764AC49EB2}' />
    </window>
    <window class='worksheet' name='Ejercicio2-d'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='174'>
            <card pane-specification-id='0' param='[federated.0mumqo20a6h1f317s3a600drqbbb].[sum:Ventas:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0mumqo20a6h1f317s3a600drqbbb].[none:Comprador:nk]</field>
            <field>[federated.0mumqo20a6h1f317s3a600drqbbb].[none:Region:nk]</field>
            <field>[federated.0mumqo20a6h1f317s3a600drqbbb].[sum:Ventas:qk]</field>
            <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Comprador:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9A1CCA2B-1804-4ABC-8FC9-D66790F2D791}' />
    </window>
    <window class='worksheet' name='Ejercicio3-aCompras'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields>
                    <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]</field>
                  <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Compras:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Bitcoin&quot;</value>
                <value>330007.05400000012</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[:Measure Names]</field>
            <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Comprador ID:nk]</field>
            <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]</field>
            <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Filas ID:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1C6CDBB7-7FB0-44F3-97D0-BE70B62B96EC}' />
    </window>
    <window class='worksheet' name='Ejercicio3-aVentas'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[:Measure Names]</field>
            <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Comprador ID:nk]</field>
            <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]</field>
            <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Filas ID:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{29747349-513D-497F-9D28-03411EDFD341}' />
    </window>
    <window class='worksheet' name='Ejercicio3-aCompradores'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields>
                    <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[ctd:Comprador ID:qk]</field>
                  <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>511</value>
                <value>&quot;Bitcoin&quot;</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[:Measure Names]</field>
            <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Comprador ID:nk]</field>
            <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]</field>
            <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Filas ID:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6EEC6869-EE00-4492-AFE6-B4102FFADCB2}' />
    </window>
    <window class='worksheet' name='Ejercicio3-aRegistros'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields>
                    <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[cnt:Filas ID:qk]</field>
                  <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>889</value>
                <value>&quot;Bitcoin&quot;</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[:Measure Names]</field>
            <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Comprador ID:nk]</field>
            <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]</field>
            <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Filas ID:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D789ED0D-D936-418A-92CD-31167BD57126}' />
    </window>
    <window class='worksheet' name='Ejercicio3-b'>
      <cards>
        <edge name='left'>
          <strip size='224'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1igvexc0iup5at14xo3dc1qq969o].[usr:Ratio beneficios (copia):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Calculation_2140969072721739781:qk]</field>
            <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]</field>
            <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Region:nk]</field>
            <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[usr:Calculation_2140969072721428484:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DCFDE099-6ADB-4C05-BDD2-6494CF6C320D}' />
    </window>
    <window class='worksheet' name='Ejercicio3-b-compras'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Comprador ID:nk]</field>
            <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]</field>
            <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Filas ID:ok]</field>
            <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B22779AE-61FB-41D1-9D85-FBED2F30238A}' />
    </window>
    <window class='worksheet' name='Ejercicio3-b-ventas'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Comprador ID:nk]</field>
            <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]</field>
            <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Filas ID:ok]</field>
            <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FB1B1F4A-5F05-41D7-BAC2-5E2899C74079}' />
    </window>
    <window class='worksheet' name='Ejercicio3-b-registros'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Comprador ID:nk]</field>
            <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]</field>
            <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Filas ID:ok]</field>
            <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2891D9DD-7A6B-42C1-90C7-79459B7C6D8A}' />
    </window>
    <window class='worksheet' name='Ejercicio3-b-compradores'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Comprador ID:nk]</field>
            <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]</field>
            <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Filas ID:ok]</field>
            <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E40BA3DB-3960-47D9-8463-03F8B1AAEAF0}' />
    </window>
    <window class='worksheet' name='Ejercicio3-d'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='174'>
            <card mode='compact' param='[Parameters].[Parámetro 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.1igvexc0iup5at14xo3dc1qq969o].[usr:Calculation_61924526499041285:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parámetro 1]</field>
            <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[mn:Fecha Orden:ok]</field>
            <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]</field>
            <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Region:nk]</field>
            <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[usr:% total compradores (copia):qk]</field>
            <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[usr:Calculation_61924526476660740:qk]</field>
            <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[yr:Fecha Orden:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{36A359D6-C6CB-4504-ADD1-02CB806C6591}' />
    </window>
    <window class='worksheet' name='Ejercicio4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='174'>
            <card mode='type_in' param='[Parameters].[Parámetro 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2014</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[mn:date:ok]</field>
            <field>[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[none:name:nk]</field>
            <field>[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[none:symbol:nk]</field>
            <field>[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[qr:date:ok]</field>
            <field>[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4D1C524D-CD4D-4735-8B50-2041716BAB42}' />
    </window>
    <window class='worksheet' name='Ejercicio4-b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[mn:date:ok]</field>
            <field>[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[none:name:nk]</field>
            <field>[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[none:symbol:nk]</field>
            <field>[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[qr:date:ok]</field>
            <field>[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[tmn:date:ok]</field>
            <field>[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{45E50591-0852-4F0A-8DEA-9F4C36C575E8}' />
    </window>
    <window class='worksheet' name='Ejercicio4-c'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[:Measure Names]</field>
            <field>[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[none:name:nk]</field>
            <field>[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{16FECB69-AB83-4D17-99E8-71078A96AB37}' />
    </window>
    <window class='worksheet' name='Ejercicio4-d'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='174'>
            <card pane-specification-id='0' param='[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[none:name:nk]&#10;[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[:Measure Names]</field>
            <field>[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[none:Forecast Indicator:nk]</field>
            <field>[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[none:name:nk]</field>
            <field>[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C17F46E5-31B8-44F4-8736-041E81C0B129}' />
    </window>
    <window class='dashboard' name='Ejercicio 1 - dashboard'>
      <viewpoints>
        <viewpoint name='Ejercicio1-b'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[Longitude (generated)]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[Latitude (generated)]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Estado:nk]</field>
                    <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Pais:nk]</field>
                    <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Compras:qk]</field>
                    <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[Geometry (generated)]</field>
                    <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[Latitude (generated)]</field>
                    <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[Longitude (generated)]</field>
                    <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[usr:Calculation_1036109419619012608:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Minnesota&quot;</value>
                  <value>&quot;United States&quot;</value>
                  <value>6728.2499999999982</value>
                  <value>&quot;POLYGON((-97.2303 49,-95.1531 49.0001,-95.154 49.3855,-95.0533 49.3526,-94.9561 49.3694,-94.8528 49.3234,-94.8174 49.3202,-94.8255 49.2928,-94.772 49.1193,-94.7496 49.0983,-94.6906 48.917,-94.6857 48.8401,-94.7043 48.8243,-94.6909 48.7781,-94.5872 48.7176,-94.5384 48.7028,-94.4411 48.6942,-94.3889 48.7119,-94.3085 48.7102,-94.2605 48.6964,-94.2546 48.6614,-94.2243 48.6495,-94.0069 48.6432,-93.9544 48.6337,-93.844 48.6294,-93.8053 48.5703,-93.8183 48.5301,-93.7944 48.516,-93.6472 48.5174,-93.542 48.5296,-93.4666 48.5466,-93.465 48.5921,-93.4062 48.6097,-93.3534 48.6127,-93.3473 48.6265,-93.2595 48.642,-93.2058 48.6424,-93.1786 48.6232,-93.0922 48.6278,-92.9831 48.6239,-92.9499 48.6299,-92.9313 48.6073,-92.7298 48.5391,-92.6354 48.5426,-92.6274 48.5033,-92.6988 48.4948,-92.7126 48.4628,-92.6551 48.4361,-92.5076 48.448,-92.4566 48.4003,-92.4767 48.3704,-92.4556 48.3302,-92.4162 48.2965,-92.3753 48.2262,-92.2695 48.2476,-92.2909 48.2662,-92.3058 48.3164,-92.2622 48.3546,-92.2097 48.3458,-92.162 48.3632,-92.1432 48.3556,-92.0552 48.3591,-92.047 48.3346,-92.0005 48.3212,-92.0058 48.2646,-91.9595 48.2345,-91.8937 48.2388,-91.8645 48.2076,-91.7149 48.1998,-91.6993 48.1342,-91.7126 48.115,-91.6536 48.1141,-91.6408 48.0975,-91.5598 48.1094,-91.5679 48.044,-91.4891 48.0691,-91.4505 48.0697,-91.438 48.0496,-91.3729 48.0687,-91.2512 48.0836,-91.0827 48.1808,-91.0316 48.1889,-90.9773 48.2198,-90.8891 48.2453,-90.8385 48.2385,-90.8338 48.1878,-90.7765 48.1604,-90.7957 48.1397,-90.7506 48.0916,-90.6416 48.1035,-90.5833 48.1233,-90.5527 48.0965,-90.4043 48.1055,-90.3449 48.0945,-90.2264 48.1087,-90.1437 48.113,-90.0233 48.0846,-89.994 48.0282,-89.9343 48.0151,-89.8985 47.988,-89.8314 47.9998,-89.8207 48.0152,-89.72 48.0191,-89.7023 48.0065,-89.618 48.0112,-89.5855 48.0011,-89.7947 47.891,-89.9743 47.8305,-90.5371 47.7031,-90.73 47.6275,-91.0231 47.465,-91.1645 47.3715,-91.2886 47.2585,-91.4813 47.1243,-91.5714 47.0913,-91.794 46.9399,-91.8463 46.9231,-92.0861 46.7943,-92.1301 46.7429,-92.1463 46.7159,-92.1891 46.7175,-92.1765 46.6902,-92.2124 46.6499,-92.2922 46.6632,-92.294 46.0744,-92.3353 46.0594,-92.3504 46.0164,-92.4107 46.0273,-92.4423 46.0162,-92.4728 45.973,-92.5252 45.9839,-92.5512 45.9522,-92.6399 45.9335,-92.7064 45.8954,-92.7657 45.8273,-92.7579 45.8112,-92.7846 45.7642,-92.8692 45.7176,-92.8871 45.6441,-92.8837 45.5755,-92.8233 45.5609,-92.7734 45.5682,-92.7261 45.5411,-92.7267 45.5145,-92.6466 45.4416,-92.6503 45.3988,-92.7041 45.3537,-92.699 45.3364,-92.7587 45.291,-92.758 45.2096,-92.7668 45.1855,-92.7449 45.1083,-92.8029 45.0654,-92.762 45.0221,-92.7694 44.9722,-92.7507 44.9373,-92.7731 44.9014,-92.7657 44.841,-92.8056 44.7684,-92.802 44.7457,-92.732 44.7143,-92.6218 44.639,-92.6225 44.6161,-92.5689 44.6034,-92.5399 44.5675,-92.4325 44.5657,-92.3476 44.5572,-92.3162 44.541,-92.2985 44.4946,-92.2211 44.4404,-92.0836 44.4073,-91.96 44.3598,-91.9282 44.3355,-91.9203 44.2865,-91.897 44.2757,-91.893 44.2352,-91.8582 44.193,-91.8173 44.1642,-91.7106 44.1205,-91.6464 44.0633,-91.5826 44.0274,-91.4405 44.0015,-91.3647 43.9349,-91.2841 43.8471,-91.2441 43.7747,-91.2685 43.7098,-91.2687 43.6153,-91.2367 43.5877,-91.2438 43.5491,-91.2177 43.5005,-92.449 43.5005,-93.0243 43.4997,-93.6486 43.4996,-94.8546 43.5009,-94.9147 43.5004,-95.861 43.5001,-96.453 43.5004,-96.4533 43.8496,-96.4515 44.8056,-96.4531 45.2981,-96.4891 45.3571,-96.6198 45.4089,-96.6805 45.4105,-96.7314 45.457,-96.7634 45.52,-96.8568 45.6054,-96.8386 45.6475,-96.7504 45.6988,-96.6727 45.7323,-96.5831 45.82,-96.5637 45.9352,-96.5766 46.0218,-96.5569 46.0646,-96.5592 46.105,-96.5803 46.1517,-96.5836 46.2012,-96.606 46.2939,-96.5998 46.3292,-96.666 46.3746,-96.7135 46.4651,-96.7397 46.487,-96.7504 46.584,-96.783 46.6304,-96.798 46.6303,-96.7811 46.722,-96.7871 46.7857,-96.8025 46.8115,-96.7546 46.9149,-96.7918 46.9285,-96.8232 46.9715,-96.8334 47.0104,-96.8178 47.0523,-96.8163 47.1084,-96.84 47.1505,-96.826 47.1546,-96.8329 47.2376,-96.8442 47.2925,-96.8314 47.3397,-96.8585 47.3679,-96.8395 47.3996,-96.8718 47.4188,-96.8559 47.44,-96.8681 47.4793,-96.8489 47.499,-96.8681 47.5291,-96.8506 47.5542,-96.8512 47.5988,-96.8886 47.6385,-96.8869 47.6722,-96.9301 47.7183,-96.9353 47.7657,-96.9797 47.8094,-97.0054 47.8702,-97.0213 47.8726,-97.0178 47.9198,-97.0546 47.9463,-97.0536 47.9916,-97.0713 48.0458,-97.1095 48.1047,-97.1465 48.1441,-97.1467 48.1732,-97.1229 48.2165,-97.1483 48.2237,-97.1166 48.2797,-97.1355 48.2871,-97.1203 48.3271,-97.1555 48.3638,-97.1633 48.392,-97.1315 48.4066,-97.1293 48.454,-97.1617 48.4762,-97.1456 48.5381,-97.1624 48.5431,-97.1499 48.6125,-97.1185 48.6208,-97.0987 48.6592,-97.1101 48.7062,-97.1373 48.7264,-97.1578 48.8079,-97.1894 48.8144,-97.1739 48.8529,-97.1999 48.8817,-97.1901 48.8958,-97.2343 48.9474,-97.2303 49))&quot;</value>
                  <value>46.25</value>
                  <value>-94.25</value>
                  <value>0.365604562850667</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Ejercicio1-c'>
          <zoom type='entire-view' />
          <highlight field='[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]' type='shape'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Ejercicio1-d'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='122' />
      <simple-id uuid='{A97C9896-A431-413C-99A3-1569C59E1171}' />
    </window>
    <window class='dashboard' name='Ejercicio 2 - dashboard'>
      <viewpoints>
        <viewpoint name='Ejercicio2-a'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0mumqo20a6h1f317s3a600drqbbb].[none:AdhocCluster:2:ok]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Ejercicio2-c'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Ejercicio2-d'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='105' />
      <device-preview visible='true' />
      <simple-id uuid='{3B1092F5-6E8B-4A20-ABC3-0A1CC24B1151}' />
    </window>
    <window class='dashboard' name='Ejercicio 3 -dashboard'>
      <viewpoints>
        <viewpoint name='Ejercicio3-aCompradores' />
        <viewpoint name='Ejercicio3-aCompras'>
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields>
                      <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[cnt:Filas ID:qk]</field>
                    <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[ctd:Comprador ID:qk]</field>
                    <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[none:Criptomonedas:nk]</field>
                    <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Compras:qk]</field>
                    <field>[federated.1igvexc0iup5at14xo3dc1qq969o].[sum:Ventas:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>889</value>
                  <value>511</value>
                  <value>&quot;Bitcoin&quot;</value>
                  <value>330007.05400000012</value>
                  <value>44515.730599999988</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Ejercicio3-aRegistros' />
        <viewpoint name='Ejercicio3-aVentas' />
        <viewpoint name='Ejercicio3-b'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Ejercicio3-b-compradores'>
          <zoom type='fit-height' />
        </viewpoint>
        <viewpoint name='Ejercicio3-b-compras'>
          <zoom type='fit-height' />
        </viewpoint>
        <viewpoint name='Ejercicio3-b-registros'>
          <zoom type='fit-height' />
        </viewpoint>
        <viewpoint name='Ejercicio3-b-ventas'>
          <zoom type='fit-height' />
        </viewpoint>
        <viewpoint name='Ejercicio3-d'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='152' />
      <simple-id uuid='{9761EEC5-87E1-4261-BB5A-80340AA42979}' />
    </window>
    <window class='dashboard' maximized='true' name='Ejercicio4 - dashboard'>
      <viewpoints>
        <viewpoint name='Ejercicio4'>
          <current-page>
            <multibucket>
              <bucket>2014</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[none:symbol:nk]</field>
                    <field>[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[sum:volume:qk]</field>
                    <field>[federated.0ulbc2u06prnp31fb3zdi1jdepnk].[usr:Calculation_421649547040026625:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;BTC&quot;</value>
                  <value>731894894620</value>
                  <value>95.811885535739947</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Ejercicio4-b'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Ejercicio4-c' />
        <viewpoint name='Ejercicio4-d'>
          <zoom type='fit-height' />
        </viewpoint>
      </viewpoints>
      <active id='9' />
      <simple-id uuid='{F32BE05E-9E81-4558-9C63-ACE2EA42610C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Ejercicio 1 - dashboard' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOy9d7Ql2VnY+9sVTz733Bz63s5hZnp6giYwo5nRKFpCSANCIAtJyBiMbb33
      bOyFDSwbjFlO63nZFi+YRVgYMGALHkaW0ZNBkqXRaHLQ5O7p6Xg73JzviRX2+6Nq16mqU+d2
      koTe8nyzeuqeCjt/+dvfFvKPkLwFb8H/pKD9ZTfgLXgL/jLBUH/I2FW8dX3r+j/JVf/lH+GX
      CW/82djd/KaR4+u5Ib5kD/CN3BBftAd4LD/Mn1lVnsiP8AWrypP5Uf7UqvB0fpT/YpV5Nj/K
      /2OWea4wxh+bZV4ojPE5s8SLxXH+0CzxcnGCPzALvFqc4D+aBV4rTvB7ZoHjxUl+x8hzojjF
      fzDyvFma4rf0PKdLu/gN3eZMaRe/rtucK03za7rN+dI0/16zuFCe4f/SLC6Vd/OrmslcZTef
      1QwWKrv5t5rBYmUP/0bTWa7s5V9rOiuVvfzvQme9so9/KQSb1X38cwRb1X38MwT16n5+BWhU
      D/BPgVb1AP9EQmfgIP9Y+rgDB/lH0sevHeIXpI+sHeLnpYeoHeYfSg+9doSflQ5m7Qh/33ew
      a0f4Gd8hN3gTf9frUBi8mf/N61AcvJn/1etQGbyFz3gtqoO38DfdFrWhW/hpt8XQ0FF+ym0y
      PHwrP+k2GR0+xk+4DcaHj/Fpt87k8DE+5dbZNXwbn3DqTA/fxo852+weuZ2/2tlmz8gd/NXO
      NvtH7uCjnU0OjryNH+5scGjkTn64s83hkTt4pL3BTaNv48PtDW4Zu4sfaK9xbOwevr+9ym1j
      d/P+9hp3jN3N+9qr3Dl2D+9trXLX2L28u7XC3eP38q7mMveN38c7mkvcN/59PNhc4u3j9/FA
      c4kHx+/j/sYSD03cz32NBR6euJ97Gwu8a/J+7mos8J7Jt/O2xjzvm3yAOxoLfGDqQW6rz/GB
      yQc5Vr/M908+yK31y3xo6iFu3r7MI1MPcWT7Ej849Q4Ob1/iI1MPc3D7Aj889TAHti7wI7se
      Zt/WBT62653s3prl49PvYmZrlk9Mv4tdW7N8cvrdTG2d48en383E1jn+2vS7Gds8x1+ffg8j
      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
    </thumbnail>
    <thumbnail height='192' name='Ejercicio 2 - dashboard' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Ejercicio 3 -dashboard' width='192'>
      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
      /x9SgnUBzu1R7wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Ejercicio1-b' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Ejercicio1-b-popup' width='192'>
      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
      M6goeDoJ8P8Dtq3CIPdTv9oAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Ejercicio1-c' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Ejercicio1-d' width='192'>
      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
      bHJ2GJ7sDuhr7+gtemLNSm6CI0E4J65wbphNQE75kSCccT3BoDF6dIBngrndbnbt2kV9fT2z
      Zs3i4YcfxvLlXGNd13nrrbfIzc1l7ty53fZTSnH8+HFOnjxJbm4uS5cuxWKxUFVVxa5du/D5
      fCxZsoRZs2bhdrs5cOAApaWljBw5kieffPKm4Q8dHR1s3769x3L0RGqASOB0hrGxgvaen6je
      Xz6fj1WrVqGUYvny5bz99tvs2bOn6/X333+ft99+myNHjty079GjR3nttdd4+OGH2bp1Kzt3
      7qSyspLnnnuOCRMmsGjRIp5//nmuXr3KyZMnaWho4JFHHiE2Npaf/OQn3YZA6LrOz372Mzo6
      Oli2bBlFRUUEg7ev8aQGiATh9OwqZQydGMDhEA6Hg40bNxIdHQ3AE088wdUvJ+g3NDSwefNm
      Vq9ezaVLl/5XURSbNm1i/fr1TJ8+nfXr1/Pss8/y2GOP8c477+BwOFBKMWfOHKqqqli6dClL
      ly4FIC0tjXfffZdQKITNZiMUCnH06FFGjBjB97//fTRNY/Xq1b2WXQIQCUaNCm/71lYYO3Bv
      b7FYiI6ORinFiRMn2LBhA2+++Sa6rvPKK6+wdu1aGhpunrCjlKK9vZ2xY43CJCcn0/7lvAaH
      w4Gu67zzzjtUVFQwZ84cAHbs2MHx48cpKirid7/7Hc4va7/6+npeffVVRo0axfr163G5XKxZ
      s6bXsksAIoErzA7Mln4sm96LUCjEa6+9xhdffMFf//pXUlJSOHDgAImJiTzwwAMcOHCgT8fR
      NA1N0/B4PKxevZqMjAz+8pe/EBUVBRhDKcaOHcvevXvZsmULs2bNwmazERsby6RJk8jIyGDe
      vHld2/dGAhAJwq0B6mqNZVQGaEEspRTr168nJiaGjRs3YrFYUEpRXFxMRUUFv/jFL6ioqKC5
      uZnk5GRWrlwJGF/2uLg4ysrKyM3Npba2tmuYw6pVq3jmmWf41re+1TVDTClFWloaaWlpzJ07
      lyeffJKGhgbS0tIIhUIkJSVx4sQJsrOze5x11hMJQCRwRhnTHPvaF9DWZvyEG5xb8Hg87N+/
      n9dff52LFy8CkJCQ0O0afP/+/Zw7d46VK1dSWVnJiRMneOqpp1i5ciW//vWvWbt2La+//jo/
      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
    </thumbnail>
    <thumbnail height='192' name='Ejercicio2-a' width='192'>
      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
      sYdBXQ5bNnKyCAI7dLqfZFpnJpriqwe2Y7fd2z4svnG3mOd2t5NMZ3A77SuWP78HZLi87Ni5
      BU1VUVQN09Sx27OzqGor/Pz08CXa6grbCVtMMSfcrGX7C3aLYd8wLU5036C5JkBjVWDZGfR+
      GQvHee3Zrbxzqp9YMkOozF1Q+4oCTrt225NDXgKw2e3YFjUzdvvNn/cOTRGOppidneWNN96g
      vb2dysrK3CRqVVWZmJggHA7j8/kIhULcuHGDeDzO7t278Xq9zMzM4PP5sCyLurq6e9xlSSE5
      +PEVNjSU88H5IT7/2AaCvtsPN94LT2xv4ieHL9JYFaDcX1jbACd7RugemKQm5Of5PW288847
      NDQ0sH37dvr7+wsXDdpaFyR4ZZxMJkNPTw+dnZ2oqkpZWRltbW188Ytf5C/+4i+ora2lpaWF
      N998k1AoRH19PUePHqWvr4+NGzdy7do1HA4Hf/Inf1Kooknug4xuEvS5cDlsGGbhH5XUWhvE
      47QRKvMUpQXrHZrm65/bxhu/vkIileH999+ntraWw4cPo+t64QQQnkvSWOXH7Xaza9cu3G43
      kUiE+vp6qqqq8Pv97N+/n2AwSGVlJZFIhNbWVoLBIAMDAzz66KNEo1F27dpV1PH4T4uBgQG6
      urrYv38/fr9/2femadLZ2YnT6WT9+vV0dnby5JNP5r43DIPu7m62b9++5HdCCCYmJqipqQEg
      lszw1ok+yv0unt3VVvCO6hce38ihzn42NVVQUeDLE4BDp6+RyuiEoym+dmAbdlthBwoaq8p4
      /Vg3TocdtzMbbhGLxUgkEng8nsLdCCtmxODp3htcuT7NU7taCbhU5ubmVrxEGhgY4Pz582zb
      to3JyUkeffTRu95GoW9UvfPOO5w5cwZFUdi7dy8XL16kqqqK06dPU19fj2VZ1NbWUlZWhs/n
      4+jRozQ1NaHrOrOzs9TX1zM5OcnAwEBuymZ1dTXhcJhMJoOqqgSDQWo7nmH/jiZ6hqapDHrZ
      VISh0MmZGGU+F0574U9Mf//OeV57ditvn+pnX0dTwfsAQoj5TrBjiW8ujFo+8HeCo4k0757q
      56VH2vm/7/fy/M4a/vZv/5aWlhbS6TRjY2OoqsrmzZuJRqOUl5djGAa9vb34fD6uXr3KunXr
      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
    </thumbnail>
    <thumbnail height='192' name='Ejercicio2-c' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Ejercicio2-d' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAOsUlEQVR4nO3d229UV3vH8e/ec/aMZ8aDx/EB29j4BUwaEpqEJG1SoVfVG/QmiojS9qZK
      bvL/5DIXkXpF1IsoVVWVKk1eJJD7gks42RBMwCd8xMcZz3nPYe/VC97wljKQsjmY7fV87sae
      sdYez2/Ws9baa29DKaUQQlPmdjdAiO0kARBakwAIrUkAhNYkAEJrTz0AMqkkvOSpB8BxnKf9
      J4V4ZqQEElrzu3nRyuJtAtF2MqvzJNvTGLaBEQyyqy3+tNsnxDNluFkJrldzzM3nCYcCFLZW
      mPj5Dsf//hg4Do7jYBjGs2irEE+diwAo7izOspFzoJ4nkdqFXVOEEwm60m3Yto3P53s2rRXi
      KXPVAzyKBEB4iQyChdYkAEJrEgChNQmA0JoEQGhNAiC0JgEQWpMACK1JAITWJABCaxIAoTUJ
      gNCaBEBoTQIgtCYBEFqTAAituQ6AUgqrUsH50zZI27afZruEeC5cbYoHsBtlro7fINYaIrNe
      Yvi1vyCViKKUkmsDCc9wHQCfP0IyHqJcrWFZVUyfee/DL9cGEl7hOgBg0JpsY6CjE+egwnFs
      TPNuCGRPsPAK2RTvUsN2mFvJEA0HeSnVKpeC8agn6AH0VarU+KeT5/lNb5p8yQLgH377qoTA
      gyQALnz33zf45OghetIJAL49c5Xljfy9x8I7ZB3AhZJVIx4N33vcFouQL1vb2CLhlgTAhb9+
      ZYB/HblG2aqxli3y08wKQz3t290s4YIMgl2aXFjnv67OEgkF+OCd4ft6BOEdEoAmisUitVqN
      ZDKJaf56J7m2toZSilQqRSAQuO93tm2Tz+dpa2t7Vs0VT0AGwU2srq7y/fffMzw8DMDMzAwA
      Q0NDZLNZotEotm1jWRZHjhzh9OnT1Go1LMvijTfeYHNzk42NDQYGBpieniaZTPLRRx9t5yGJ
      h5AxQBPd3d309/dz/fp1zpw5QyQSIRaLcfLkSS5evEi5XKZer3Pp0iVqtRqJRIJoNEpfXx8j
      IyOcO3cOwzC4fPky4XDY8z3iTiYlUBOO41AqlZifnyeRSBCLxTAMg83NTcrlMnv27KFYLLK5
      ucnBgweZmJggHo+TTCZZW1vDcRzS6TSmaTI1NcXevXtJJGSK9EUkARBakxJIaE0CILQmARBa
      kwAIrUkAhNYkAEJrrleClWPz88QE8VQKwzEJRqO0y42yhce4D4CyyWxs0ABu3Vjk+N8dw7Zt
      HMeRTfHCM1wvhDl2jevXbhBPJvCZAfwtLXS2y42yhbfISrDQmgyChdYkAEJrEgChNQmA0JoE
      QGhNAiC0JgEQWpMACK1JAITWJABCaxIAoTUJgNCaBEBoTQIgtCYBEFqTAAitSQCE1p5gU3yD
      yZs/U7XBqUH3nj7SKdkUL7zFdQAM04/fF6C7r4PTf7jAb14+IJvihec8wZ5gRS6XpzUWoVSq
      YyubZCIue4KFp8imeKE1GQQLrUkAhNYkAEJrEgChNQmA0JoEQGhNAiC0JgEQWpMACK1JAITW
      JABCaxIAoTUJgNCaBEBoTQIgtCYBEFp7gvsEKxbmbxNPtoFjgGmSTLQ+zbYJ8cy5DoBj15ib
      XaBvQHHl4i1+f/x3sidYeI7rAJimj0QiRrVa48D+ATYyObrTbQCyJVJ4xhPtCVZKgWFg/K+f
      yZ5g4SWuewAAwzB+/UlCvMBkFkhoTQIgtCYBEFqTAAitSQCE1iQAQmsSAKG1J1oH0NncWp6x
      2Q1CfpN3X+4hFg5sd5OEC9IDuDC/XuD6fIZjf9nP2we6+PcfZ2jYznY3S7ggAXDh6u0Njr7S
      QyjgIxkNMdSVZGGjuN3NEi5IAFyIBP0Urfq9x/lyjVhYqkkvkv+aC3813MW/nZ9h964YpWod
      n2HQHo9sd7OEC3KHGJdsR7GaLREO+mmLheTEQI+SHuAhvvzySz777DNOnTrFgQMHUEoRDoex
      LIt4PE6tVsPv9/P9D39kcHCQaDRKf38/169fx7Is+vr6SCQSLC0tsX//fkKh0HYfkmhCAtBE
      Npvl0qVLZDIZdu/ezQ8//MDw8DBbW1uMjo6STqfp7+/n8OHDTE5Oks/nmZycZHBwkJ6eHur1
      OouLi8zNzZFKpahWq7z55pvbfViiCSmBmpidnaWlpYXR0VEymQyHDh1icHCQsbEx5ubmGBoa
      IpVKkU6nOXv2LIFAgNXVVQ4fPszg4CCjo6MUCgWSySRdXV0kk0l6e3u3+7BEE64DoJTDxMR1
      Ojs7yWdKxHalSKfkNqnCW9yXQAoCpkEms8G1sdt89Mkx2RQvPMd9D+DYTE9N0hJPEDADKNNH
      R3ub9ADCU2QMILQms0BCO9999x0dHR3cvHlTAuBWpdbg+sIWsbCffd0JTFkI84xqtcrExAS3
      bt2SEsiNXLnGD+NLHBlKU6jUmVkr8OHrvRICj1hfX6elpYX5+XkJgBt/uLrEW0Np4i1BAM7d
      XGVPRyvdbS3b3DLxuORsUBeUUpjmn7/tfaYhU78eJQFw4Y29ab4fW2J1q8LUSp7lbIWupHz7
      e5GUQC4VKnWuzmWIhv280teGz5TvEi+S/9pD1Ot1RkZGKJfL9/18aWmJjY0N/DR4Z1+a4uIN
      bs/O4jgPbonMZrNsbW09ryYLF2Qa9CHm5+f56aefiEajjI+PY9s2PT09WJbF5uYmlmVx6NAh
      Ojs7uXz5MmfOnGFwcJDl5WUymQx79+5lfHyc48ePk0wmt/twxENIAB4iEokQDoc5ceIEjUaD
      t99+m3K5zMLCAqlUimg0SiKRYHx8nGAwSCqV4tSpU1iWxdGjRzl37hwdHR3bfRji/1hdXeWr
      r77ivffeo9FoyBjgYZRSFItFgsEg9XqdlpYW7ty5w/z8PG+99RalUolYLEahUCAWiwFQLBaJ
      RCL3jr9QKBCPx2W32Avm22+/pVqtEolEmgegYlUJBYP3TfX9f+2UAIida21tjXq9zsLCQvMA
      nLswxvTtBf7xkw8wH3N2QwIgvOSBT/f5S1f553/5D4b29FGt1Zu9Rogd44Ee4Nb0HJnsFm+/
      8aqrPyg9gPASGQQLrTUt8GdnZzl58iSNRuORL66Wi5QrFpVK7YEFIyG8oOk6QLlcJhqNPnL6
      TinF5K0JwpFd3Lo5w9/87qjsCRae0zQAKysrXLlyhXffffeh5YzTsHAwyZWKtLfvolAoEm2/
      u+L5uDNHQmyXpgEYGhr61eV7XyDCK6++ft/PfukxZOFHeMUDAVBKcenSJVpaWvD7H32mhHzQ
      hdc9UKsYhkE0GqW1tVVqebHjNS3W0+k0y8vLz7stQjx3DwRAKUUwGGx6frsQO80DAahWq2Qy
      GZLJpJRAYsdrWgIppejp6ZHpTLHjyakQQmvyFS+0JgEQWpMACK1JAITWJABCaxIAoTUJgNCa
      BEBoTQIgtPZEAZBzhYTXub42qHIcpidvgj+AXVWkOl8inYo/zbYJ8cy5vziuYRDwG+StClM3
      Fvlg/17ZFC88x/XJcI5TZ3pyhngySTAQxkbRnkrKyXDCU+RsUKGdpaUl5ufnOXLkiMwCCf2M
      jY0RCoX4+uuv5QYZQj9KKcbHx8nlclICueUoRaZUJ+Q3iYV8cokYD7JtW3oAN2oNh5GpTdKx
      IFbdwWfC631JCYHH+Hw+CYAb15bzvN6XoO1Pd4q/OLdFrtIg2RLY5paJxyWDYBesukMk8Ocy
      LxryUanb29gi4ZYEwIWhdAtXFnPUbYditcHiVoV0a2i7myVckEGwS3dyFpPrJQI+g9d6EkSC
      O/+YdyIJwCMope7dDvUX2WyWtrY2ACqVCnD3nsJKKRqNBqZp7pjj14EMgh9hbW2NL774gvff
      f59CoUAqleLMmTN8/PHHmKbJyMgIlmXx2muv4fP5WFxcZGVlheHhYXw+H5Zl8eGHH8rs0AtM
      xgCPcP78eYLBID/++COO4zA9Pc2ePXv45ptvCAQCWJaFZVmcOnWKGzduUK/X2bdvH6dPn+bC
      hQscPHhQPvwvOCmBHiGTyRCLxVhZWSEej7O5uYlt24yOjvLpp5+Sy+VwHIdMJoPP52PXrl3M
      zs4SDocJBAL09fURCMjU6ItMAiC0JiWQ0JoEQGhNZoFcUEoxl62wsGXhMwxe7oyRiEit70Wu
      ewClFItzM2zl8hSLZQrF0tNs1wttOVelWLV5d6CNN/sSjC3nqdtyRx0veqIeIBjws7a2zM3r
      8/zt73+rzZ7g+WyZV7tbsW0bA+iKBVnNW3S2Bre7aeIxPcFVIWwmJiY5eOgAvbu7yOYKdKfv
      rpDu9FmgeDjAWqlOzrIJ+022LJvuZORXbysrXjwyDepCplzjP3/eoKs1RKluo5Tig4MdmLLo
      5TkSABcuLuR4ufPu+UF+02Bms0yqJUg6JiWQ10if7YLPNLAdRSx09+1rOAqfKd/+XiQBcGF/
      OsrFxRyDu1qo1G1KNZu2iLyVXiQlkEt122EpVyXsN3mpNSgnvXmUrAQ3ce3aNS5cuMDs7Cyl
      UolsNkuj0WBqaurecwI+k5S/zrXzIxQKhftev7q6CkCxWOT27dvPs+niMUkP0MSJEycYHBzk
      7NmzdHZ2YhgGlmVhGAbr6+skEgkGBgbo7e2lUqlw+fJl1tfX2b17N1tbW/T397OyskI4HKZc
      LhMIBPj88889/77sRNIDNNHb28vY2BjvvPMOlUqFcrnMsWPHcByHxcVF+vr6mJmZIRgMcuXK
      Ffx+PxsbG+RyOQ4cOECxWGRubg7btkkkEkxNTdFoNLb7sEQT0gM08cvWRtN88PuhWq0yNTVF
      PB6ns7sH0zDwmXd7iHA4fO95tVoNv9+PaZpUq1VCIdk0/yKSALjgKMXVOwUajsJW0BkL0pcM
      y0DYg2TuzoWZzQpdrSFeag2hlOLKcoGOWPC+awUJb5AxgAv5aoO2lgB128FRkIoEyFtS43uR
      9AAutEcD/PH2Fsmwn7qtyFXrHB1MbXezhAsSABdqtsI0YDlfxXYUibAf21EgFZDnSABcyJbr
      KKV4KRbEQbFWqJGvNmQM4EESABcU0HBgXzpKteEwtVHGJzNAnvQ/I+FpsBaOercAAAAASUVO
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Ejercicio3-aCompradores' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAACOElEQVR4nO3WMQoCQRBFwVEWvP8lDcRkQdBEx0iPsBO8qqjDnzzo05xzDog6rx4AK22/
      47Y/xv58rdwCh/sHcP9s4/q+rNwCh/MCkSYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBI
      EwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQB
      kCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBp
      AiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA
      0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBN
      AKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRA
      mgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJ
      gDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBI
      EwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQB
      kCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBI+wIzCQ8HTVLf5gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Ejercicio3-aCompras' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACJklEQVR4nO3WIQ7AMAwEQbfK/18bnqK+IWBnkOGRlfycc85A1JqZ0QBV6z/23jd3wBWP
      F4iy9/YAuEkApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmA
      NAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgT
      AGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQ
      JgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkC
      IE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDS
      BECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0A
      pAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECa
      AEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmA
      NAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgT
      AGkCIE0ApAmANAGQ9gG91Q9UimsJkwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Ejercicio3-aRegistros' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAACOElEQVR4nO3WMQoCQRBFwVEWvP8lDcRkQdBEx0iPsBO8qqjDnzzo05xzDog6rx4AK22/
      47Y/xv58rdwCh/sHcP9s4/q+rNwCh/MCkSYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBI
      EwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQB
      kCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBp
      AiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA
      0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBN
      AKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRA
      mgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJ
      gDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBI
      EwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQB
      kCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBI+wIzCQ8HTVLf5gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Ejercicio3-aVentas' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACJklEQVR4nO3WIQ7AMAwEQbfK/18bnqK+IWBnkOGRlfycc85A1JqZ0QBV6z/23jd3wBWP
      F4iy9/YAuEkApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmA
      NAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgT
      AGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQ
      JgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkC
      IE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDS
      BECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0A
      pAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECa
      AEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmA
      NAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgT
      AGkCIE0ApAmANAGQ9gG91Q9UimsJkwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Ejercicio3-b' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Ejercicio3-b-compradores' width='95'>
      iVBORw0KGgoAAAANSUhEUgAAAF8AAADACAYAAABifL9jAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAE6klEQVR4nO3dzSu8XQDG8WtQopS3WU1eFrMyzc5IZqEoC5EsTIqiJoosLMhGk1JsLJSU
      X0lWskFJkqW3wtio8Q+MZhpJ8jIo4zyLp0TG4/EyLvNzfZbnPve5z/0dncZqLMYYA6FIYW/g
      N1N8IsUnUnwixSdSfCLFJ0p7a4Lf7/+OffxKFv2TxaNjh0jxiRSfSPGJFJ9I8YkUn0jxiRSf
      SPGJFJ9I8YkUn0jxiRSfSPGJFJ9I8YkUn0jxiRSfSPGJFJ9I8YkUn0jxiRSfSPGJFJ9I8YkU
      n0jxiRSfSPGJFJ9I8YkUn0jxiRSfSPGJFJ9I8YkUn0jxiRSfSPGJFJ9I8YkUn0jxiRSfSPGJ
      FJ9I8YkUn0jxiRSfSPGJFJ9I8YkUn0jxiRSfSPGJFJ9I8YkUn0jxiRSfSPGJFJ9I8YkUn0jx
      iZImfiAQQG1tLVwuF0pLS+FyuVBVVYWNjY248z0eD8rKynBwcBD3+sXFBTwez7P1PB4Prq6u
      EvkazyRF/IGBAbS3t8Nms2F2dhZ+vx9LS0vIz89HX18fdnZ2HuceHx/D4/Hg+vr61fXOzs5Q
      V1eHSCSCP3/+YG9vDyMjIwgGg6ivr/++D8D8cLFYzHR3d5vd3d0X16LRqKmsrDQdHR2PY42N
      jaa1tdWEQiFTVlZm/H7/i/tGR0dNeXm5OT09fTZ+eHhoXC6X8fl8X/8icbz5k6xsKSkpmJyc
      jHstPT0dmZmZOD8/fxxbXFwEAITD4VfX3Nragt1uR15e3rNxp9OJoqIibG9vf8HO35YUx85r
      AoEATk9P4Xa7331vRkZG3HG3243Ly0uEQqHPbu9NSRt/eXkZXq8XBQUF6Onpede9VqsVgUAg
      7tnucDhgjMHJyclXbfVVSRf/7u4OnZ2dGB4eht1ux9zcHFJTU9+1Rn9/P+7v79HU1ISjoyMA
      /377WV1dxcTEBIwxiMViidj+Mz/+zH8qEAigq6sLt7e36O3tRUtLy4fWKSkpwczMDPr7+9HW
      1gZjDCwWC7KysuByuRCJRJCTk/PFu38paeKvr69jcHAQ2dnZWFhYgNVq/dR6DocDq6urL8bH
      x8eRmpqK7OzsT63/fyRF/HA4DJ/PB5vNhvn5eaSnpyfkOQ8PD9jc3ERxcTFyc3MT8oynkuLM
      Hxsbg8ViwfT0dMLCA8Da2hqCwSC8Xm/CnvHUj48fjUaxv78Pp9P54nv5R0UiEdTU1GBubg53
      d3e4ubnB1NQUhoaGUFFRgerq6i95zlssxhjzLU/6oIuLC9TW1uL29vbVOYWFhVhcXEQ4HEZD
      QwMeHh7+c14sFsPo6ChWVlZwf38PAEhLS0NzczN6e3sT8h7x/Pj4f7Mff+z8zRSfSPGJFJ9I
      8YkUn0jxiRSfSPGJFJ9I8YkUn0jxiRSfSPGJFJ9I8YkUn0jxiRSfSPGJFJ9I8YkUn0jxiRSf
      SPGJFJ9I8YkUn0jxiRSfSPGJFJ9I8YkUn0jxiRSfSPGJFJ9I8YkUn0jxiRSfSPGJFJ9I8YkU
      n0jxiRSfSPGJFJ9I8YkUn0jxiRSfSPGJFJ9I8YkUn0jxiRSfSPGJFJ9I8YkUn0jxiRSfSPGJ
      3vyFuGg0+h37+JX0l0+k+ESKT6T4RIpPpPhEik+k+ESKT6T4RIpPpPhEik+k+ESKT6T4RIpP
      pPhEik+k+ESKT6T4RIpPpPhE/wCjuGmnEbSh0QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Ejercicio3-b-compras' width='142'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Ejercicio3-b-registros' width='102'>
      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
    </thumbnail>
    <thumbnail height='192' name='Ejercicio3-b-ventas' width='104'>
      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
    </thumbnail>
    <thumbnail height='192' name='Ejercicio3-d' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAdZElEQVR4nO3dd3gUZeLA8e/M9uxuNr33ShJCgBAIRQRBUeHAhqKnIip3cpaz+zvbeXo2
      sJ+IgiCeNEHEDhaEowhKRxJKSAKppJCEZJPdbJvfH0HwkBaIejrv53l8fLK7Mzuz7Hd3Znfn
      HUlRFAVBUCn5114AQfg1iQAEVRMBCKomAhBUTQQgqJoIQFA1EYCgatpfewGE3xafu5XiLavZ
      UFiNSxPC0Mv/QLzfSSZoLOGTr9cRNeBqekf+773eigCETqnbtoSnn5zNzupDYMggZsSpAtjL
      Bwtmk5cwjt6Rv9RSnj4RgNApm5ctpC4onyeeuo28WCt+ll97ic6OCKCLeF129hVuYU95I16d
      P6k5uaREWtEA9oYiNm5tICUznpbyXRRXN6OxRtMrrzsRFkPHDHyt7N28id3VjSi6AJJzepMR
      ae24rmEPy7ZUk9VnAH4HC9my9wCR2YPJijThczVRuGkTpXV20PuTkp1LerR/1+/c2Q/w7aZt
      fFfcguJqpXjHtzhKbfQeNoRog5PavTvZXFSOW/IjKq072Ynh6DXSkcndrXV8/80O9tc7MIYm
      kNs7i0CDjOLzUbT+Cw4FZNM9WU/hN1toNceR06sb/hoPdaXb2b6nklaPhqjUXHLSw9FL4HZW
      8e2qvUTk9CaGClZtqSA0JYfslFAkl519hVvZU34Ql+RHYmYvuiWEoD/OgyIC6BI+Cpa+zkv/
      /oJdhwPIGHIpt9x8Hf0SbTRWrGPmk4vxz4yjcX8BxdUtaKzRDJ/0dx4f2wt8LXz/6Rxemvk+
      BVUdAaT3HcZf/+8BcsNlKF/LS9OWc92fdNQsfYVPvm9kzMO9yQppYdXcN5m26IsjAaT3HcaE
      SbczJK2LI2gs4t1ZL7OqoAVYzYwpq9EZu/F4n3zc+z9j5vS5fF1QdjiAXCbc+xBjsoOPTL5m
      ztOsKt/aEUBYKpdOuJPxl+Rhw8uaeS+wO+VmasJLeOvNzzH3HsfDGd2gbClPT57F5qKOAKKz
      hnL9n2/hD/lxuFp38s7Lc+g3sRVp6xJmraxm+MRHSUuxUfTxNF6a99XRAHqdx7U3TuDCvHgM
      0n+v1v/eXslvkK9hPTOmL0eTdRXPvzWfN/55PWxayicrt9DkPvxbw7Y22q3J3PDgy7w9/UlG
      pWtYu+Z7nCjYi9Yx+92PcPecwLQ585n+9yth7yrmf7qJtsOTe5trWbF4IYWmgTz+0lSuy7NR
      8e0nvPX+ckKG3cmMufOZ+czNmPeuZsG8T9jf1sW/cYzI5YGnX2fS4CAS865gyuxFzJvzLLm+
      Uj59bwEbyeXZN+fw1vN3kUERs+cup/lHi2BLHsy9U2bwzqwXGBlziGUfLWZLacvha73s27CM
      OV8UM+LuZ/nnvVcSr9/PkjfmUiL14L6XZzN/1mRyPBv58KOllDYenrGnltUfLGRFdRyPv/IK
      fxnVHW3Jcl5552uk9MuYPGs+c157mORDq5mz8GOKa9s59lERAXSB6nVfsteYwOUTrqd/Vgo5
      Ay7jjyOjKNq1h8Zmb8eNYnK45to/ckF+Nt165ZCTEIOu5iCHcFD0/VZKGlKZdMdl9EpLJeeC
      8dw4JIyKTRspd3ZM3ub0oEsawEP3T2JQ9xSCjI1s/XY7lYbzeejOS8hJSyX7nGu4b2Jf9u3e
      wJ59zV27kjo/wqPiCLVoMZgDiIpPJDEhkrbaQrbvMnDlxHH0z0ona8BIrh+dh1S4nsLWo5P3
      Hn4JfbunkZY9iIn33khIXQXFZdW4AWihrs3C2Nv/zo0X9yUuPBC5ZCNflNsZMuF2RuVlktr9
      HG646ULspUVUHGjsmGlTM62h+Tz4xF0M6ZFIqE3H7m9WcJBkbrhzIoO6p9Kt9zD+dPvVaAu2
      UVBZg++Y1RKbQF2g4WAtbvsh1n00gxIdoHio3t2MS+PE4/WgO+nULlqa7bR7Glk15022aDte
      kxpKW/G47bS7Om7lFxTJ0ItGkRBw+J/M1U5zaxuu6GiiNEfnZomMwejYQmubA7B1/cr+FwWn
      s5GWVjuFXyzmjc1mABzlZTg8Mm1tx59K4x9KiM6L2+M9/IpsIXvQcAZmR6M9vInS0tREe3s7
      pWsW8lpBx2X2hhIcLpl2V0c22OIYPuI8UkLNdEzmoKnRgSzHEBZ2+LVdkjHZIgiWWmly/vQd
      QATQBYKCw9AancRn5JEdePjCvv253BZBTICegwdONrUeq78Fg8FCcq/exBsP55LXlzHWUBI7
      nlNotBrMfn4c2YTVG7GZzei3VVDphejDEdirynGajJjNpi5fz5+SMBoDsVqNRKRl0Sc5tGP5
      8vIYcqWFpADA/tOpnFXFlCkmcs1+h5+AWoxGP3S6oxvo1oAADHodIQk55KXpD1+ax9AxNpIS
      A6Ed0OkxmYxHogETgUEmfL5yamp8ZITLoPhoO1TNQcVCoNHIMbsAYhOoK0TlDibaVcHalRtp
      1ZiwWPzwNu1lzfpt1Le4TzG1icSMLOLMJXz4+W48ej+sVj84VMW3q1ZT7jjBZJoQeg3oSZx7
      GY8+vZDvduxg41ezeGLadyRl9adbgn9Xr+ZxSASHdyMj0cFXn2+kGQNWqxm9u5ntXy9jZ8vR
      W1bv3sKOwkK2rV3C0/+cgxSXRkZS1AmfgLqkHpwTYWbjF59R5tRitljRehvZuOFbiitPtHmn
      JWPQ+YRJxcx45hWWbypg2/qlvPr8HHw9etE9Juwn9yfeAbqAFDGQP40fwhuLPuDBW2bh8slY
      Q2PJG3MDOp2M5+RTE5Denz+OLeGNuQu4a+JUPIoGv6AYho6+AesJ/4VkovqMZMKVtUxbMI3b
      PmwBg43M/iO4ZtxFxJmOfa37OUiYwhK5+PJx1M5+j8du/winR0ZvCSarz8X0P/zCrY9IY9/i
      B7nllSbaFT1R3fK5etyVdI/SgecELxCGZC67+SqKps7hXw98id3lw2ANJWngGPKH648/DaCN
      P5fbxxfwytxlPDppDu2yHyl9LuC6K0eRFGr4yTuAJA6J7BoeVwvluwooqW7CrciYAyNISksh
      IsAPZ1MJ23Y0kdQjkwibEXBSWbCD3Y1m+g/KwATgsVO843tKaprwKBpMtjDSM7oRHmBEbizm
      6+9rSO81gGjrf9+vz9XMnu1bKatvRdFbSczIISXS+rO9tVdsX8F+TwzZ2an4/7Bz43VQs6+I
      gpIq2r0SOr8AElK7kRRpQ7ZXs6m8jQB3LftrmnEpesLiu9E9LRK9BIrPR8mmlTTbMshMi8Tw
      o/tSfB7qSnewc18NDpcPnTmI2OQ0EiICkDw1bF5XSlhWDxJDzf+1jF5XK+V7dlBc2YhbNhKb
      lk1qbPBxvwcQAQiqdsI32ObmZrxe7y+5LILwizthAG63G7f7VDtwvz9vLt+C3am+9QYIDbEQ
      E/Vzf3T6v+WEAQQHB5/oqt+1tfubqGs+wQfYv3NpPiAq8JS3+z0RH4MKqiYCEFRNBCComghA
      UDURgKBqIgBB1UQAgqqJAARVEwEIqiYCEFRNBCComghAUDURgKBqv+8AfF7aHa3YnW7EcT/C
      8ZzRMcE+TxuVe/dQ1diG2ydhCYokISGGANPZHmLsoaGsiJIaDel5aVhPPcHJNZUy+7lHWGq6
      mgX/Nwqj7pc4Tlb4Len8M9Zdz5r35jH3/U8pKG/E6ZUJTsvnxjsf4Kq8sx3+10HhZzOZ8qGJ
      J5c+QfeznJsgnEonA3BQ+Pk8ps1ejL73OB66vSfBBh9lpXvQnejofkH4H9apAFzl21n08Vc4
      sm7kxX9cS7iuYxeiT14+yuHdCWf9Xj7691TmLt1MvdvAwMvu5JZrh5IQZKK1ZhOT730ey5DR
      hNWuZe6yzbjNKVx22z1MOiecpdMf5umF2/B4YeKA5UhAv1um8twl4Sx+7RFWWsdxz2A977ww
      mR1ho5l833i05cuYPWMBq3dU4MBISv5oJv75j/RLDBZjvgin1ImdYC81lfuoqPAx/IphROg1
      SJKEJEnIsgaNLIHvEN+8/TzTvzpA6oALGDWsN8VLX+b1hWtoaAcFH55DpXzx4RI2NwRy3ojh
      ZAQcZNHbSzng0xHfoz/56ZGYTTEMHjOGMWPG0D81BAkFr8eNs3oH77z6OsXWngzOy8BqkNi/
      6RvqrWkMuWgUF5/XB8/OT3lz0QoOOk4+Go8gQKfeAbw4HHacjlCiIgzHv8mBTSxcW0HuFX/j
      /qv7Eqhp5bN/3cOsbZsoqxtEig4whnPORTdx05hBRNk8fDvvBZ6aVcUBrZm+54/liuJCSutM
      XPfAA0f3AVoqAdi37issf5jII+OGkRRuRYNC9shbSTOFEuxvQnLVs/zfk3llw37srS7CxVuA
      cAqdeIpIyJKMLLtxu4//kWLT/iJqvAbyM5NRWptoQCE6Jxvtd5W02NsgENCZiYqNJzzIDw0O
      /Mxm9N5aTmcPwq/naP563YUkBxsBUBQFj6OWLxe8yfrCato8buyNB2gICBEfewqnpRMB6AgO
      jSI4pJq1q4oZkxaG8diTDcgaPM4Gls6aTIHt6NZVfN9sgi0nHyP5dETGJRJiNh75W2kvY/o/
      nsA55B4eeak/YX4etn4yjScWi80f4fR0aiPBFptObmYCsz+eyeK0IEblp+Cv81FTUcIhJZT0
      xFQS/CyYc0dy69UDibbqcdlr2FlSR7BJyykGyQT0+Jn1KEol+/fbyYw14fVJJ1xIpWknBVUG
      +kdGE2CUObi/kA0bdtJEamdWS1CxTgUgW2MYec01bC94hjef+RtLw2zoZAUHRs65+j7Sh/fm
      0nPCeWz+ZEpWh2PWafC522i0ZnL/nbfSI+BU96AnNikejW8tr907ifcsGrIu+z/uPvf4X4lJ
      tjii5Qo+eu1BNrzrh7vtEI2NzTijRADC6encTyEkLbbk83jyrbe5e3ROx6u6xkS3PucxpEck
      yBbOve1FXrhrFAkBBiQJghL7MnHCtfROCkKjsxCXmkq47Ydx2mXMQVGkd0/EKkuARMiAG3j2
      vvF0Czag0ZuxGHWg0RMSk0JyZACaHy2xZMzkzikPc25KIHpDMMPGP8STj9zEuSlRGHUyaI2E
      x6XSLSYQWXwJLByHGBz3GBc9NV+9I8Mlh5LbM/bXXoxf1O/7x3CCcAoiAEHVRACCqokABFUT
      AQiqJgIQVE0EIKiaCEBQNRGAoGoiAEHVRACCqokABFUTAQiqJgIQVE0EIKiaOB7gGCsrinB6
      1XlMsSSBrLIjh8TAIcfQamR0knhjVAvxLy2omghAUDURgKBqIgBB1UQAgqqJAARVEwEIqiYC
      EFRNBCComghAUDURgKBqIgBB1UQAgqqJAARVEwEIqta54wFqtjJ5ynMs3VT535f7R3HprU9w
      xwVJZ7EoLvauWsCU5zYwZuo/uDg26CzmJQinp3MB+Lw42+xoI7tzTrfQo5f7BZEWYTnrhfF5
      2mm1t+L2+c56XoJwOs7oiLDoQX/k0b/kH/e6dns13325jI27qrB7IDS1LyNGnEtCoB5J8dFa
      W8TKL75k2/4mMNpIyhnA8P498O36kOmL/kO1o5aPX3uR7RYjET3O49LzBxLid1brKAgndEYB
      eF1tNDc3H/lbkjXojSYMWpl9X77B5Onf0OZ041MUWLGOvTVt3DVxNCHuaha9/Ajzvq3H7VNA
      ktFvriYoJobkykK++74Ep9vDrvVrKJZlUrXJjBgysMtWVhCOdUYB7JxzP+fNOfq3ITSJPz32
      OuP7BRGYdj5//9cksuJDMUp2vnjjAV5a/x37Rg7B7FfE5s3tDJrwOLeP7Y/V18zeXeUYQkzE
      Z/yNN61RPP7PdYx9azJj4kO6ah0F4YTOKICw3qO4vN/Rswlq/ALoFWMCIDilO7Xf/YdFK6tp
      dXlpqvHhbXfhdrsxGKNIiPOxbuX7TD+4jejodHr370NMiD8yrq5ZI0HohDMLoOeF3HTT8fYB
      2lk351kWFYcwdFhf0q166oob+G7XIQAM/vGM/cutyAuX8PmSORzyWYleMZy/3nMTA5KOfzJs
      Qfg5de33AM1b+XTZbiIHXMrIoQPI7ZFBZJD5SGU+xYUhvA83PfwyHyz7mgUv3kZc3XpWfF+J
      1ychy1pkuR273YWiKPgUBTFqkfBzOqN3gIM7V7FwYdnRC/QWUnoOpHeIEb3sYNNnc5nbkoyv
      oYRVX/2HCl0OAC3165n64FJs/XoQFWiivb6YesVCksWAhJaA4DACg6r45K35aPKiCYjLpn+v
      LGzGLllXQfiJMwqget1CJq/70QX+MVx5Txq9R6Zx+TUXsPvVd5m2WU9cr2GcP2oAhz5vBcBk
      TiA9ycd7i2dS0eRAFxDDwJHjGdEzFo0sEZDYizEjhzL1nSU8t8pDjzF/JStTBCD8fDo3NKKn
      ncamJtrajxk6UNZitgUR4KfD626jsaEJl1dC7+eP1eTj0CE31gAbRp2Eq62FZnsbLo8PWaPH
      7G/DYtLTMSKfgsdpp7HJjsunYPDzJ8DfgvYX/MHGmupi2n3qHBpRjcTYoMcQAaiL+DGcoGoi
      AEHVRACCqokABFUTAQiqJgIQVE0EIKiaCEBQNRGAoGoiAEHVRACCqokABFUTAQiqJgIQVE2c
      Kf4Yq0qaaHap8wD9ID8dkVbDr70YvygRwDF217XR4Gj/tRfjVxEXYMSkU9dTQmwCCaomAhBU
      TQQgqJoIQFA1EYCgaiIAQdVEAIKqiQAEVRMBCKomAhBUTQQgqJoIQFA1EYCgar+RAHw47U3U
      1B/C6xODWQtdp9O/ffW1N1Gyczf7ahtwK1oM5kBSMzKICjKjkbpgiZrLWb21mJC0fDIifjgz
      RitbPn6Vp762MuO5PxMhzpghdJFOBaC0HWDVh/P498Iv2FlZj1vRYPQPI3/41Uy6/RqSz/5k
      8VC9kVdenEn+bbN+FIAg/Dw6EYCXqsJveG/hcvyH38y0Id3RK+3UV2xn/ZoDNB4+iEpRFBSf
      F4/Xi6KArNGi0cjIktRx4juPG5+kQavRIEmg+Dy4PT40Wh2S4sXj9qAoCl6Pi/b2dpA06HU/
      WgzFh9vlwqcoSLIGnVaL1BXvPIIqdSIAH47WZlqUMC7sm0tmRiJ6Geiew+ALj97KUbeLJW9P
      593P1lHVIpF+zuVMuOkaBmVEommtZd7Td/N94gQevGE4QXooWzWLB5/5jEumvk3O/oU8/s83
      2NcM+x66hIUAsZfxwXu3dsy8tZZ1H0/nk/c+pqDKjn/aCJ566SH6hKrrMD6h63QiAC0hUfHE
      2qqZ/+prNA7vR0ZmDr0yE7AZdR2vwr5GVs9+mdkrGuk97CpG2Hzs+mY5r77qxf/BSfQMONn8
      NQTF92LMRQM5sHQr0X3+QL8EP7BlYf3hJb50HYvX9iFn2CX0OFTClytXsGDlePqMTT6Lh0BQ
      s04EIGFLyOPGP0/ktVenM3vqOoIiY0lIzeXmu+6gT6QeqjayaF0FPa94gHvH5RNiUijqGcGU
      599jbcFIsgaEnmT+GkKS+zB2dDkLvymmx4jr+cuwsMPXtXT8L34gd9z1F3JSwtE6tuPcVcLe
      FvuZrrsgdO5jUElnITF/DE9MX8DcqY8yKjuExoJlPPngFDYc9NJYVsxBRaZ3vwGEmHVIso64
      1FwyY13sLWvAfbbnnrOGEBcRiEEjo7FYsWl1p55GEE6iE+8ACoqigKTFZAkkNfcCUnOHcuWa
      GYx/agWbdtSSaTYiAa2tDqDjIyGPtx2nw4fRIHZWhf89nXgHcLF/2wrenf85e6sP4QV87nZa
      W51IkoxOp8WcnEmq1sPazxazs8aBz9PK1q+X8G1NMFlJoeg1AE7q6w7iaHdjryvm+x0lNDl+
      dDd+FmyKQlVpMYdcPrxuNz5xJlfhZ9Kpj0GbKgv49K3PmLfQD71O0/GRZGszgemXMzA7GCw2
      xl/Tn3tffYf7t32EUavQ1txG9KBrGJwdj17XQkCgP6VLZ3LrpkXoZGi3N9LgtB69m/AkeoUa
      WDj/cW5YakEbNZx/vTSu69dcEADNY4899tjp3VRHWHw3slJD8LrcKBoDASHRZA+7jr/ddQVx
      fjJIGoJT+9In2UJbcyuSMYj8MTcxafwoEmw6ZJ2RyNgEjK4m2jU2el94LdeOzMGATOaAc4iz
      akETRHa/biiNtXg1FkITujO4fwq+xnoalVAG9knDpNcA7dSWHkCXkku/5MAue0A+2FWGw+Pt
      svn9ltiMWkIs+l97MX5R4kzxxxj/wWpVjwzXLbwrvs7/7fiN/BhOEH4eIgBB1UQAgqqJAARV
      EwEIqiYCEFRNBCComghAUDURgKBqIgBB1UQAgqqJAARVEwEIqiYCEFRNXWdFPg2y1PGfGklS
      x7hOaiICOMaQlCBaz/ro/d+mdo+PNre6AhCbQIKqiQAEVRMBCKomAhBUTQQgqJoIQFA1EYCg
      aiIAQdVEAIKqiQAEVRMBCKomAhBUTQQgqJoIQFA1EYCgaiIAQdVOPwBfKxvff4ZLRt7Lmoqm
      Ixe7tr/F0PxB3PDQTIpbDh9M0V7BoicnMeKWNznrk5geWMaVF1zOc0v3nu2cBOEnTj8A2UBo
      ZDwhyn721P1wVjsvpYUF+MLC8DaVU9fgBMDd1EBZbS1R2Rl0xflG1HWMkvBL6tSZ4kPDogkJ
      a2NXURP0igTqKdh2gKT+o4mu3kBV3UG88dG0NB6kptZD+qgfTnTtw1G5lXkLP6GoxklAYj5X
      jT2fxCBTx7WOA3w+fw5r9tTi1ZiITc9n5GUjMBUvY867C6ix17Fm/gvUrrDgZ+vLzQ9dQUyX
      PxSCGnXqmGBTeBSpESEs2VyA68oMtPVlbK+EQRcPQFq2hdID9bh84TTU7eOAO55h8TZQfLTs
      Xcnkya/xXaUDvUbCvXkD63ZU8cYLtxBBJe9PfoIZ3+xHr9chSbBr9y60yXlcrNRRur8Kl8dF
      Y1Upu5p0WEPicP5cj4agOp0KQLKEkRofivxVASXuKwjbV0ypJ5bR3QOoLzCyfU8lziEp1JUV
      YQ9NIMHfAu5G1n/9OVvqo7n7+YcYluLH7s9n8I+pH/LRtuv4U2wFW0uriBlxD5MnDSVA66Gu
      bAe1WgOx8eN5NSWcsdfPoN9dz3LvRSk/1+MgqFQnPwWykpwag85VyO4KBxVl5TgjE0mxWoiM
      jaa5tpxWeysVe0sJTojFajHiaWmitHQfwedcyICkELQ6C5lDhpAdYGDX3nKwRZIZFUDl+kW8
      NGUKr7y1mGJXFFnx1lMvjiCcpU4OiyIRntKNYP1yCgt2oymrIjIpHz/ZSERUHMa6b9ndfICS
      UifxI2Kx+sl42zw4HXbKls/ktu2L0MgATmrrWkn2eMAYzR9ufxBp3kyWfP0lB+wKy7/6kqvu
      e45r84JR6RA9wi+k0+MCaeO60StAz8ZVq3ErPpIuDkeSZIIjownX1rNx+yaKGgMZGh+DWQbZ
      bCEyKoZov3wevecqEoP9kBQPbc0HafJYwGmnwePPxZOe4qq7Nbjqt/Pi/X9n7X+2MjpvGDad
      DoPXg6PFjtOrYJAUFFkWX2AIXaLzA2PJkWRkmlm0dCW1CancERmALIEUFEF6uI8l73+J1xZL
      TGRIx5PUFEj3nByWvPQez//rID1jA5F9TuqrSnBn3sgj+Q3MmPoBmpBEogNNSK56Sps9hEaE
      ogcITCDV1MTGT//NtIZMQiwpjLh2CGEnX0pBOC1nMDKcgW7d07DP/wC9cQBRNv+Oi/VhpCYF
      Ub+8kPA+g4kIM3ZcLptIGXgZd7S5mDr7A9781I5ksJGQO4xbekVDcBDDe0bx+tzFLDvQAoYQ
      el14FdddlI4JQI7l0kljKZv+HgtmriEkaRz9RABCF5GUMxgMUvE4aWlzIWv1mIwGNLIEKHhd
      Ttra3cgaA0aTAc2RDXgFn9eN09GOx6eAJKHRGjAZdciAz+vG4WzH61NAktHpjRgN2iPb/z6v
      G6fTicerIGv0mMxGNF30ABzr7YICVQ+N2O5R19eOZzQ2qKQ14u9vPPZSNHoTVr3peFMga/T4
      WfTHnZ+s1WM+wXUAskaHn1l3JosqCCcl9iUFVRMBCKomAhBUTQQgqJoIQFA1EYCgaiIAQdVE
      AIKqiQAEVRMBCKomAhBUTQQgqNr/A3UvNPgxGZ0yAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Ejercicio4' width='192'>
      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
      E5Io+fNb5wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Ejercicio4 - dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Ejercicio4-b' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Ejercicio4-c' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Ejercicio4-d' width='192'>
      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
    </thumbnail>
  </thumbnails>
  <external>
    <shapes>
      <shape name='Figuras/augur.png'>
        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
        SUVORK5CYII=
      </shape>
      <shape name='Figuras/bitcoin.png'>
        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
        /wUXLfZnkEKsPAAAAABJRU5ErkJggg==
      </shape>
      <shape name='Figuras/bitcoinCash.jpeg'>
        iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAYAAAA+s9J6AAAACXBIWXMAAA7EAAAOxAGVKw4b
        AAAgAElEQVR4nOy915Nl15Xm91vbHHNNusrMsigHQziCINkkaHrIaU6wFTE9CilkukMvig6F
        RpoXKUL/gp4VetFra6SQNJrpmY7RTPd0N5vNpmsCIEDC2/Lepc+87pht9HBuVhXAQmURVUBl
        AflFnLp5K2/es88+59tr7WUlxhj5HCOWNbV3uBAQbbBJgmghAh6wDpQef1gCEY9nRAg1SCDp
        zYEGbHPUUjFkwIghDs/L9Yusjda5vHaVSxtXWRouU8YBKI/S4Opw364dwCcanIfaY6PQsSnT
        eYepTpdWlvNc+p/QTlvMtmaZlVnatEiwUCtwEGoQDWIBAyg3niOPx6HpAAoBFCDjiY3e411E
        5er6WETkA6+fF8jnnYTDuk9iE5pHBEARifjQTEtQhgiEosYSybSGGKGqicWI4awmAAVDVupV
        Lq9e5tTVk5y9fJaVtWXcXElBzShWFFLhdI1Y0BaMFmp3n0mopSGIj+gIJgpWFGZ8qIUZctNi
        ujXFns5u9k3sY//UXuY783TSFlNhD0optCiI3Dh8IDpPkdV47yGA1prEJKibzh/DDgk/9yQs
        KAFFwBNCQEVIVYIShaBYX+/RarWwVhOI9Ed96rrEJJYsy/i5/zsWlxc5e+kMZ66dZXW4Qkwi
        2URG2soohn2ceCoCpTgCgRg9Ehva69Tc1+uP0jz0EiHGSAyBUDu890QfyFsTBBdQlWCdpaM6
        TOeTTOdTtJKc7x/9J1id0VE5XT1BW3VJY9KoEQGGcZU0z1Bj6hW+wgVPYhM0GhXs9bHskPBz
        imr8qgAVwdWOWDmIEY1gbALicLpgaDzL9DlRnuP1M+9y+spZFqs3UUaBFbARbwJ1dFSxxMfA
        lG7hY6CKnno80xqNQaFFcPj7dOUNbr79cfzsh5s4kMwkROdxhYfCI7WgnMKg0VGT91rMTszz
        6J5HeGz+cQ5PPcKc3kWbLjoYlCrxLlBVFcZYbHJD6xiVBanNrp9rh4SfUww3IEnAJM17XwVC
        cNhEgxYqGbEe1zm1cpJfX3id16++ziV/GaaEfFcLt9AnAOhIVJGopHmVQFSCKgqCQBAFolDK
        kIjFYDBKMaqL+3n5eOdABK01ohVo1ajfYx4UdR8RhVEa21Cv+WWISBDIHFWvwq0F0jJjX3aA
        J/Y8yRMPPcG+Xfs5yF4SbbGSYLCAhqDYXHuCvqGO75Dw84oCnIOaGtWKoCI1FSv1Iuu9df70
        ys/pDVfpjRapZQPJRnjTp1+t0B+tkaj9zQNsNMYYECHGSCASQkCHiqCEqDWoxjwRnIe6Uf20
        ub/qaFVVaK2x1qJtM5bKO+q6pnaOXKcAKKWukyPGeP0oOj100OjaYpwhrRJMlWCCQXvNd/d+
        l31zB3h431HmZTcpKcYbLBmEHRLCDgkhNhbNgiFDRqywzMm1Y7x27FVOnD/JpdkeaZqQJgZi
        ja+HEGtSY0gzyzAEQgh4HxoDBApBN8QUTRwMCUoIRhGNAhWb/WAEAYhqiwF+sgghoJS6fsQY
        8c7hXLMvbJk20KiqQUIj4cdSHqCKNUopEm3QolBREbzHOUf0gbafRleKWTvL03uf4ncOf5XH
        kkfJyfFVTWomr49lh4SfUwxYo6JkobzGO1ff5rVLr3Fm4zRFWqA7GkOP2gdKB14sQadElRGU
        wSHE+jRKKYyyaG0R0UiA4JsHfN7MUEXHyNcUsSJIQCkwRmG1pi7ur3VUGd1INR8gRlSkIZNq
        rKOVb8YXJeDE4/C44HA4fAjstg8Ro6eONV4cnhKvPVECIpEii+hSkfQSOhsZe8Juntr1NF89
        8iyP7n2E6XDg+lh2SPiAYXPY4oQbTihwIaLHZve69vTVZVLVJqON8il4CBHceGvyov473jz7
        Ji+feZWr9TXsrpRWN6UYjuit9ZjM89uOY6vH5YGc3Jtwt9fXqqHSUBpwY6FvAqQOEg//1dP/
        lL3Jfo7aR5gPc+Bo7mVe4xmhqww09KgZ+hqTJHRISAGcJ+pmM/8gE/eBJOHNQy4rh7IKPVaP
        fPRIiBidjNW9QDEYUNQVrakOTgIFI15deJW3T73NmwuvMlQFg2RI1fJIW6GtgtrjKo/d4t7u
        kPD2yF3j1691Q0ZoyGc92AD9S46nDjzDdx7+Lk/PfJFdfhfWWRJjMImBqCmLIXUMZJ020Cyw
        0TkMQtS/6Wd80PDAkfDDw61kSEWFREUuLRSCdwFX+cbgUCeQg9eONVZ4afElXrn6K84MTtGn
        T1yLSMsiHU2pK4a+wNfNDU7EEuPtXQg7JLw9Ug9eGhLWY77Y0JBQR0jmOqxeXiUsBR6ffoLv
        PfF9vrn3W0yzC+stveGI1NjxnhwIUBYlJk9RliZw4ubxPoBEfKBI+AGfVtyMaBkSgFhBqlIQ
        S6wjzlfNA9JW9OlxavUUr115hTcXX+VcfZZB3oMOzFSz1DFQUlNHB4DVunEjiKKq69uOaYeE
        t0fiwatGFd10e6jYqKQ6wGLYoNNtkdscP/DYtZSj9mGeO/RtvnjgGebsQVokpCFCEUDrcZQD
        9MtAKx2P8ybyPWhEfGBIeCsCAoR6iDE5RN3sJyJgIGhHFWte0a/yzqm3eOXYK1wdXUHPQLor
        pdQFvWIDcQpXe3wMiLbkaYrVBvGB4DyR21svd0h4e+jYkC9yIxhAxpZhFcFXmph5fOpwUiO1
        kA1zJutpWqHDf/mlP+bgrn0cUHO00RAsRIP3MKocrdat1dEHiYjbnoQfHt7m+81XXYcmEBOa
        O2sCQ0YcWz/BiYvv84P+D6h8xdAPcFITdGOSb5zO4FoVEoUQFMEDIUCsgYCSAGTcDjskvLu/
        nwjTBOsp7Yh+7DEqh0QPubRo6Q57Vg5yZM9Bvnr0yzw98RQTdMEZUloYpfDj7cJHWVYfBDI+
        UCT8MAEBtI4QIz4GRqpkKS7zzto7vHz+lxy7+i69tIQkohJBkmYVDmXEDWp8EbC7FBJVQ0IX
        CMGjtMOkYK1Ql8ltx7dDwjv/HjX+8KZkBIhDjzIGk2qCBOpQ48bbAtFC3k8oeo6ZZI6vH32O
        bx39XR41R+nGNmYo+OxGsMOtiLhDwnuAWxHv5p8HrKG1psJzbvUsz599nl8vvsxC6xpmTkg3
        dlGGEUUc4VSJiGAx2JCivEKljfDDCRIVaI+jpPIb1L6klczddnw7JNzi9/JB9RM+qJ4Wbp1E
        UlIyTEyQINTR4VUkKIdXPYzKkCInH01z1B7hW7uf46tzX2R/Poe/yYV0K/LtkPC3xK0IR6FQ
        GSAOxDVpRig8ikFdYi1cjhd54dwvePHS81wsLhBbAWMtzoUmxWYHDyxCAGUEk1uCh8HSiFaZ
        8ztHvsxzTzzHN+LXyEKHTFpEoNy0wDJC1yPQM5TDmgDkbQvS+I9DjCSJ2XKR+TSw7UnolEcj
        6Bib5VOEIJGSgCPwysoveffiO7y98BbL+hqu6/HK4epAjILItrm8HXwMRA9RRyRRoAxxFFAD
        oVPndHWHbx/5fZ479GUes4fRPqcuIqrdJGVraiTaD37hmISi1PWgjvuNbU/CkRpisdig8SMw
        ucGpmgujy7x39j3+ZukvWBotshHWiF1QeRMyJl6T6IQy3N8shR3cHSQavHjq6AgSSE1KGhNi
        r6LcKLGTB/j6zON8f/7rPD3xOO1kjpoUp0EEKCqy7Ma+PoTm/0UaF+N20Fa3PQn7dZ9M5ySq
        USX6MuRk/zgvnXueNy+8wTH9Hkk7RSVQ+AIRITc5yif4whOT+xubuYO7RNCgIhUOFx1KKXKb
        kBmLicLZ3jozGylP26N8+8h3ePrg15i2e0nrFtYJfb9GkiRYk2KUQrgh/ZwLGHP/tyvbnoSq
        VDgfkZYwUENeXniBH7z3F5ys3kfPCUNdEWOkrCq8c7STFp20gxvBYK1P0r29dXMH2xvOBUQr
        RI/J6CuCq7BGyJOUGocpFfQMXZnjyQNf43uPfI9n9eNktaWyNQ5PdB6rE6zYJuwtALGpj3O/
        cX+T2e4EKQTlOdk/yctXXuJX117inD9BOdnHtgy67jAajcApWqaNiprexgAlQmcmp6rvb+b6
        Du4OSaYbQ4qLKGkSooMIEpt0Ky2RoANVt2LdLbC6/DL9ckA1v8Rzs08SmUIjYCwQcTEgHhQK
        df+FIPAASMJFdYVzxUV+ceEX/OLCL1iRRSZ2dbACg40BSBsRIbEWYwxF0WdUDklSTWdygmKj
        +qjT7eABQEwCBEWoFKGKaK1p5ynaBHwoWXM1vhqRWUPa7jAaBuKS4sn8Mb6+7xm+tef3mJ6Y
        JiVD0Li6RvlxwSkFWwREfSrY9pLw3dFbPH/iBV5dfYX+rgFJy7K+vEHWS5jVc/QTSJIEiVAP
        SxKdkk0llGHE0voiHZnc+iQ72LbojXpMdXbRsjmFrwguQt0E6Y9GFX7PFC3XIqsHMNwg8YrQ
        zTlXXuTyyUXSKxM8/eTTHJw7jIyrHchmInWTg33fcd8k4eZphzJsSh44AyWQgLM15+MlTiye
        4H8787/cj+Ht4AHBVsbNanGFbz36Hf7xF/5zHuUZWrFDsV5jM4XNFKEqm6RmCYjRWGVR6Bul
        Gz8Fkt4XSXgz730tN+qspIBxLLHAy6df5IX3nofbB6zsYAe3xcT0FOcWL/If1v6K7z8ZOdx6
        lLmpedywQLkUY7IbTBbw3uOJTX7qp+S++NQl4YdPJ06oq4hOIZiK8+4cPzvxU144/yLXisuE
        PZ/m6HbwoGErnpgoVAPHrmQ3nXKSP/jKf8xT009wQPajSoUyN5lHhabygsSmqvin5ET8VEl4
        q/hPVSlIYKBGHFt7l1+c+QkvXX6JlWSJbDah3rGr7OA22Iomo6Ji19wMq8trTNop8vWcP/za
        H/Hs5BfZr/fjRxqT3FQ9fLNUigqUdUFqW5/4NXxq29KPCsAu8RSq5rw/x09O/4QXL/2Sjc46
        elaxETY+reHt4DOK7uQEV1cXyeZzFuMCbrbi3zz/r3jpwotc4gIuD3g9ribXZLCNEajjpyMB
        PnFJuFU+YF/3eL//Hj87+TPeWX+XFbOES0qianoYpLHzSQ5vBw84tpKEogxOO9YG68zNzbFx
        dYN9dg9T9QSP7n6EP3ziv6ZDl5QUKRQWhSQCyjGqeuTJ9Cd+DZ+qYeZWfsC3/ev85PhP+NXl
        V6h31ehJTdV3mAJm23P0ytGnOcQdfMZQVwXaGOa6u1m6uMTk5DQDCkIr8MOLP2KfPcqjex/l
        cPsInawN1aZOCupT2hN+aiT8KIH7f//VP2fYKmFXpEwLvA+08hYdm6NHFtQOCXfw8WGVRqGJ
        I8/c1G7KuqAwnn7oYfcKP/31j3HPVsw9PkebVtMKIASIAeHTiWn7xNTRza/dkFWUT+hKB2pY
        L9Zh0nGMt/k//vJPuDC78Emcfhvh9tvuiB4nvUYUAQggrileJRHpttA+Mljuk0uCiFBEj53q
        0CsHdMM2CH7cxthKlg3VkHQp5T86+Pv84VN/xF72N0VSLdTeY23TsqdGqKJDocnFoqMCF8De
        vVnlE5GEN/O6TRujLaGMKCukacJrG2/xN8d+wKj1eTB93j6LQ0UNNJWvkXHWuSiiBECo1odo
        LILFJDkhQBIdbUkhVFt+/w5uj8xk6Fzx+pnXmZVZ/uDJP6CdTlGs13S7HYiCHjM5iuCcI+im
        Lyzq3qir99w6+mHBanwKXhGVp1AFl7jET0/8lF+ef5mNzuBen/6Bgw0RGwAJjAP7x+U1G7nY
        tilaFEme49OEka9xzmFqR8u5+zr2zwKCC+RTGUuywA+O/xU/PP8DVlginRzXUiwEvEJHRYYl
        EYsWAQmg7s0CeE9J+GE3RIyxaQAYIVrP6eIUf/76v+PNlTdhj6KfDO/l6bcnJNz2MCEgMTRN
        OiXg1biNGgowjOo+/XqD0nhK6xnqmmBrghoi8jmYv08YVqUM/RCzz7AyucJfHvtLXlh4nhED
        ilhSFw4/DMS6qZWTajNu/n3v6gfdMxJ+lB8QAxjH+foCPz3+d7x47nlW7Sp22uL0tknguI9o
        yOhVQ8AIEJvuRsYr0q4lbSekmW6KVFlNNJH1cpWNsHa/B//AI7UZ64M+QzMiO5CzZJb4m7d+
        wM8u/oQVvYCdsjgTqKqC66oKEJB7lpZ/14aZrfyAUUfWWeMv3vv3/OD4X9Gf6OHagcKXtLsd
        ZPAZ39PI7VXG1IFTCqegHufW2ADWKXQE1Y2MBoFQKOoiYFKNzT2FW0WnNTruBNfeDlvRxNUB
        acEoDEEruqFNvBI5lBzie1/6Pf5g93+B0BjOdGQc3K1ACfEOvv9OcE8NM7fyA56uz/P21Td4
        +cqvWElWMBOKGAK21rTKnBGf732h0+BUoBZ1vTygCmMieqF/DtqxTYcJWtJi3779uHbB+0vv
        4ZKKQblTQ+duUJYlExNT1GVkNChwGdgJxZXRJX569m85qB7l4NwBJuiACHVRkSZNz0bvwdwD
        4/Q9I+FHCdTjC8f56es/Y8kuMnmgy9X+ZRJJ2Tf9ELEHI/1ZJ+HtFQ0v4EUIKhBQmLjZq0Ew
        AZ7a/SxHpg9ydPIoezrzzLZmOc1ZLi8sc37xIjLxKV3GZxQzMzNcW1ik1Zlg39wcG2vrjGJB
        dyLhwvAsv3j17/nuN75LPnkYhaH2Nal0muaypcO07p5CH1sdvd4fMAqLfp3UGkLlMcsJndmM
        NbvM8fAW//PL/yvNvqex+W36wa4/nB8uSbfNEI0ixhpiifdNyXyFRUkO0RAKMIkm7WQEcfRH
        /aYblLIMh0NMkoE0rgQVMogpQgDVA9WnzTTtcorR5chcZy+dds4jew9xtHuQR2YOM8UeMptg
        JIWRBqNYMav86fv/hh+c/mviTLOIicj1oroicr3vA2Fn3303qKTi2/mz/E9f/B/oDvdSxRyX
        g8ZhfQ9lpoC7y7j4WDS+mbfDgWOy22UU+2SqTTarGdQFFznP37zxQ5DNGi837/22QTrzHSJx
        lkiTWxZNioggGIQUJZY4VTMY9BhWfWIMVHVFEiyStdBJs5tQUd2wiH6IE2rU4Yl9z/L0E1/i
        4NQhWiqhRQuDQoYabTRa9AdagClRTHUn0UGz46T4ZKEkcHHjGv/q5T/nj7/+T4kjjyqErGVA
        5ddvS4zxYxPxtybhb+QDqgpLhpUJ6jpABqtqlf/w1l/z6sYb0LnJIR/Hpvd4c3GP7f0Ypcrg
        fKRyGh8rgjBO+gRlQKkBG8UaBGG6O810ZxKNphiWbKz1mZxojXfvcVzia3MxalwQbTXLnuQg
        X5r6EhOjFkZpsryRsqRQ+j6gGt+gMhDAYNg3s5c2GevsZJp8kkiUcLZ3icA7PLn+Ft+c/DL1
        cgHZJFF9sJLfxyXibyWSbuUHzNuW4foG4iFJFIthnZcXfsVLC79iODOiKeTh+Q1JGKVpZ7bN
        MXQbDHwfJzU6SzCtDJ0aJGmi7e3Asjfbw+HWIbq9CUbHC4oTJZMbUzySP4YOamxdo1FDcUAY
        O+WF1cGQ3saQjmrTqVtkowx6AgGCAxMVgsIFD0oIIWKw7G3tYTbZdV/n5vOA6AO+q+jtCfzL
        l/8150cnybowXF2hRt3wh29+/mPs7u5YEn7UiSKBdneSsl8iE5o3rr3Cv3vj3xJ3ewpdY9ne
        e76tEFoOXzkUFm0MwQluUOLqAq0q9sV9jNZKbJ2yb2o/Tzz9BI898hgOz6mzJ/mzS/8eHRRx
        HF0RiGONtNEGBmaDa8VlSgrodsErQqhAaXwCprKAEJTgVSAiKBQzTHNo8gCn4nv3b3I+Bwg1
        tKY7LBcLeN3jz371r/nvv/PHxLT1gfDum6XgbysRtyThln5Amjg6M2E5Vhzjp+d/xFVzkRgj
        YRBA3UraBRBFIyG3N/JWhq8LwlAhRULH50zXhm7SZro7xRfsExz64iEOzR8hjy2Ci2SkDBmg
        MoUODdmigJdNdbRJ3w4YpFNyrX+J871zzHSnIAZKVROiI1EtJGogoK0hxHGPhWCwyvLI/MP8
        +Nrf3s/p+cxDSc5oo08ZKuL0LG9ceYv/750f8J8+9UeUcYiJTXibiPwGETf/fyv8VnvCW7Yp
        Q9MrR9RZyY/e/iFvrb9G/pBhZXGdrp+CbFPjDTde5SbVNG5vI0255NDDlHmzm0emHuVw5wh7
        kln2T+1hX2cPNYo2bXJyqBV17bBWkWKpp+tGCgqEGJoAC3E31PAoxGrE+voyS4M1ii4YYzEo
        qrJEm/q69VhomiuIblTViOfo/GG4dt+m5nOCNnFY0Mkj/XoB2bebvz779xw5+EWeTL9AWzck
        3CTgx9kX3jEDPkrXHYxG5HmLF974Je9deYeiPWDDrbJ7Zo6u7zQPXNws3LGJwI294vaGrBlm
        4ixPzT3D977w+/zjo/+E7+7/PZ60zzJV7KFNC4tFgkIEEmWQ8bWmqYXrkYYAYZwtEa8vSVNp
        C/GwurrOkJq+qwFNplJ0tB+wpgbGkVIRfOWZ7cx8OpPwOUZVRvZNz5P6QOWHbKRDRjPCv/iL
        P8XYW5Ptt90XbknC0Gti5GpVUkofJaBjY/3rhwF5XvD3Kz/kb8u/5Xh+HhHFbJwilAOW7QWQ
        EqRm0yDRjNI0K/w29xECVHMFy/oKVzZOM5dOMlF3STZSUFBmQ7LQQgeDjx6vPM6Oy7M7y4yb
        4/tH/hH1siXp7qXQKcMY8N4TQiAmmiU/YG3XBj+++kMcA3bpnKRnMKRE4wh5RQgBEwQbIkoH
        RMN0Ms+sP8w3u/+QyWKGKtYM1ZDKlYRxw9N4B3qObHF83mFyYakeUaaTZHaWtOcxcYne/jP8
        jz/579jQPQIR7TVu4ChUn1W1gJeIlHc2g1uSUNnNuNWIlaRRHytI0xRrLVfjVY5dPs7VjWsk
        uSXJWgz7JaNRzUT3k6/P8YnDB8QIw3LEwA+pYtm0sQ+gb6HNf1gVmcgnsTHBlRVaa5RSiAha
        hOibRckYQ1kP6dOjihES7lhJmO5M48uIiRoVQWt9XS3awd1DxYAOoCPjyt0KLzSxvjrwwsVf
        MtJN6GBiE3ztyGlRVkPuNDF/a3XUAgQCHoOBsVAziWbgBrxw9pe8u/Qey9UKwQRENK6O4DSJ
        /SwUaWqI06t6XFm7TKUr0I2VU26avo/qkz7f3UPHdHCDGqM0Wt/YNwQPWhTKKkah4HJxiUoV
        zV0JkRthLx+NgzOHkFKwJBAixjaNTrz3O9Ey9wA2OHRskq43k368gkpHSuP4u+M/4qQ/wyip
        Achdl5wc52qaRNGtsSUJ/TjUTMexk12AHEpqTi2e5MWLv2SRBegGqlBSFyW5aZEmbYpR/XGv
        fdtAoQlEKipOXj1JPSahUo2rQERu2R998//3ZnuZa8/ii4ARg1WNtVNEIASUMkQBZ2qOXXqP
        irIxl2nB30HS7oGJh8hpY6JBgqCUQilF9OF6j/gdfHwIHh2buZQxB4JAbQKl9RwfnuL5M79g
        kUUqCRhtkbJpWtOPd5ZqtiUJXSiBiBFzg4QWrnKZly+9zKXiAkU6wnZts8r70BTXUZqievBJ
        aJSlDp6YBs5cO8mAAbV4MNxSEt5MSoBdzPLQ9EG0UxDj2GMTIEQkghGDCzWSwYkrxxjSpwgl
        WIhuaxbNs5s9nT1op8cmoAgSGmm7zS3PDwKiamwZEmnCD2lI6CVQaUfoOn59/iVeW3iFUdpv
        +BEURhK83NmeYsu7FGMT7aI3P6qhxwavXnuFtzZeJ7Y9tS4BRyuxtEyCq2qqesQD7qcHwEoK
        IngTWSqWWKwWGcVx+lD4aDV0k4xdOhyeP0IqKe7mRSmMF7YgzRxnkau9yyyx0OS2CcSwtTra
        pcuRuUNop9CiGzWUcSjAdugF/YCj1h6v3fWdgYyzXIJyROXJ85Tl6hovnv05V7hArapGkwkG
        zZ01qN2ShIm11PX44fGe0g043z/Lry++zNXsEjoRYnQEV6EjGCISazw10WzvuNA7gYjCWkst
        FbWpubhyES+O2nPdffBRRIQmznP/rgNkKsNXnhgbP2mIDi2KEAJoqKkoZMSVlcsE3cyblq3N
        m4aEw3uPIk5hlMK5ihCavzeyIwnvFrUOONUU4JLQVDzYJKLEQOo0tqU5tf4+L114gYV6EQSK
        UUBzZzaRLe+SVprgmtXVh5p+2efi2kVOL5+g7hR471Ei6Aj1sMCXFdYoTKJwn1IZ8U8SEkHb
        RmXUiWZlbYkIOOc+4MP7SCLWMJPuIjUpzrkbRpkQUEo1HWiVovYlkghL64vXq3jdkdPXC7OT
        s416O/7eGCMKubO/38Ft4VXAS7x+q5vylE2mvRAIo0CWW0amx8vvv0hlSkKE4FWThX8H2JKE
        i/VFWmkX+hafGt7vHudPTvzvuBlNurqLkoQYLSpaMJYiMQy0JgZDXm//fvFb+cnWyjV6rkQ6
        kwwtvHPhTRxrhHFFgM0A3t/ILhmro6UNdJnmuX3/kKnRPHXwjOwAVGSinmTYWsWZmpadRkuH
        d86doSBydbiCShWCRUSPDxkfsTlUpNQraIk8tu9ZirUUySeoOjDQG/TKVXwaiEkgWE80gaDH
        y/gYOlqUJGiTgE1wiaYwgQ1dsyolWnWoo6K0NW6iwk0MGZplhn4ZF9ZRsSYVwUZNGAV8EZp8
        S2OpPwOGobTKMb7ZVzntcNo1oYPektQ553atsRj75LbNxd5F/uXb/4Kz9jymE0lXmwDw6MMH
        LNXxpgPuIGzNSkb0DskSaipeffdVksyyWq5jbXrvr3qbYdOvF3yN0glVrFmJ63TtzB2V25Kq
        RnTJbNKljaUUjTeaWDiqMCQPHUywjQU2lgx9j+VqgcP6SOMO2mIdy8mYsrvYncwzWU1Qrpck
        ucIVCUkUhpcaCam1IdEGqxOMSbCqIfbS+lXECsZaVKrBCqIVYdMunnuKsqYYDTC1op3lZDpD
        JYJymtVynSxTWJNgWk39FWUEF2qCq8Bu/4X4bpBFhZVAjSOdylkYLnFy7SQHpvaC3JlRZEsS
        Tuhp+r0hrQnFsY33ef3k67h513SsSeRelV7ctlDWoKIjuBrRgT5Dzi9f4tDs0Ww0JskAACAA
        SURBVDtKhWyplITA0bmHmDjbYs1HdCqUUjMIQygtURTeeELuKKoeFxZP89jcYegBW0Sm2Zgx
        I1PsVbs54A7gS8+eqVmmprtMJR32dR9GKYVRGmtTMpthtcGoBI2izzI1NYN6wHpvg6W1ZZZX
        l1jrbTAsRpzvnaCNpZVMo4IijCCEgI8KpQx1BBVqMIKyCi3jEo7Boe9ZUcDti1YARcTrCpnu
        cGH5Mq+eeYWvfflpkqxDlKz5oADjrciHNwlbklDFlGBG9NnghZN/z4asM6oGqFxwqiQJ277t
        /V1BaYv2nugqYuroxyGnVs7yjdlvkAcPemvjh/eBiYkZlKQMBzV1FikNKBXJJMHFmoI+dRyR
        orm0cRrZ/w+gewcDdIaW7fD9L3yfJ488jU40bXIMQoJByFCxUWMVGhmnQm1GtPZCu5H2FpgR
        /IzH42j+Dbzde4NT50/y3oX3WFhbxHUisR0ZqYr1qo9NMlBQRY/EGoPCREErhU4Md+BleaDR
        ipoq1AQLVVKyrireX3yPN5de4Tuzv0MI4ywLbooivmlOIvEOsigC2FbKy4MXeGvldWQSlNFo
        iTi1/QOw7xZBC1IGjIIgJYV1nF69yAZDJqTFlvqihjoIGVPMzz7E+2un0dqR5ZDSJfYLlBEy
        bUkySLRmebDAGku0iyFtu/e2Xz/aGJJ1W2RJzqHkMBDwtcMVDiuKpJOz6T6M47j56AM+RiRE
        unoKlAK92R46jD/vIAQm7D/g2099h9Wn1nh94TVePP0i76y9R5mMUF1I6zY+OIIqG1cOHqLC
        eMFicJ95aagggLKKQdkn5oqltUV+fuwXfGH2IWbGqozmpvQmPmxB3woRRgz5+amfspwuEDIh
        Nznrww1M/tmWgkCTw+drOrmmiAVVlnBltMhStcwBtXVsrBewSY4l8PC+x3hj5Q3WNtYRF1EB
        ps0Eo15BsVwS+gGbZGQzLSwp+URry31nPt10knUlhBjBR/BC23bAgsc11jdRoCJRmj2fCuOq
        me7Dq/Nm11oLIZCTQQG7TYt/MD/Fk/NP81b1Fj9+98f8+v1fMfPQPGUsqGNj8PFSE5zHufGj
        tv2LJ9wVCt/UHDLB48oRaWsCl1W8u3qcX4/e5XvZ42gEHyNaZGwTG899bJr+bMmi0gfeHb3H
        id4xBvmARKdoZ1G1RltFfADSke4GdfAo52mnLQbDDXxiWRn2WeotwdTDW/59qGuUEowOHG7v
        Y2qQE/oDUtuiLR1Wr66wf9d+Hn3ocQ7PHuXAxH4m6dJl+jdWzFuhHwISInmiMVFz/akXqJ3H
        x2bjKhFEdKOKSiBuqtGqEYQfGjV4T1SeUIQmKNwp0pgxa3fz5SRj19F5vjXxLX567Sf0fJ+B
        D1S+IBJxdUR5wSpL0wfhs4sNF5m0GaHskQVBB4/PLUMcPzr+S773zH+GJ2I2S+dv5ht+qEj9
        beEk8P7Z96iSil5cZy7dw3B1SGpS6qr+TETF3A7BR1QIpFZTx5KQ5JSU9EcDmN5a1ZK6xpiU
        UAtH8n0cbu1hr+2ye9deZlvzPPH7X6bDJFPMkdPBbKZZjiIkQtwiAFQZxWaNgjgOINC2ifkt
        4pBc2s3tF1A0YYebWifASHsUjPeKoYm6wuNVDT7guoGcNjpabGWxQ0s7abN/Yh9V93d4c+11
        wsgzcn3qUFNQERxkKscmGT58tkk48IGJLMEPA7k1lM4jRkhnu7x25n3ilxj3GdlUR28i4Pit
        +J6L0olUeOq6psO4sKmrkFbkJV7gn//Zn9Bv9ZB5YaVaIWu3iDVYnTU1+rcxPhy69eHqABtm
        iBJDYkyT0YAQXSC4JuevvdIBJbSmc1b8CjozTNezHCmf4L/5zj/jYLihkt4qkHvAB5ucxpuW
        wBgjHVq3Hf/9drhvlRIlssIPL7/A//XOv2UtWaRlK8qiQCZmWAyB6Vh+SiPdnvhm/zn+23/0
        z9gd9jWRNNKnpqJNB1UklFmN8mzWiolktklWxUGwgRFD3jj7JkNVoNsJLgbcOMUmRiE8YKav
        Wz1Qs2qKyZCTjBS6F5CeJ600XdViNpnEPmQpJyvW1Ro91unVa6wMFum7VUZ3UG6wqZUm153/
        CmlUw/jBnPsHFZ6U+e4evvOFb3CwvZeyiHhrGdQ9pP6sV1ffGssscXr9FF458KCxaEzzRATQ
        KEyz0gqRcD1JtQwVztZcHl3m5dOv0E+GdDtdSl+Pw6I00Y9l7AMSnvhR1eL0EKyyaJ2ikmaP
        65yjHhZU3tOb9xRSMJF06bbaKBR6FClG6yysnucLk4due94kqhtqCPzmzw+44aKmzZ7kAL9/
        cILgC671FqmzCl9v0JIIdxg/+VnFNXuJVy//micnv8iEm8L6FJGmXGYhA9LYxjQdLQLBBcSM
        9wyZZ8iA9xbe4Wp9DdURKlNT1hXKWCQIwXniPepU+kliq2pxQ7UZnA7KN0YIbQWTZSQaJFdk
        owozUNRlBSGSDS3d2MavFjB5+/M3W7ob83TzaB4sPeLWGHlhIk6xmzZfnX2WE+uXed+fxNoR
        LUrqz3gwx1ZYy1Z4e+l1zleneTr5CvTBpI0hJeQlEsCYBCIK8YEQmtAsDCzEa7x59S3MtCVI
        YOQKfAwkxhJCIASPmAfHMvpRkrBIxyQM0gRBh9BUrC+bz/jjmkk9yf7Ofqa7E8zvmuHA1AEe
        az/GY63Ht+xWLfJhUXdjEfgsxFenGvI6R/rwePdJvrJvgUunrjHUA6IvHhhN6ZOCS2oubVzk
        rYW3eOTAk43LJ9IE7pvmWTBxs6y7aFxVk2SaipKTC8c4s3Ga1kMZo9GIoihJRGO1wbsKpMY/
        AKkyHyUJr//sFHgQJ2inMdGQSUamc4zS/O6Tv8u+zkMcnj7MRKdLIgqLJgkZjJpS9bfHTSSM
        8SNk4oOLFBADZT/S6ezi2V1f4t0zb3Gi2GAtrJPk93uE9xcmJjjleHvxLb6y52s8ljzZVC8J
        49pNAiYAVeVoJSmhrgDPSrnEu+ffpScb+IKmSFGALGsqHPng0UnEM0DRvq8X+dvgVtLwUNgL
        TpBK0aHDXHueQ7sO8dD8Q8x0Z9it95C5Di3XRjuhsAUBT6ZyTKIIW4jCD5SJ2SwMe1N7SXnA
        uagZgU6JeYZ4xcP6EM/NfpmlS1fYSJpk788z7CAl2si5jTO8fvV1HjpwlHaVYYxQIXjxjSWm
        qipaSY6yFqJjvbfGpYWLhE6gtz5EIuRpSmosVVUQcSgVqVxFoh4MEn6UOvqIOciumVmOzh/l
        8PRRdrOHjBwTLb7wxFyTxLR5lgSymLERehSqRJwmt7d3td6aonLdVfGA22UIG8v41gy63WLU
        g7yd8szuJ3h+8WUW2xXV8Or9HuJ9hRQW0xHWe6ucWjhGfaAElYFAFSq0SjCwAZ02bqQwQ0Xc
        NeDPez/irfYp5lLIpImNDET6RePzUqoFgW1BQKVBakMQoTYlo9CnpXLmwzx60bLOIsorstBi
        JpnloelDPLr3Czy89xFmszl2xz03vuxDUslk4zg/y/WgBAVM6XFk9R1kcn24X8Hm66aADKox
        Uzd5Q5FQ1pQEVJYguvEXNcXXPNH5ppe9KEQUiMLpph+I983vRQSjNMaY8SWtsu5GaNNFkQGC
        LTRJ1FBBnNjKD3j7jWvdOYBS4KqSPG8mZLpzgG8d/gZnfvH/sPHIBipoEpeifYZEwatIUA6v
        HMZ/tkMfW1OB5aqkNTvPu4unODZ4ja+0v4IJE5h6mtRETBMrOC5AZKHPgMWVpSayXqltv3WJ
        ElBGxoHJQNT4MmJVwr6ZfXxz19eZaE0yP72XPe29TDFDSgYxEku2jL/+pFH6oimOFYXEWFTL
        kAuUwdEfFUzQQSlBi2nad+hNv64nRo940EphtW1CZSIQAm5Y4Jwj1TlJrZHUkORjq5x1+OgR
        HZF7NAFRxetGYIulZdtMtCZZjZevF0hq+jNufzvCvUQVPIjQH/Vp6WkuLFzk6SNPjUvBAAIG
        NAmqIWHLcaZ3gYXlSyRtQzTCdk+PLuqStk7RCEYME0mXNFp2t/bw7ce+w1fzr6HRWCwai8Gg
        vIYg4yoS9/f6Ut1qqmoDhCZlqopNYaE0ARPUppefKJFaajx+nHIb8aEghjiurgZGqaZTcMtg
        UUjVomVbTVxbCdiA0sKAERGhE++OhCo2OeLSRB80YXNoJltT7JvayyV/HBXN9b1vvClm7vNQ
        Da6IgWgUw34fZ7q8f/EY3zz4TXKZJlOGoMBUIZKrpozbUPd54/Jb9Ms1zISmiSrc3mULA75x
        xnkhekiSFB0MSUx5OH+Y6XquUQmbAMnrHbuDgxjinSY/f2KIQ5B0TDRRiNGk0vhuI7BSLmLz
        BCWaioqammVWWRgtsj7cwLsKV1YURYGvHYkxtNttJrsT5HnOgfhFZtOJRnMex5ZGD6Iscs8u
        PtxwRcRGvd6V7+LgzCFeW9/U2VVDPQnXjVXqc0DCaC0xeEQilSo537vIpf4Vdk/uQ3mDQzBV
        6ckzqMKAy+oar155E5U1FrwyqG3v5knTFC2a4KAsSkQift1zef0yy88sc7hyBKNRenznNWBA
        JRDCDSvl/YKxQA2jqiAmkSQzBBwRTxGGnG+dZbm3zLmr5zh95RyXN67Qcz2cbgKFQ66Jzjf9
        LZxHIWitSa1Fa80ed5RnDj/OU3OPcKR1gDk7jwo5bWdBN9L1biDSGJlEIs0KpzAoppjmwORD
        2JWEMCZekHFz1OtTrtjS0fqAw5gEVwxp5ZaqHrGmDMdXT/P05NMYlRJQGDDgoXQDTg5Oc2Z4
        gXRaMYqeWvSd2B7uK7SYcQyrECUQTUClkX6/x5W1K5hpQ4iOoqqaIrsi6MQ0eygFciddUz5B
        VAxxNuKzSI1jgSXOrZ3h+Kl3uXjpPCfy4yDSFGkyAb/L43WT+x7wFMmNRUSN41G98jiaa722
        +EvOX3iX16/u40szz/DtI9/hSP4ICWmjnmZ3N34ZS+yw2WkrNkamXOXsbu/BeEuUQK3rJpNA
        NlXRz7ZBZhMajfYRm2rKWDPMS46tnWaJZQ6qFAk5Jk1yKCqCLjmxdJJhOiJLFGHoibnZ9m6e
        6AJlWWJthhjBdhKSxOCd41r/MnW3RERIkoRMjTu50PQLjDHeb0HIwK5wNSzy7sUTvHftOBf6
        l9lw600q0ZRnmI8IwY0ruvnGIBMEUY0U8uX4d5vNZURhjUFbi1WayYMJa8tLrKyusDhcY9UP
        +b0j3+GxzqNYbUju0s/bWE8DEU8gohxgwCjNZDKB8RqnGVdvdwRppOVmg5Uon21JSBkwPiKu
        RKeGQSg517vChd4VDnbnm7A1paHs9YmTnmsbi0hb4/HNA3rLLrvbC02Z+s1W1J5ATTDQqwac
        vnoGu8801+Kbig2iGoOwguuZzfcT/+8r/yeX1xc407vEqhkQpiDOCGUYUVQDbJ2gtSZJLKmy
        GJWhxiF2IQQmTJMKJaZ5T4hQB0IZiNHT8310kpDv7bCyusHPTzxPPSxIvyIcSfZDvBckhGYD
        45tQEKdQRpGqDBUMIvFBeJQ+EcTKo3zEFxWmnVKOKlaLdZZ6S9TtAkUXlVSgZxPek2O8NXqH
        IjjMwGKcUKpeY1a+3XGfUbuAJBBiyYTO0asQ12rauxJO1+9wxpxhIa4QMQSvGLkKp0JjKY9Q
        x3XquI4LPXzsE6QgSEUtjkoc1E2tlUYlqKnciFE5/EDdyNsj3Pb4wr5nOLl8idHDnuHBAYVa
        pz0Q5upppplnSnfokpPWBkpwI09VOqra43xk6BxD5xh4zyhGRgIjoygTQ5VafJHTZgZdQJKP
        SA70eXP9RX78xt8wpKaWQbOfKwRBqCSyHjdAPOK3VhOiB4PGDz21V/iWwqVA8Ew6oUgdVeJx
        WmBcP1Vzo4bqZx1ZmrCepNSdecJSxQFjsJMjfnbu5yyoFYwOTbK115Gl3jIxNt2CghKikgei
        q89HCbJIE5N9rX8JnQSiDegMkszgqCmrEcNBgZQG6zOs6mCkjSZF00TIuFENjPtF1IGqdBhl
        ydJmIzUqRrc++W+BTtoltRmu8hCkaT9Hkxkv90BKG6WvP+w+CqV4hqHk6nCVE+vnCDQq7mYH
        4I9Li83ei9ffK0Hb7W7W++QRxlpajBE9nl0XPYWvWK1WiH5c8WAoBecWL0BwJEoRtBC1agJL
        HyAEYWyFY9w5B05dOUlNhQsl9agC79FAlqS0OhnWdBAyqBShEGLRBHQnytJOW2OBJYhKSEyO
        QhMDlL7csvTEnWBXZ4aZ1hRu5BAP1pgbFb3voJziVkj02EcXFVEJXgsDXXNxuMArF96m5/t4
        bs5rDOj/n703+7Eru9L8fns4wx3ixhwMksEhyWTOmcpBpamlGrva7SqgAdvtFwMGjIYN+M1+
        MmA/+N+w4QfD8KMbbnS7YVc1ClW2SupSlaRUqZRSZioHcR6CjPmO5+xh+WGfCAYpZQZTQWaS
        kfwSJ+MGyXvvueeetYe11vd9n6Exf1dYOjMWu6sZJYkUwCfYSX+ZEKRGGms1rRO31Ilj6Ha4
        un4t2UiIhg2/ycW1K6AcRkdqI8RMY8ITMBVy7+gdVTJxlCYgL1+5CAi5tmQ6x5BBpSBqwiCk
        JxsgB9VS+AKq4BlNJvSHw9RRY+99t6qqUjdKfvhuk/l8keXpE1BpdNBk2ibXn+gfykyoiE3L
        fvK8kMzgW7Cudnhv4yM2J9t43J7uf3Jz0rtPPhC75QZrbZIGCenPAp7xERd5ehDERmgr+YMY
        oghOPIMw5vL6VbxxWEfNpf41bo5vY6YiikitAyhD/gTIV9x/n+ye8e52ZjgcEiRANPcaACjw
        JlDbGkekwuFI5jZ5brC5QhGZMEarlCXOVJY8UssWoiL+IaSOO0xxav4UZb/AhwqjTJperBBV
        PLQERoyRKAGlkmJ2zCK6a3ExcNuvsT7YYLlzkrJpeFA2lTkiGvOAQSh7Ah4gEtNASGRrsnWP
        V4eIIDSz/O5x5CfLgNIaiY0xrIp4Faj0hOvbV9kxfaxjxEe3f8VAj8hsRBBqIsZa8kkkPOZZ
        LS1p9gPuKQTv/tlQj1it1lgsT1K0CjyeoR0CfTazbfrscGewzqXVa1y/c4v+aAuroFcUtPOS
        b134Q45PH2fGzlFPPDk5eWGaiePwd1BBxsr8Ct3rXSoZ7nnVK6UIwWMPKWe3e/MbFDEqxAds
        pjAtoR4O2RpvpcFEC9GnZnH7GVo0lE55UdWMcFolEUyPZ3Vz9VDnfhQgJoksqxgbJXxBrCIU
        kbXJBjfqq9hAxce3L+JLRcdC9JGJcrR0gYnqsQ9CuDcQodkbNo9v5jf5xc7PmSnnySlZq29x
        bXyVK2uXuX7zGjcH16mVMDEeZyLReHKJFDVklbDz0wmvnXudr6y8znyxSJh4Yq3Rud7bAx0K
        Yzg+e5xeOcVO3EBCjUYTlTSGn4cMwsbWS4shekc1nmDy1GMaEfqTIUJMR4iNQP5n+2AhBJQE
        lGmyns0KYnXjzpd+JtRNOSz6VJeOCrRVKKUZjgZc6n+EDeJY39nALCqMUSgfCTHdyDo+/svR
        +7EbgLtBOZjq89PVnzDcGrNxc4trO1epekNGto8XR2xFnIU6E2rrERWw4sl8wITIR9c/wHtP
        KW2+eXqeslXgRx4/CuSdw/deRheZak3RylroShEDKK1QCmJ4CJ0SRqOjRokieo9zI6JYMjJi
        CFShSv230Lgy75sFHyBAIiAxEiViDHv72JqareH24c//CUeysVPNwHPX7VoZjcNxa3AL++/V
        TwitAWbgWJNIsHCi12O4OWZoLfaAJtsvOkzvL2WZ+zO6OueD0Yd8MPowtWjd16a1+/RcIHe7
        CtZNwkXD1nMbvFNtcfnjiyycmuG5+BJTtptkMbjvpv0toKfazKJ4vXyVS6u/ZLJSMbAV2XbG
        fH+K6gC+30GoTUl/tMN0Zplpt+hUM7haU9uMLVNxvL3YGMAItmzDBKyBYD21cqm97VMQgSwr
        Ma5IGj2mZsg2twa3+IdLv6Q+u83uVdZik4/lbje9gr319xHF2OXpbsogVZcLOiOACf0evLv+
        Dnqr3sSFGlEKQ4rYEMKRESI6LEIIVN7ho+P25m3EyL6e44dzgYTIwtwisQYrlugC1lqUPfxe
        IA/QLVuYzDISz0RFolHkaGbzNlNl7+6+czcePsPHUkSCS5y5OKjZ1fJ+58bPGU9X+17svsHq
        Sdf1eEjYHG6hr61dZyJ1MgnRyZzb155dL7UvO8SBc45KKj6++TEOh5cAWieXo4eAECOnlk5T
        xBZUBqk1xmTo/PB1wlZQtG2OU4qB8sSyQNucVjQcM11mu7MUlCgUla/vcheb/dtBEByhrmAS
        U8cakQ/GH/OTW2+z3rvd/Kv7P0dz4Z4GIkNdoa+tX6OiYpd0pyKEOnEI1ZPQMvPIoYkieBO4
        unaZIUOCTR4cD4WUKgErhmP6GMc6x4h9oaBMOYv88DNh5gMqCrX3OBTYgixk9GKHC+2TzLUX
        yMkJkuhQe7xLSALPB8DXY4oyYzDewc6UXJvc5M/f/jOuc507+W0Qm/ZCe9cq7vv5hHWDPAKE
        IqJXB3cIWSDumvmIRnkwCOphDfVPMIyymMwS88id8R3uuFVCtpvVO3wQiq8pTEZBwbPLz8FA
        0zIdgpe7zkmHQIgOkYAxGcSMsBPR24ZT2Wm+ceabdEw3ybJHldLMhr0gNA8gQ2UwaAOdxQ7b
        aoMfXPwB762/j2vVVGZMU/7n3mu1v3/2y41aHLofd6BIXLzoBRM1WiWn1cehQfuLhsZi8gxv
        PEM15OraZTz1Q0utxxhoHO64cPx58tAmUy1iTD7oh8XIeoIVCpvRrjOybctSXOa1hdf5nd43
        KGJJEsIwGGP2YkVJksk4CGXWZhAn7NDnb9f+hu9f/i56PjW8d6Tg3gDcffFdAsBjzpP7HCAi
        6GACpmVSz2WMaG3T6K90k7L+ksODMYpaKpxxfHzzYyp8Sgs/hMujVGqhkyCcmD3BTD4NLil3
        1/7wjkauBbWKUEfadca5coVvn/tHvHny63RYIFaSJCmMIcuyvZohgH6AmVBhuN2/w482fsRf
        fvyXXFWXqYsJUgV6dWcfjf4T9oVfcuRYtFjQmU2Lg5japLTWe82mX3aEIIgiiS/ZwO3NO3gc
        tfcPhfC8axipvDBle3Rb08QalDW4+BCivGupQkU9GlM6y4XFs/yj57/F8XKFnVtjoo977Xz7
        +7YfOCknsDMa8q/+8l/z3u1foOYitzauIZNAWTWlHrn/teLdJ3/JoXzElsEQhxMMYHILCD6k
        L1+RHfnLdNDnG6k+0zLDVBQoNFerD/mQn9HNv0ZezexRVeDujXvvDaz3/f29PwFcbsk8tByc
        KHq8tPQiV69fp1UqtGwR6SanXG3Q2iJREYLgfdIaLX2OLnN0K2mQ1mGMryu0d8nu+uYCtp/z
        XOt5/vClP+LNlTeZoUsk0lruku3rTlf7z/UBt6M7cZtTc8v8D3/y39MP2/TdDoNTfUZuiJOa
        v7n5Npv9bXYmm4Tckc+C7lSMZZthtUVVn0wmO0pR2Awriug8IgqlDO4J8jv5bRCMegDP+i85
        0kwljQ6rECSyMVhHdfXDyMvc3VpqjaDo9aaxtzKqEAnGYHxG8BEvDokebQ1ZVtBqFRhr2R6v
        gZkQvSJUQvSBIhraZopOntPdmuX1C6/z1dPf4Exxhm7IsCpRR6KvIT/cLdCSNi3dptuaYk7P
        N4V/T+ooFV49/RrbVZ9r6zd4/8Z7fLj2MWu3bhJabbrdDrbTQYJHXE3lRlRRki6Lyn/N4PWo
        4mkQHgDdaKjopgkwELh66xrh2fBQNOx19MlRxVgCnuWFFbqXp+m7DWK7oB5VGGOwjXqaKI2P
        gWpSE0Kgbg/ITE6hOrR8QR4shS9pVQUFBf/xC3/CsycucNyuUNAGp8GkbhXlObT4cRazRkqy
        ER5uShy7+8pZ14NC85UTX+GbJ77DR/2L/OL6O/zi2i+4cfk6nB9grYLMEJXG1TV1iOTGJlLw
        0Z4IgadBeCCs0kiIKC0oFQkqcvX2NcbPTph+CLKdWmKjEZEhBE60T7LQXuTazhVkKse0fWK2
        SEWUJEGhjcbkBqssbTWDG3jqjQmMYalY4rWTr/HWhbc433uWJboQNX4Yk2aQVXvcwZg9SBHi
        ABTcXdMLyeU5SuIVimAbVTebZcwXLbpTszz3wvO8NPcyl2/+in+1/S+JJqBLiy4tlVWMR0ng
        WFvzNAifouHWxYhRid8XTeDOzh02/BoL9jj60Em+kArzxkC0LOh5zkyd5L3NdxhH0G2PNDIB
        WVCpgO4iMSY/i3BZc3L+NC+eeYmXjr3I2alnWcqPMW1mySWJCldVDcpAsSuvkBJNNrOHDsKK
        cfLFoCED6yTXkIR9FaFpqA8+VSUKbSlo8/WlV/idpee4/fFNrty5xOr2NVynwhY51oKPGv+E
        kMoPi6dBeAC0UhCTMJQQIVNMwoRrGzd5Zul5isNeQh2IkiT5jc9o64Lz3RVmmKL2m8g49apa
        b8ijpVRt2qpNy7YpdMbvfuc/YL47x8npEyyZJTq0UNHCKKnL1WWEPEdr9gICaLRskvzgYZAY
        GAGFJjY/kxhwGp02ZUKpCjKb73bEoUiaPSbAPz//n/Jj+7f8zUff4+rWZXynxuQ5UcG4rnkI
        nXuPPZ4G4QEwJHJtMk0SssxCJtxcu0G95A4fhOou/coK6BrOdI4xpzpsTHY4rlYQJ2QuZ0pN
        caJ7knPzZzmz9AwL04tMc5ICjUVhIogPCIIuM5S+S9AN4hhXEzJtKLJmIxglEd4OgZL2Pb/f
        79c4rSwKcH4CZIgxKGUJFPgQWYmnKZZzrBj+5vr3uFhfRLKIMpoqBr4M9cSnQfgAiDGSkqQR
        ZTNMZtnubxEeyoZld5ZNX4ZMAnPFFG1Vknk413uWxeVFzi6c5dz0OY5xnA5tdGWJ25FBFokW
        jEmiFFFHnHZEPUYwtGkBEa0gKzJCNcH3J2kmtAUc0klXVXpvj4mi6bTa9gSFUAAAIABJREFU
        /UswIdG9bC3UMeK0bgTsMkKm4Dosnljmm2e/xYa+w+3Ld6jDAJ3niZDsH28vlIcB9ad/+0++
        HAvv3xKaDBMV7W6btcEtonIUk4LT4Rz/xR/9C14KX0dXnnZZgo6MCFTO05aMQtsHGOYaSTwC
        sqsKzq46eETJp+vUqwOY9+rXCJb3P//Rrvf211F/E/RQQdtxR20x0ZG/u/hj/vwf/i/u9K6w
        PbWGsvPYmChZNibihTRKeqKOBhHjS7DiPiR0clsIuw0MKnUU+ejYGGyijcLau8Ymuz2Y+rda
        5t0niPsgLA11wPHYI9U1erpLm5wLi2d5/uQLuBFoWo1c/hd9jo8WT4PwAIiKqZna+btNzQbG
        ccL1O9eIBEzeLMFEo9FYnWGMfsAgaL4C0fsCUH8GLqc/4Hi8EY0GbSnImHIZL3TP8tUzX6Gn
        5iikh46J3KHkrq7sLo5KcD4NwgMQVdKo9t6nQDEWMkMtFVfXLjNilPaG0SMxoknJnBRDD3qX
        NEHXpPVTAGqUuisX/0nHQTYFctB/9wsxfcbjIBx0/mF3NR0MeZ1RhDYXZp/llZOvkVdTZJF7
        RKh3hZ2fiEn+AfE0CA9AUl8hOSE1QYEWvHHc2lllfXIHj09ZwXB3FRgh1QgeGLpRKtsl9B2l
        2+yTUTd7PESBKaHSzNt5vnb+a5SDHBuTQ7jirmzsPunYI4GnQXgAgkSUUc1eMDVQRwOqVOz4
        Pjc3biQXq+aO0LAnexE/812Svg61Z5iiD54Jd1nrn3AcdqZ71DOhdxOiRNK6k+RtqNqcnzrL
        CbVAHpJ4167Iw/7l6FERfngahAcgiAeTNF+sNsQYERXRhcVrz821GwRq0KmDRQl4v1/C4QDc
        Z++kVNPD8sDSGfaA4/FGOwOlPEFLOl0NoCkxvHn6xUT2vy/YdgPx6Z7wS4KA7PErldLsDv4q
        1ygrbA229snhp8u558Rz2PXSgwSiHHA85sgyiyB4hO1qjGtqpm4w4ZUzz+8lZXZLE599dfH4
        4/EfKr9g9GIJsWJCYrlnZFDBkBG04Xu3/orv8B3EtVhUrYaJnxqQ0fHg3sz9FYkmwkXu7gmd
        coxHY6ZbM4RxwBjDaDyg3S1SM/agidVc8LnHqYqaCY6aSGC1ukzlHYOqz+Zok43RDpvjLYbV
        gElw4Cs0hpYu6BVTLPYWWJpeZGFqjk6rS0stM800ZbCwo8i7HTDQjxXaajqHHceVxZB6WPMy
        8VklCqfbFzjNBS7oN7mR3eEDd4mpXonZ9Ezpgomu2FA7TDF1uPd/DPA0CA8JscKGX+OkPZM6
        /hsLLGh85w6JLBQEL1An1XgyaOddRHnGfoSf1gieMRVbbHBr6zqX71zhxp0rbO5scSWspeK2
        9gQV8SYQTUilFyV022ViPNQBthVmU5ORkZsci+WV3ku8+ewbXJh5lunpHhkeVweMhsO3fx+M
        hel5rmzcQOmkAZvtTo001/kJmO0PwtMgPCR0DlduXuaVU28kW/YmCDUQoscedqII0GqXoGEU
        B+Q6J+CoqVh36/xw8Dbbg21urd/kzuYttqotampUrjBTmlEnNWoHAjEGogqNZ15obORGKAuS
        g4o66Z2QZPMVBr/zU3710495fvY5fufsV3l++kXKvEUWLJk8aC30t8eZxdP84OrbZD2Nc468
        YWyICFZnR4Lq9DQID4nYClxavUR1agx6GmKTEUQgyKF33eNhTTGbsck6d/JbrI3v8OH1D7i2
        ep3V1VXWljZwwTFxk8Q5zCK21GRlhs0tMkx3qSZiYmqFIzY1RBFyk8xDtbZooxCEGD0+QowV
        g3nN9ZtXufjRr7jRv8bvP7fNW0u/w6yehQok//Sp6LAC0mcXTqMnYKc0Ez9BdIHEpqJhjgbf
        8GkQHhI+d9zcvM7meINjreX9Ki0PRRzYzAqXx7/i3/38/+H9rV9wO66yVW2Rt0p6yz3W602s
        NeSdgtKWqYYpntoncafCl6m8ojRW6bSMNI33klIMhlsok1rxkjOwJsSAD54YYajX6J7oEIfC
        T1Z/wnA0Qr1q+Prxr9HSbcxhqfkHYMks0rMdtmUH2J3Td1sIj0Ze8WkQHhLB1uxUW6xurXKh
        9RxIKmMYbcjM4W/QtfEaN4c3eH/tXW4U16nn6yTEpRyjbEKmDCJCVY2pqru9rVbnZEpRt5P9
        tpK0hFNR0kxI+n2iDEYZMmsxWYa1FrRCS0qvmsEaqIidyTGZ5trmdf7sZ39O3Xf8/nN/QBkP
        aCA/5EzYocVSb5EbsorVSRoyNbsrtOyW8J9sPA3CQ8Jph9Oe25uryPE0C8UYyJVBHZKrBzDf
        WqBuVWStjDpUDOsRtfLEoDHeE41Da0uubbJjjhCcx49d8g3s2r3CuFYGZRWi9V5DQK0cKMEr
        h/eOypOEl0SIMXKymGNzZ5M6HzO7MI/OLO+//wG9qzO89NzLnObMQ7iKn4IIy7PHUJs/x1qL
        eEeIsfECaZb9TzieBuEh4ZUHE+iP+kQiStTdThLh0ImLwc6Qolcy311kjTWwG2Q+omNGVreo
        pwZ4iYSg0n40pmWwzhWGnFY1ak6l6Z5RiiCCqPT7bDsnLZ0bR1limjVJHEo9gJnODGt6iztb
        axShRTZVMLZjroyvcbp4tEEoLjLdnUZvpOZ5z+SRvt8XgadBeEgEr9lpD/lh/9/zxuRNvlq+
        hRrnIBCKCnOAv99BmO/OMZQRF7rP8/b7b1OfqtiRAb1sHtevyIr7+Ib3TL7COP901m69l9jY
        HS3MPa8xaXlEoAg9sibI9azmvfAeH/z4l3z1O1/Bi8dKRqnbaEwyaSXuia8dBrqYo217FLUm
        elBlC1crRFKJ5H4m/5OIo7Gz/QKhm2VdILI92iIQ9zkbPZzLKyIszh+j0AW5yjForLXo7PP4
        +hrjFpVIx+lxo9qEZ+AHaJU6inZ9LYEHslV7UNxtYpBf+7OjgKdBeEhorVEGalVzffMaFfU+
        PdKHM0rrAKcWTzFbzmJ8htUZWoMtPoevT3lQPvmSKL8vGAOowMbGRuJQYnHO7QVHfEiOXp8W
        zEclEJ8G4SFh2A3CimsbV+izmRb5Sh7I3+9AONBBMc8cK7MrhH6kVCXOVahHWx0ASF2duwFI
        3HucMpSBwWCw1xm0fyY8SNbiM5/HvtnwqATfLp4G4SGhRIMBb2pWh7e4NbqBx6XZ8CHUCWs3
        QWPIyTh/7FmkL+QqZ1KNCfrzE0Haf/N/3kHwdDn6FJ+OAGiFs46tsMHVzas4qlRrewi9lQaF
        lQyN5ez8M7RCgXZJfjHoRy9fIVGnhvKmnW3vsaTH3W53LzlijNmrC/52Gju/4f3vW45+kYPB
        o8LTIDwk0rJLwAacrrixeY0Kx55/xSFhygKNwgTLcmeZ+e4ivooUZUa0n0NmUOzdAIwGJDH/
        RTSIYW5ujkjE48my7G4QPsRult9EIj4qAQhPg/DwiIqAEI0QdGB7uEnAN+P3Q+hubqQfDIYu
        XWa7s/jaURTF50QtT61sEndTvrvBqAFL13aJksSw9s+E6siITzx66KAhK3LyLEOcx08qdBSs
        MU8v4wNgSs9iomEoIwbFDpdGlxkzxocIVZopd4+Dkgp7nS0NiVhrzcgABcjODl0yLhx/ldwc
        g1jgJ6NH/vla42NM54uMwzYDrtFZchjG2E3Dm3PfoCVTTDFLS3VRjZwGImhRmAdhNfvUGDDC
        UytJnx9NjBqnNTus8eMrP8J3FZWFSQwUrTYaRf7omVSPHIqIJkSiD+km0eoQmplfTrjokyZp
        SAFWxYqboxtpv/YQJqrdb0IVBQFhYWYJ4w0qQPwcDFPKLgzqLWrxlJ1pYq2otwKnuif4J6/+
        weHfoPGsULtzpwAuQhQMsCFbTEKVZEYQtKTI222re9IhCrSKQgwpCJXW6MyirDl04+2XBbVU
        qZk4pkbpcRzyyxvv4dXh/eahWdBGgTyRe0/PnWJatYgjIcZHP1juVNeppU/eKVCUTLYN8+oY
        X1n6Ci9y/vBvoHZtaQxEQcYVuBojNYLnysYVhn6AizVEwWq9p3HxUOzEv2AIoDM0KjajilYo
        a8DoI9AW+/kgGofBUMSCzOTUtuKDO+8xZvxQTEQVEdGJl5ipkmMsstI5DmNB4qPvOqxlm043
        p1t0Ga9H8kGXb57/PX73/O8yfZ8ZzG+FZhxJIllCDA6MoApwDLm0cZG+9KmpUFGwolKwKvCf
        SVLy8URUGt2xOVYUIYSUYNAp0XCUsk+PEsFGrDYUtLDWElqOa8MrbLDGATYRDwRDSDw/BZkp
        6dDiwtKzmCpHHbIv9UHQbbVRlWA2M47Vy7w++ybfOfcdnmmfhfrTfTIeFCE2chU0W6ESAhUb
        bp0r/atM9BhRHkXEYFA+/ftwBHZNWjS6V7bJdeKkhZjUpkOTSFDxaSAehKDr5D/hLVZZYunZ
        knVubl9HHoImn8IRiYTdSgiWC4vn6OoO6hETagH8SDO4NmF2Z4Y/PvMH/LMX/5Qz2Wl0sOAe
        wkwkkRBCarfVCskUqECfER+sf8Sd6ja+9IhNLA8T08pN66QI8KRDR7DddodRXSFujJcIMaAE
        TIxkT/OjB6KKE1qhC5WCMuCKmtpErqxdwXcdRh1uySjik3SiAQJYr1mZWma2M8PNuPPoi0zj
        kvPTK3zt+Df4/XN/wEq2QqxgMB6SFZbyIQwEmrQ3io2WsSNy3d/iJ5ffoS99KCO6ISarxoqb
        XIFRT4LdxqfCRI1tZTnGmCbbJASJjQmHNBqbTwPx0+CiJzoPziAhEAk47djcXqcONS172H2b
        4PFocgjpS+vSZqrsIfWj/26W507zh6/8Y363/W0WmENNksaa6U3hdHwoGeDE+gelwEnEE7g9
        3ODj1Uu4hRqVabTXEBLXMYo0jfNP/nrUCNhvdf85//vb/ytzzx9jLa5Rj8b0dI8yy6ndpOmQ
        gD1GgIrsZwfIl7ze3ws9xArtkyXbo3VkUDKrl7iyc5tL+TWeqc+jK0/ZboGKVAQmPtCWjAxz
        4L7RMI0GxqMBedEFawnkvLz8Ipd+/iFb5zaIkEi6URFCRKqA1B58IFeLEFUjopscfa0yWJ26
        WwZTl2jlXUxsU/cN9ZYmZ4Zjs6dYnFvif3zmv0on4pMQsspSv6pCJX7hQUvCplKjLIRGJrki
        edJrrRmpHRbyKfI6wmiM7Xp+svEu3/3V97nd2UCMhwpyugBUJoAJqAit0eOfQBzjmM7a6ElE
        jKXKFdv1GIvQzXOWZRE7lbcpbZthtQVW0I0MeyCxsJ/i06GUQmLyL5SoUBmIFpyrWR+t80zr
        WYwYdgcupQxGSWrr+gxlLpPZvUWJwdAtuhS6QN3J9vaMQYHVljJrU+YZRWkZCwRJJagojXWN
        Bq812sDA9tjccuitPotuhld7Z/nayhu8fvo1jufL9yz3fquy1a5rnCRXF4PGREmiU0AWO+Q6
        YzIZUPYyJrri3dX3+MWVn1KealE/4aVApQwhBIzSKecSINMGHcGPHWeXz2EXu4vMt2fYHq6h
        OorMWsQLUSLKkNbfT/HJ0Arxsuc/kVTLIkM/4PLti7x19quYQoMXUviANXmqXnyGYdzuCphG
        yCiY7y7Sy2boVwNKC2I0YhWiQLzHVYE6VPgp1zhJ7ToCx9RgUCfakdmcZyFf4vz8Kd489hJv
        LL3I+XIF49uwo/BNFWJ/AH6mYNQQoydGv9cNU0aDaXR7C18w3O7TXuyww4Dv3fw+P7j5Q9z0
        gKFfx+iHk4H9oqCUagxmNQFPCIo8z9GVJwxqzk8/i11QC5zoHefS9seYQoFNM2EkoLQcCV3H
        RwmlkpBMdD51VmpNNIERQy6ufczo7IiCNloJBIW2+q6myIPcy0LjNZjuWj/x5J2Mxc4CxzrH
        ueqv4iRSy4TgA6JTwOalxmrDYDxCo8nJyWNGLgW5z9DRYqLmn53+YxZnlzi1fIYFs4ylAAq8
        QDQRc1/A7fWGPmAgBqrEshCSWC86ZWJCs7MZQ6fXoc+Ytyfv8K/f/b+5pa7RPm7Y2t5gihMP
        9D6PKwyG4D1kgoSABMhVCx0U4iOnW+ewXTqcnjvN25slYz9GWUOUiNcRpWIzdj/Fp0Ep1SQW
        TNLF1DDRY65vX2V9dIde+2SSjG881/eCTzwPLvOThHtjjGTkTDPLysxp/nr7LxCjIdNooxEC
        wTuGPhBrx4yeJo4iDDQdN82ZzhleWH6Jl06+xPL8CY7VmqzskCqSlnEQ+kEo8hxyaAe39xn3
        f94Hx931ZAygd28ngbqu0boiFpqf7vw9/8dP/k/uFBv4luf2YIPZ2Rn89md4q8cQWluiuKR2
        TkDrDIvBeM10e4rT7TPYgozT8yv0rnQYMtgrnKKFWjytz6EW9SQjKsiNwQSNKEuQCm8CqvRs
        Dte5uXmDU+1lMgw6CjSZwM+Sz2pKhABYm6Tf26bD6dmzxFseZQ3GG7S1KMmR2idvCZ8x749x
        fOY4zz3zPC8ce4mz7XPMMY+pNQxh3W5QiiVTORpNYTQ6BKhiaii3v3kmvP/xJ8FgMVrhguBi
        TPshDU6PGTEk9Cb8bONd/uwXf8EN9zHMKIIExFky1dvnePVkQu190UmVIMtL8GBrzTMnzjDH
        PJZKc2LmBNPlNHdkDR/q9GSl8OHzY24/qYgxoLXGkBIkkxgwRrCFZTIZc3PtBu7ky7SUpfHQ
        xnvB5gqlHjzr4KmxFGhrEQ/GZJycXeHk+BQhCD4ImW4x05phee4YJ08cZ6YzzRtLb2GxWHJK
        cnLJwceURDLQak0lNe6mgdoSybLUxwn35o5+q9lQUvpXK4iWlBTCMVJDNuvb/ML9kn/743/D
        alylu9Lm9nCNGIX5znEGaxPME64HuLdFQUAryiwnDgKqtjyz/Aw2WCx1pFt0KLMC6ywx1iij
        kjf4EehS/zxgGon5oHQyWkGhrcKbwFa/8S9sfOgRkBD4rGqTLgTKxklbAiCa6XyaV8rX6LSn
        mJ9bZnn+JIu9JebtLB06ZGhsbXcpgentlSdkgXE2xIunt1NCZiHTYBQiqWtKTBrFdfz1PeBn
        Wo6mnASmOXcPBCKjMGRjssm/+eDfsio3YcozIaBVQEtGGEIc55ipJ1tndFdkOW2ABWstdYhI
        gIWZeRCNXc0Cx2SeP135p7z7y6vs9G5zPNeMV2tm5k8iVf83vPSXpzZ4kJ9EZj2T0GeMRZNT
        mnmCOPpMcL2K92//kBG/z7ya2bsh2y1LAMa1pvvpsqDpBkYzZXopzW8ESqEUTSnT/Le/99/d
        PdffRKi9bzehmnnRUqRhunff36v7hodGx0YaJeOAIOhmiawoB+kcAwFXSpN3EVSc4EcT8nwR
        5UGLw7RGDFjlH/rv89eXf8TPbr7PuLcDMwCWegg5yf8wMCKbevJF7p0yaBWpqi2kJWyHHOO7
        fOPkV3ndvE4gYkujwQd67R69rMutWlMRMe2SKtQPowf5iYYcsGQsYgvnIq6GIDUYjy0MZdGi
        XbYYjR3bMmJJRYoQUPuYqEX2+K+1osieYJUo9haue0NT965LsSYRwY2AJiNrNQaeWSSoCVf6
        F/mH2z/nJ2vv8MHkKlt2/Dm0oH+x0CSGUmYzfPAUWJRTzHXn0VhUBNvRBnxgvjPP6c4KFzc+
        YCI1vake28Mx2Zdo1vtNkAPElCabHmtz2nmBynKUgYDD+xpfe2oH/ZGjKiNGpcREEI9WNi3R
        HnOEkAYKrVQyQN0/zyq4rbbJSD2kWbQob4iSyqICFOUGq5N1fr76Pv+w+h4fDD7melxjmI/w
        ZaA44m2RmUQqSPdG0OS+wPiclYUVDAXKa6xVyVyjbad5eeF5fnz1B0yKSMgNblCBOmi9dLRx
        0K64aBeITYVYJzW+dogEjFZYpZmZWkJToI2FzEAqIqCxD8Wr4lFDKY1Sjfnp/nNNpk10mEaJ
        Jw4nxFCRt1uE3FAjDHF8uP49Ply9zN/ffJ8r1SqTTsBMK0pjCc5BfAJGokNAe4/WGidCkXfR
        I83J1jFO9U6SU6I82NSab7BS8vLCCxyTRW4ZRRU8+mml/sB1gGlryAxRK2LwhAlQgw2GXGW8
        sPIS8605WrSwBkQ1ntoNn/xxhzH7apu7TmRqt3E70q4sKuZpgOnUBLXDVVnl/Y2LXN26xQ+v
        fZeRcvSLinE3oHLBEih9xETN+Iv8cJ8DtA+YzDBwjl5rGjWG548/x3w2T06roacph1cWCRmn
        y1O8MHuBdRkwrrcpn/ht8eGhD2CvxwrwQiASnEeNNV3pslDMMlfO8MbKyyzpWWwzc6AiCoji
        MZ+HhPYhsUeJVKnlLarY/AwIgSLrgo6M2eHG+Cq/3Hyfd+/8nPc3PmB1cIdq1hAzg8oMUUVU
        8ASf1MmVKMge86XAIWFjZBIjUVkkWrpS8PLxF5liChstGLCiPKPoKFROW7p85dTL/O2VnxFq
        R/dpEGLCp6empuMMoY5UzmHHgXZs88z0WV5bfplnls5wduosPdopN19FRAeUEWLirt7tIHlc
        0cyCIgGHo6KiFodLww6lHnOTW7xz9V1+dv0dfrX9EX22kNKRLxnytqGaOPx4iBJNkZVYY3DA
        JITGw+noIhehrmvMVJfxyHO2dZwzs6coKZEAysY0QI+Co8xyqBRnj50mfgRSRDJRuKM9UB0I
        c4CYkt0uWF5cZOX8Csuzx1nIFljmOCfsMj26RAaoqMABrkJy39hSP+7Rtw8SCFIzkZqJTJhI
        hcPjxPM/v/2/sV5vczv06WdjmAedtaDWTNyYam0brRSFtrTyNnnRImjLwHtGrmL6iG95tFLU
        lacoCsbbFb3eNDPMYEhWb5RgIz1Kt4PIAPKSY3KWP+p+m/+v/h7XZ28wM2yWY3up+nv5hA/D
        l/1xxk5wSMszu9Rj9Ze3ebl8lZemXuFYa5ljC8f49tw39v7tPQXtRnPTqG7a+rUjtIt7/QrN
        Z9sX/sbm6bj3P/aqasHhY6Iv5ZkHnRPIkCYlbgQYDCCzSOvTiwSDyQZT7Vkg5+bkCleyj/nB
        xb/myu3L7KxvMloSaHJ3FlIttIkrbXJs++6S2yG4xrTUkkqUR3sehEpndNo5tj+mWO/yJ2/9
        R8RBF+lGJq0dythLM2Gr1SJTSfrQasu508/y1+99nzI+2TSSh4H5dod+3EKNapbKad569hW+
        c/IPmWWGnOI3skw+T7nIUT1EqaQXa4xBKwsmx5g011ZuhIqpbUprsLsJlm77gTKzRXuafpzw
        3b//Pn/x4b/jZuc6484O1mqm5mYYsfmIP+GTjaADpc0Zb1e8tPI67bxNFsxe0wSARcAqgyLg
        g0erjJdOvMjCRwv0R3327qf9Q9aXaIlqJCBVRRUj7UmHOTXNCkt0mMI7f1ey7zNSfB7a+ZW7
        A6UikFo+dxe6SoHK2hhS44u4SFSCk4jKLGhFdoCqXsQSdGCr2OGqucF2b4NyweJGkUn1ZDdX
        fx6IWUSLwU6EN17/CrPFNHmdQ4RclylHvrvKjKjE+o6GaWZ49cQrtDaOej/DwRjFCnKLzjOU
        NoyHNQFFNRAYZnvS9fDr/ZWfR0DmqObQ5Ggaxl6Ss2h2DtUogndkNmCziFYO84BKZRkpqGeP
        TeHKEXY2QMdjC+Bpb/GBiCZSDRwrrdOcn3uWKbqpXByBYBEVmyBsXFWNtSixGAxfP/cN5iaz
        SeFq/8G9vx91bNQDxjowMUKdKfrB47GoIsd275Yvfnu+3eGgnEI5lVpUfEikvViD1BCrtARt
        BVSrRkwfUTsM63XA8SAKLbJTo1zNiel5yqDQtWO8uYlxHuMejsr4UYZSGrWjeP3EG8zHWXIM
        aPBVgAhRRayW1KGPVRiVowVkKDzTOcNL8y+wKqvNqzWvet/3Fo740lRnOUHVDCdjVG0ZhQkR
        jbMkqYlPYJ5/bnAqTVWWZvpzeDw1jiAO6LAut9hxt9karTHYGdK/Meb3X/9jOmqaTj71qS8v
        MWKj4kxxlucXn+MSH7BWr4IJpMTxEb8BDgtnmDPzvHX8q/QmPWxXE5XDK49tMlqWCFmeUbPL
        oIaO7uIY8a3nv8H/e/G7X+RH+MIx1+ridMVoNETHiLgJBoeibpTm7pYavgj/DieCUiAmaZmN
        GNFnh77fpvJj3r34Ple2LrOm11l3G7iBo7XZ4sIrr3Kh2z0wPZnNlEgMWDTHW8/w/q0PsXMd
        vBbMtEnmLU/xiZAxPLf8As/0nmVmOAVRqPWErF0mWhuCFZHEG2sWJwrQVjPuT3hl+WW4+EV/
        jC8WYWeCaQVsHTBVjesPCIxR0VCYFrt5jS/KQEd1UkJmO1bcGtzg8volPlr9gCt3LrHRX6fs
        We7IGtUyjKYqMEJ75OjnNSNcIyT4yRjhSeZPJWdXXqRc+xF2KufGzjUUI6Z074BX+HJDasUz
        z5xnRs9gMg2+xmcOrSxaNYRnCkFixESDxEg06eh15ijjLP/lG/8Z/oag82mcUZja0QuGWAnD
        Q6pLPwlQumIwHtKdmaaYLVkdXSPiUGaKyltUUKjQWAs1xjoewQM1saEBJWvp2jvGfsxYRowZ
        MWHIaOioneCCJxBx1FR+SFPdTx4hjWuWSCC13uweDhsgjhxtYLHX5qeXvs/fbf4Vl1fe5/Zb
        V7h98hr2TMRV6xS+T7sYIa1t/u6d71JRo2pFrCBIJCpPVB7EoSpBOYWww1S09EaaV7rnyXXN
        TrxFaYWlMPdFfS2PDYIdkIkiHxZMm3mcC2nwKzLyieZ36jd448TLTBgwYggmpytzqGBwVGSS
        H1wpPlme4eWVV9m5s40QcJmnNp6iXVDYx7/38bAIKnkeeJWcgEQEIaCJWKCWEUFXiPaIDoiO
        KAQhyfwF5Ql4UEJuC1q6Q0u6tHyX0k3RLjNyo8gaHQeNBm3Y7g+ZTPbLi+yajO6fcZuGAGPQ
        kihGx+aXCFVAYsR7T2x8/Ky1hJBMOK21DOsxE6q0mjaK3YK/5q5G6K5t2e5blXnO3NQcMhI0
        5kh4QRwWLtQEanQm+Fhhc0O73UZqMJLx5nNv0TMzWDKM3NsCqZuT57zDAAAgAElEQVTwOzAI
        T3OBf/TMt8lHBqUEacHIVpgyxxz1rAwQjcEbjVMpCRUk4qkw4jEBYmapNYykZuQrXO2IzmGD
        piQjEpAYCN4Tq5Dkpyt2dR5AwdhNqHH06bPNDrfH69yptqHMm9kv3ueStU+vQiWJw+Tvpzm/
        cg7lQJxC6vS84IXM5Pg6Natm7Zyt4SbbbgMMaEujCaoSQymxd4EkRbH7uG1bPDN/DtXXZBQE
        /XQ/6CVSR4/kigk1ygrtskSNYalY4tvP/h7TzCI1ZGR7FLCkO5Ounz1oLzM1WeDl+Vd5YeEC
        l+IH1JmjxpFFR6zk1+QTjhqi0qAtTsAaRRDPxE+SmK5AiAqrMnKlEklXk6aPGgiRrN3UWndz
        OCrio8PFkJaA2nNbrzKoBnxw9SPWNtfYWN+hHnr+w3/8J3y1+3LaqysFyjRsBkE1CSGlEs/P
        BkMWDc/Mnael2ji3RdAxNYpLxNoc71J7jykNW1tbrA5XkZmmmCgxaTs1mjKiYqLvxpRSR0FB
        wfmF83Q+6BBQ1OqpEJi2BhcikguuHiMiWJ/RCV1ePfEaXXoQNBIEbRUE0uDV5POUUgerDWW1
        YalY5Hef/SZrH13njh5TKcEqd9fi+AhDiUYbmyTMlcERGVcjYuExQBkyJEKIqXZtVMOMsIDV
        xEFEcoilp6Zmhx029Bob9QYDN+SXP/85V9evMdIj1kbrlJ02Js9R3nJRfcyb+oVmXynNCtHc
        DUCalaSAFUMRS2aYZnF6kb7fSQrqVghBKKzd05AVC0MZcHX7Cm5mnHwBlUaCQolOOqoIUUIq
        /zdBmKE5O3WGRbvMmt9gqMdkn1Gw6qihsC28EyJCQPCTmtIVnCxO8vWVb6GiRhzoPEWKc4nk
        q9GEpufxwJmQHArJeOv4V/jJ5R+x3h8QWoLLInmepN2PMrKoqcXgY6KWVxIYuBGu8GTqLiHC
        B6jFUSuPylSTa46Ms4q+73Nr6xaXdy5xafsSl3eusDpcpV9vM1fOsOP7qBmFm5owsWMYGZTL
        +OXGe0j3n8K+mQ/ScrFRm0CIqYleFIXKiXjOLJ3h8u2LZKUhIBghLUmzAi8RR+oCurJxhcGJ
        HVq2RaHaGH235KIU1L4i00UzE6f3WTRLnO2dY9PtUBeeTL7cQZirFkr5RuoedDD0mObFhVd4
        zryAG6WgMyptHaKKmMZNSsekRn7gFXQl6BA5xiJfXfkav/pgjUm8gzIO50fkD8My+TFGFjUZ
        ljpWRAUeYRQcXglYGPghutCIjtQ4Nlnndn2b1e1Vtoeb/PTS20xCxdANGcmE2nqkBDOf0Slm
        Wb22ie5A3rPoIqOe1ISB0Mum2Vi/g5zZdcNSKfiaALyLhokhycnXUbOyfBq9qjHKEqJKbk0u
        UmQlTiZMQk27VXBz8wajqo9WitwWoGx6uSbAPULeSH2Jikjl6ZZdzsye5e9v/gz31KgE5Qy5
        zqnqGq01uco40TvBy8deoRO71HlKfomCSERlQopHjW1SMgcGYUUkV0JBzqsrr/FXV95m04zx
        Zpuh65NnRzsIbWioPzElLQKCj4FAQBRUxZCt0SZXN69yaeMil7evcGu8ynbYpo4TqmN9lEqi
        mxFLDBAChLEjjCIL80uM9YD+aAuLwoimnbfo2SlGm6O980j13N1fGq5tk73cby4TiCzMzKNJ
        9mc+pCAOIZC1CqowSYLFhaK/s8PEVZR5s7fbR0uLQGwSL7F5f1wkLwvmuwtISH4lX3ZIrchs
        xthP0FZRZi2WesdYmTkFI9BtjSA4XBKL3DX22ZdnOzAIpwhADtFwWp/nPzn7J/wv3/uf2Fiu
        KWdLsnFBnueMBmPKsiQS2BnvUHRLgniMf7J3jTfKHTp5hxlfwgBaMyU/2PxbPnIfooPmu7/6
        bnPDQm3AW3DTKb8RtKHjs33XO9lCawVZk62exDVUhClK6KcRM6jAqr0D0/Ddi3/Jt859h9Zw
        miwv8BKIeY3GYtAoLEEcpjQwEbrS5YXiBc4UZ7jkPqIu1og2g1gQq4xCehiJODVBz0T+5a2/
        4L958T9H3fYwDxMDmdSY4MmMxtakPaHN8D5jOBxz+tg55t+dZjzpEo44221/t+ZudajJXSFA
        a5IzyXeQ3ph8o83r6g3+xbP/NZ3Y4Y6/zSJLn/zCzes8EKPUB0+ok+vQyaUTvPrcq9RbDlNZ
        qlgx9mOG9ZBJmKCzxGsTHw5kpT8JyLVFfFMwx7Ez3uajax/y43d/xA/f/TuC9kTjCToV0BUe
        3Rw2Hp7qszXcwuGw+e5eLaXD4t0KXrJjEwGdkioGy9xUSosjBn0P8TruaalGBcNqwIgxurhv
        PFYmKbArISiH6IhuC2Uno2Uzjh9b+jXHpqOO+wkLCvB5jYigR5oZ5vjaS98gVoLR5td8PD4J
        B0aJix5rbSoUR2HRLvB7b/wei3aBbDPDlKDyiDc1VRgSlENrCC7ukRafZLSzzv/f3pn92HHd
        +f1zllru2hubzaW5iYskktoliw5Hm21pPLZhY4DMW+Y9z0aA5C3IXxAgD/kf5iHzMhlMjAwc
        eSwkgu2RJVkjyaIkinuzF/Zyt6o6Wx7O7WaT1ogUm2Szyf4CF/d2d3Xdqrr3W+ec3/L9omWC
        1pK8laNbkr7usSQW6egVKuWolMNJh5cOhEMHR+Idqd/4dO3S8kW6oRt7igTDyJpasyiIblAC
        a+2wY1eRkDA9uQ9RrBJQDBXTVvubwtpdfa63wGJ1DfIYODAM0yFSYryHxBKUxTBgpbdIYQYE
        PEf2HGZEPPwla3K1LPFrfgdQZD3wgWQl5+nx53hx6iWaMhYDpvntSWffkoRVVYEQ6CzBlBZN
        wkEO8MrRV2h12iilqNVzGq0aBkNh+nH9YkE/BJEzZwzOGKy1VKHEaIOtGVzb48Y8RsdR0ElL
        EHEkFFh0iI+N4nznIvPVIobY+iJWlxSrJHRRoN6tvpcAjWb/jgPUfRMRkjUJEhE84PAiqqY5
        CbPFHJeWL0PmCRLcWo+gwAeBrzwirjAZbbRpJg3qrsl0bT9y/uGOjK9iPRFXR0MZ4qP0A1Sp
        2CcO8mcHXqPFCImKSuSJvL0k+i1JqJLrbE5FQkpKnTpvHHuDY80nKBYLbM+RJRlKRycnqaJS
        M2brNxwG59FDOy/rDaUbUFIx8H2WBotRAnD4WO2ilcEjho+NYq6a4+LKZQw2hkHC9XKn4FnL
        6a3m8hAg0eys7WIyn0L4FOF1vJMLD8LG4427YsmvcHHhYiyzI0oTr34tAhLpMpTVCK8IlQQr
        SUzKVGMPu2rTGz6/Bx2rfbM3E3GVjKnNqPWbnNp/mqMjT1J1VwsYPNrd3nLslltppSiqAbiA
        SjQ6JLjKM81+Th88TdLJ6F/pwwAymSGlRGuNUmotd7KV4Z1BiECSKrIsI8sy0iRDSk0IYjjd
        k8Nc3fVysiDiY6PoJj0uLF6gS4/1ZaNaaEJwCBkjn0oN27U9iKBoMML+8YMor5BBDb9EqzcL
        G+tghaRMDOcWztE1yzHnKMJajarQSZwGa4GVAZd6BqLE5XF0nDq0tV10vw1uJuLq73b6XRxM
        DvPK0dfIbY5Qfs06QZnbmwne1lbOOYIairVaaNJEInhh/4u8YF7iw88/wHcNtdEaRRhEC2nJ
        sBJxa8O4CtOvSJKELMuikJK1aJ+SZlE78mbcWFK7sdHQ5pYrS5dZNl0m5M612kOlFGF9+kFJ
        vHNxlDQBncYpKec0Ajsk8Lr1YPB4JL4WmJm7yspghTSZQg5tuUMQKKnoiB4lBQaDQjNn5liq
        FjnT/4TP+p9u6Ny2AlaJ51etAFZfEz+KKbuX04dfZY+ejqWKtUCXLi2atxSOXsUtt7JYkiRB
        SLnWQZNkOWWvy47GJK+efI0rV64wV82QoCiDwHuPQA3vzltbDKjdbtLtdrHWkiVRk9yU0dil
        WWvR73aBYTJWxOcbNbE2RsKQwXJ/maIa4GusOf0KIYaOSeC9BVK890ix6l8IE+0JZBDDL5Bc
        JzwjY5g9gEgVnUE37h+HQBHCan0qLKsO55e+4szVz7h67Sqff/EFvuWZTS6xmM7Tbo1u6Py2
        MgQw6sb5zoGXY9I+FfQpkHgqU5HeZmDylltloQ4KfPDDesiYuNV5Defge+olzu++zN/O/C8W
        zFUaiaHuBFYJVnBb3lqtKv1aQYJ1UVRTJQzzoUtfW7V3J4H79VMcWDf1cTtZLjrMlGc43NhD
        aseQBYQ6DGRFy2nqskWwsda6FA6rB9QInBjZy2RvmqV0gW5rkW5VUicWAhSDPiSOCVGnGA+8
        W7zPn1Gnv9zjmukyI5b44NInvNf/Pzce5JHrP7YZuYMz3VpIazu4Mn+ZyekdLFy7SqhgTI0z
        lU9hVzz/8fX/FMcZ4bAWMlEDaiDB535t/f5NuO3wpRDipnaaCE/Od0+8zDlxkXeuLMAoFNLR
        7S6T10e4YSGzjW+NQd7HdiveP/sez44/S0OPrQVgMqGG6w+NGEodqqDI/AjepTibcfDgfj6e
        XcKUJVJJlIj1pE6ASEDmJcudDu9eeJfLc5dYmlumFwYU9YqLKzMwsckXYJNRFSUTE2PMLV6h
        PdakuFaSeU1/ps9PX/nZDdveqezlt8ohrBJxPSGDTzkg9/HW/tMsLV3mX7qfUTYtsp4gfA/E
        rQQUtvFNkOOACXwxd4Y+HQo65LKFNxahKgoREF6jQ4rymlXTJxlqyFDjwIHdfDr3e0xZkLZS
        lEgIXhJShVcOofv4huWCuMS8WaZICiwFQVUU7T45j+50E0DiKW1BvZXSL1cYqY+iZwXP73qe
        18dei6oK63AnRLzlWHmzfub6N4k9bqD6iudbx/mLY2/R9hMYkzA6PoF31W0fyDa+HqVx6Dxl
        YAs6vkMUEgUlNAk5NdEkVzlaaUQCPnEYUTDwK3TtItYXVHaAkpDqhDBcI6IVRjhcp4+Ugb4u
        uZZ1KXZ43I6AaFsa41u/4mmjEFrQ7Xeo5zVcv4KO58jYYX72wk+YYCxuM+TC+sfq728HdzQd
        Xf9aBihXDPV0lFOTL/Ph3q94e+7/Ua2sIB72jt/7gb5CmYTgBGfPnmPf/qOEoqDWyKFvKJxD
        pCBycMLQ0x2W9TLL1Qr9asCXl76gb/tkrRwtNJVxJDpDaYXD0/ItrE5YqRwrgx4qkWTSkwVH
        TW87VJa+pFlvsHBpgcnaLtq9Fj948U32qmlEpRHab1hz9o6mo+vfzDuojzfAQkuP8aOjb9Ep
        urx74Z9QYy0efsuPe4vEJ1HbXgfOznzJvznsyUYlFsu1wSLNkXE6rHC1d5Fzy19ybvksFzqX
        Wegv0DMDZD2hlBVZnuKdBwNaCxweERzC10lCSiZ81EpxkpTYJBx9njf7CmwuKmloJA30TMmo
        38mPnvkRjzWOoV10Wr4b9gffuq7s5gBNoAtJE1MGKDTH8sd4c/rPuNaZ54w7j9Qrd3xw24CB
        76KlIG0oLphzXOACbQoKCpblPL/5w9/QLVe41r/KfDlLx3ewaSDkCbqV4PsV1BRegSscKiQo
        LxHGoRPJgu2RSodOMpoqSnFoqRAhoRz02fLh7Q3C59BfMeytP8bx5jO8NvUWYeCQaQLq7khd
        3lFx53oiKlHR9z2cqlEzEm0SXpw4ybknZ/j4/SvRs2Abd45G7LKthOWL2S/5xWe/wPVTLl68
        iKXPtdbV2OUgDK5h8CogZDJUiBMkdY2UNqpyW0OTFBHAW0eaCtxYNix1CwTjYn1wloGSGPXI
        cxCnopFOU7R545k3CaViPGmDABcq1F1YconwdXmHb4HC+6gc5e2wjCpgTMXs3AwzM5f5LzP/
        mZGdY/Rsj77r0R4bJVhPd2VAI22y1ZP5m41b3Ycf9cXAra7PollkZ2snolCIUpHWMhbLRfqy
        y459O+h+sMhr+17hp4/9lJOt58FpSgsiCSSyQrDxUWbD4S8pJWGobRlCQAtNLa2xe/duDh06
        zOvHf4BaVKhSsnPHTopqwFJnmUZeQ8ut32Wxja2N0foovV6PkEJoBmaXZ1BKMtXazcrZFfbW
        9vPk3uMcah2CoCn7RO9HOSycvwvYOAm5XlWupCSqVwoyWWNyfCc/PPQTjo8+TdO0CKWLwrnD
        Lgv5COiWbuPBRp0m3gaK0KPM+ti8QnjIuzXGuhOcPvQaJ3c8Q0Yd7LBkMMZkqMzdScFtmIQC
        ECJEp1i55o6HB4rCcITH+YvjP+ZI8widiz1ynzLWHKUqS/xdOoltbONOYbqWPK/TNV26dpn2
        eAu6ATWv+P7Bt3jjsTeZZDfaRQOXvLE6xb97wscbng9GzZSoJjyUjcVZsNYjnCIvapxoPsXc
        gRkW+gvMda7i6xYtokLZNraxmfA+dqRon2CKAtd3jPkJnp18lj9/4s/ZyR60DYS+R2RRCDkK
        Xzmy5O4I7GyYhGLVI8EFxHCNJ4IgT9MozVeCLQMv7XkZnSr+/v2/49LCOZqTNQpZRn+9bWxj
        k6BqitKUjORtqm6OmIOn9j3DT579CXvkHoLXpBKoAR4G1hMSQSaS2LR9F76+d6UuyftYNSBl
        VBK7IXWSgq8840xweservHrgdXbX9oEXuGR7OrqNzYVPh9YAVcYOpnh26kVeOfoae/U0adCw
        2igvIeiopbQWc75LQmYb3osxBu/9sHcwwrlAUXhMBV46Gs06ykjqNDh99BUe3/s4g14PQ7HR
        t9/GNjaEvhuQZQl2xTDCGG889wOeHDmOQuEHrMtzB1CeZDWi74kVRXcBG84T3gpdoO5BlsQD
        r1tmxVX+8atf8at/+TVn936OAFIyNApvA740a2pit9LKedTzYNv4ZnTDIq18lNzXMD2HCBJV
        V1hl6JgOljb5vOLF+lP81VN/yTMTTyF8EpPx4v6YPNzzRF0SAlKIWHpRgLOQJQ2e3HWMVGn+
        +/uf0hpvomuarlnBe0+t0SAnoxwYtpP529gIGqqFN45SFIQsSkOGMpCmKRO1cfozmmf2n+DV
        PafY1Zq6bnEkoHKGmrr3NUP3nISZ8wwTg1QJVC6QJjWO5EfYu28XZ6+d5fzSV1xcuIBqC2RD
        MbB9BpUkl7V7fXjbeMhRp4VVlr7vMGBAkmnaegRVZlRXDd9pvsDp/ad4vv0cbepRJ2aYByxM
        dV9IeO8bxoaKa0ESvQyFRFhNwzXYUY7x18/8Nd/ddYoJP44uFVIIpBYEKXB3QTJwG482spDh
        jMdJT1JXSC2xvYq0l7BH7+Vnj/+YpxonaFNH+QyIpjg+ePL8/rTi3fu6sfU0F5BlCu1BlJIw
        MExlu3jlsdcJqeDtc7/k0uxFGuN1VD2l3yke+VaabWwMlbOU5QApFI1Gk2K5wFy2HNx9kB+8
        +EOezk+CDwijhkpd0W5OaklyH8YouA+BGYZ+Bj6IOAqKNY1cqAJOQsgd11jg7Yu/5J/OvM2F
        3gV83ZPUE4z45jTGdmBmG98EbwVKCYIN0PO07QhPTT7N60+8wRPt44yZsaHTKmA9lTGoNEEl
        909V4J6PhEaA9LGaRuIgRMtntMRrUF4Q0Iwwyfem3yL3NX756f/mfO8LZOIeejvubdxb2Lyi
        ptrIRUFt0ODl6Zf58Qs/YZfYhQwSG6LCegBIJQgdtclWJQXuQ3j0npOwCJZMClJE7BAPFh8s
        AxEwQpD7OkmATEqkGOf56RdQDc87FyUfzXwI6UPuvbWNe4qkrenNdtgZdnP62Kt878gb7BHT
        pCHB9CyiqSi8xQZPqjQyUQTj8CZOSe8HCe/9dPR24IEiitaKJpRiwEcLH/D7P77H//D/iFYW
        mfQh9HAhEMgIoYbzKVJqZPDRfCVEUxYjLUZ5rPQ0TWOzz24bG8DNbkg367IW9VGUB+ksoapw
        viIoh0xBppr0gmV3Ns2pfad5/eib7JHTCKtjoj3hgZhpbXpDn8OipIYEvPMIJxBasn/iAPKk
        ZO7Lq3y1dIHLvYuUzQzZkAQHunLUlWNA9AH3ftXJViKRKM8NzrPb2JoIfHNsLnQ6iFQRpCck
        jiRJ0KqFqaC/VPDU2JM8d/h5Xpj6Di1GGRSGDIWqPTgRv00fCQv6JKSooHEDjwsO1RAYSgwG
        xzz/8OHb/PLKuyyM9ylaBctLV9GVYbLRpoNG+oDy0dY6hLAa5CKIoTvUNrY8Vj/F9aMhQDOp
        0fc9bGJBK8q+o1zStMIkO5q7+PfP/hX7mwdoM4IOKa4fqNfT6IjMAzAK8QCQsMMSGTUSEnAS
        W1pEGotlXXDkXlOpAb9b/pC//eh/8vHKx+gdAZFbllcWqOVtRJBDm4XokhRCWBsFvXrURfu2
        NoK4TrqvI2Kv6qNzgcgCpjT4Zc0ecYiX9r7KMwde5FTjKQSaUHkSIZE67rPAYalosfkFIZt+
        I5DDla/Ho5RED22bTWEoywqvFfVGk++MPEfzqOSdr8b5fedjrrpFstEp0n5xvb1SCHwglsmt
        BoK2seWx5qQQIhG9uJ5+7oTAaNZCh4DsGR6rH+D7h3/Id3e/yiRTCAfeDC3Fh//UHVQEbUmT
        B2BByAMwEhpiHlD46Acb/deHf6ssNtMUy0s0hSJpapbCPH/3yS94++pvmE061JMlnAAnwa7a
        fg3XhzLcbFO2ja2GVZ/NNYOccOOIaLNR7HKfEVvj+akTnN53ihPtE4zZCUSRUQbIMrlmN37d
        EhzAo+9TQv6bsOkkxIAbmldKKRESxLoLs+wWaaoWymuKToFsCEpd8turv+Ef3v0FV8fOYJTH
        qEApHU56Ih39cIr6qIv2bW2sN7tdPw1dJeJotYukqzgxfoIfnniTo82jpGT4wiNTjQekBE/A
        e4uSau375W1A6s2/S28+CQfEaUICQQQ8bs10RgmNZxFHSqCxZvHsQ4X1KxAG/Pydn1NJR6kt
        hXZUyuCFiyo33qHc5s/5t3HnsPLGkQ9uHA0PLx3ke898n9d2vcEIY1Dp2IaUQIUjGXbhOByB
        gEKjg0Y4FSMzD4Au7uaT8FtgzQlq3SFfkQt8ePn3/PrMrzjT/SNVXpA2MoIXuMKxNGFRxpCY
        ikwItNaUSrPiPF1n2H1fOsa28a/B6wLrHQ6HSlKyJEf7HF+ALwNNkbFQLlCmPeojObVQJ72W
        M1XuZm++n5+f/g/AnxoV3Q1l7PuFLU/CvnAUos/F6hy/n/lnfnvuXS50z6OaiuZYkwuDJWqJ
        JBMBWZWURYF3kGZ18rxOv7pL7dHbuCNI6+OUMBF4GZXdvYFgJMIJfDag2WyCD3Rnu+S9Bk9P
        PMerx97g+ORJJm00ULzZDWmbhPcIX0fCaiWQtxWV9FysLvC7S+/y3sxv+WrwBV25gm63qVyJ
        dX0kjkQFMi/QZQAT6Da3/RM3E0lPI5THJQGfeBgSKPYwKEzeoTvbI1+pc6z1JC/tPcXTU89x
        aPQx6tQJ1n4t+bZJeI/wdSSUXsa5fQAy6Ikunw8+43czv+HM1U/44tqXhFziGp5CD6j8AGUt
        DTQ1lbEStgM3mwlVCIIIuMQikugHCJJgPc54ZAfGxCTP7niBVw+9wdGRx8lMhvCCLE8ILiao
        tuooCA8BCSvZRZOiTQZE09KgPfN+nqVqkb//4G+YqxY5V15hXi1T1C2qBlIKRIC0v7U+sIcO
        wqMSgdAC4yqqwuBLj7IKLVJeSV7nxWMv8/zUi4wwirQx4V5hqCiouXrczRZcC65iy5NwWV4l
        pUZODWXS6zqmKSDgEmc4d+0iH8x8xB87n3PRzbGU9BnIikpYpvzW+9AeJoTEoZRC+EC5UuG7
        jjE1zmM7H2Pvjn38213/jnbapkYe+1CBID0VA0oGNP04cHd8AjcLW56E1lZxYS+jCrhEIYNG
        GsBDoQ1Se0p6fNz5A+98/n/5cPYzFnUf0cpxYWaTzmYbEFMN0ioSq2n6FtPZNE9MHOfk7qeZ
        bu+jaUdQQkQ7cMB7S6/XI01TsizBD7U/t+ooCA8BCWURqyFsYujTx+JiLsgkaJcNXaNAqD7o
        PovM89HKp/z68/f4w/kzFLuvbdbpbAPIigysYFyNc3zqJN89cJqT9adp+jqUMFPM0G63kEpS
        mpK6ykioRRG+HviR62vCbRI+oAhhKDS13l143ev/+s5/Y8Zc4nw4y2K+gGhATTVIqzqq1Bi1
        jFEepy1OeoJXCKuQVYJ0ilZd4YLHOYdzLvo0yuvrE6e29uV1vhxWMmlQmoDEI3HBE4RA+QwR
        HNI7lHNoH9DeowkoBH2lsMJF5epEoqRGGo3vg+17Xipe4tTJ73D66Cla1BEuoSoNJCkyUZtf
        3Hwf8MiQML7+05F0Xi1yvvsV78+8xwez73Gue46SgjzPybMay3aAV46gHEJFDdXEKRKfoJ3m
        mi5iBcdqaF1KpJRxnSMEvre1VcZFPSE4h60MwVjwggSJFvEcK8XaOQsh8N5jjMEYg7WeJBXU
        63W0TCiXSsyiY1Lv5OT+pzky/QTH248zrkcYoU0WErAKlCLIB6fV6F7jkSJh/PlGIiqVYLGs
        sMwle4HPrn3CH65+yJm5P3K1M0Nzej/GVxg/wPgBSnhSKch0QiZTOjLuX/hh+6kP4CCEmHje
        6v2Mg1SgAkjv0B4yH0iRaGKv5pxbJEhJQBJUCipF6AyZpAipkEs9wsCRupy92R6emDjOiYmn
        2F8/wIgeIa8NOxkGAVkJsiyLNZ/S0bUD2vrhz+M+9CRc9ZH716ajwVtk0AihQXsG9DlrvuSj
        2Q/46tpZPrz8OSIJ+NQTMkulSwwDSl9ivKFVahTD6edqz40Xa+9R5Fs7D+nyNHaleId3Bukd
        wTuEdwig0F2UzEh0HSkysCmmgqoM2MpxRO5lanSKo1OHOTb5OAfq+5hkitxlYKFjuyQiIRUJ
        kqGmSwJOeByOlK19/W4HjwwJ4euJWMku3oLupaShDnUggUJ0WWGFy+4rLs/P8MmFT/nkymdc
        qWYpawa9IyMbSaktD63hgsMTrr9eVdHb/E6ZDUHrFBc81ntcsLGrIREorZFSUvWWwQREpclM
        RpM2I2qEdjZCTdU5veN1dk/uZv/INDkZKQpfGhI0QkfPh1oKiKgAAAJOSURBVLXK/BDNhBwW
        ncdPTm+T8GHAjSreN5/uspgjp05OPVbge4Zx8/hs9SIVhpVQMFvM88XKOf64cIYvls4y25tH
        NmrY4DChxFDhlSdoj0xAKEWtv7Xt33xhkVohtUYmKV5KHAIfAi5AtuzRTlP3OTvTCQ6OHODY
        zmMc3nWInWqSFjtj45Abdj4IQHoq16cwfdrZTnDgXYi+esSOB6RBKYl8EJSY7jEeORLCTUQU
        lri6EXgfe8zgeqChLEvyJAUtCMJSUjLrrnC5d5mlYoFffPbPlL6gb/t0fYdKFbjMIvIQBYh6
        3ft2pvcEwSGDRIcE5RXaxqgwXoAXPLPjecbqY+yZ2Mv+kWmmsinatElIUEh8sJFIq6WFBpyq
        EBl44pTWVB4pU5S+rnktWFWIfvhDM48kCeE6EUWl8MbR9R18HsjTNDaCIqPSV1UjidZ0EQKQ
        BUF3saLgmrAs+kUuLJznq/kvubh0nvlylp7vYDAsN7a2n4bUAlMYRNdRszlT2TgHx/dxcHIf
        k+0dHB85hSIlJSchIyFHeYVwgIMqX0KRoEIGTsf8niB2ukuPZTDs9EuRUZ0WbypSFdXaEdsk
        fAjwp2vCG9aGwkehKK+vbyrBSxv/BmuiUUHI4SYyymgESITHO4dwFq88fdXjkpvli+55Lnfn
        Obv0OZevXWDJX8PXDIYCIQQpKb4IhHRzL7+44SYl18lExucx2hyeOsqh1iH2Jfs41DzMpNpJ
        HjJU0FjpY7e7lQgz/C8FaB+frVzTiAnDurPVZy88ySMw3bwV/j+32M6AtgTUYQAAAABJRU5E
        rkJggg==
      </shape>
      <shape name='Figuras/bitcoinGold.jpeg'>
        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
      </shape>
      <shape name='Figuras/cardano.png'>
        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
        ha0AAAAASUVORK5CYII=
      </shape>
      <shape name='Figuras/dash.png'>
        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
        IRJgQIgE/gcPco7Ev4vqqQAAAABJRU5ErkJggg==
      </shape>
      <shape name='Figuras/eos.png'>
        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
      </shape>
      <shape name='Figuras/ethereum.png'>
        iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAACXBIWXMAAA7EAAAOxAGVKw4b
        AAATFElEQVR4nO3da3BT550G8CeyNVGFy8YMaDsrIExMDQwBmyQGQyygNZmQhiHbBVLIhgA2
        2AkJJGxvM93sbrsXti10pvux29Zkgu34guU1MTUw44yN8QXcgC3DGGviRg0WF1kDO66tUUYc
        ux+MgjA6x5LOe857Lv/fN7AjvWPyWOd5z/+c89jExMQECCFxWXgvgBAto4AQIoECQogECggh
        EigghEiggBAigQJCiAQKiIYMB4MY8vt5L4PEoIBohCAIaG1pQXl5BcLhMO/lkPsoIBrh9XrR
        f20An3zSjPb2dt7LIfdRQDRgbGwMFy5eRCgUwujoKI6Xl2M4GOS9LAIKiCZ8eukSrl8f+urP
        PT09OHXqFMcVkSgKCGfDwSD6+voe+fvKykr09/dzWBGJRQHhSBAEXLxwAXfu3H3ka4FAAB8e
        L6fCzhkFhCOv14u+K1dFv97a2kKFnTMKCCfRYh6JRES/JxQKUWHnjALCydRiLsbj8cDtdquw
        IhIPBYSDIb8f3d1/TOh7x8fHUVdXR4WdEwqIygRBQG9PD0KhUML/DRV2figgKpuumIuhws4H
        BURFiRRzMaFQCL/93e+psKuMAqKiRIu5GK93gAq7yiggKkmmmIuJFvZej4fRqsh0KCAqEAQB
        XZ2dSRVzMYFAAFVV1VTYVUIBUYHX68Vng39i9nqtrS1obm5m9npEHAVEYXKKuZjJM+wVVNhV
        QAFRmNxiLubatX7U1NQwf13yMAqIglgUcykNDQ1U2BVGAVEIy2IuJhAIoKzsGBV2BVFAFMK6
        mIvp6Ginwq4gCogCRkZGcK6tjWkxFxOJRKiwK4gCooCe3l4EAsOqvR8VduVQQBhTupiLocKu
        DAoIQ2oUczFU2JVBAWFIrWIuhgo7exQQRtQs5mKihZ3u78sOBYSR7u5uVYu5mGvX+lFdTYWd
        FQoIA0N+P3p6tVOQz5w5TYWdEQqITDyLuRgq7OxQQGS6cvUq12IupqOjHY2NjbyXoXsUEBlG
        RkbQ1dXFtZiLiUQiOFHnpsIuEwVEBq0UczFU2OWjgKRIa8VcDBV2eSggKQiHw5or5mKihX1s
        bIz3UnSJApKCAc5nzJPV0dGOpqYm3svQJQpIkrRczMVEIhGUV9AZ9lRQQJKk9WIuxufzobq6
        BoIg8F6KrlBAkqCXYi6mvt6NK1eTvy+wmVFAEqSnYi5mdHQUv/nN/1JhTwIFJEF6K+Ziuro6
        qbAngQKSAD0WczHj4+NU2JNAAUmAXou5GJ/Ph/LyCirsCaCATGNwcFDXxVxMY+PHVNgTQAGR
        EA6HcfnyZV0XczFU2BNDAZEw4PWi/9oA72Uohgr79CggIqLF3MiosE+PAiLCaMVcDBV2aRSQ
        OIxazMU0Nn6M9o4O3svQJArIFEYu5mJGR0dRVVWNkZER3kvRHArIFEYv5mK6ujpx9uxZ3svQ
        HApIjOFgEOfPn+e9DC6osMdHAblPEAR4entx585d3kvhxufz4dixD6iwx6CA3Ofz+UxVzMWc
        OXOaCnsMCggmi3nb+fOmKuZiqLA/jAKCyWKuxJNo9aqrqxPu+nrey9AE0wfEzMVczPj4OGpr
        azE4OMh7KdyZOiCCIODihQumLuZi/H4/Kj+qMn1hN3VAfD4frg14eS9Ds6iwmzggVMynNzo6
        ig+OHTN1YTdtQKiYJ6ant9fUhd2UAaFinjizF3bTBYSKefLMXNhNFxCfz4e+K3QtdrLMWthN
        FZBoMTfC7XvUZtbCbqqAXOzupmIugxkLu2kCMhwMoq+vj/cyRAWDQXg8vQgEApr9hDNjYTdF
        QLRczG/evImurk50d1+E3+/H6F/+gtu3biE4PKzJoJitsKfzXoAatFbMQ6EQbt+6iSG/H3fv
        PgitxfLg91U4HEb41i3YbDbYvvY1PP7447BarTyW+4impj9g3bq1WOty8V6K4gwfkLGxMc0U
        81AohJs3b+DGjRsPBUNKOBxGOBxGeno6Mr7+dU0EJRQKoaysDLk5OZg5cybXtSjN8AH59NIl
        7sU8FArh888/x9DQdXz55Zcpvca9e/fw/3fvaiYoHo8H7vp67N61i9sa1GDogPAu5sFgEH/+
        sw/BYDDlYEwVDQoA2Gw2/M0TT3AJyvj4OCorK+EqKEBWVpbq768Ww5Z0nsV8avFmFY6pwuEw
        10IfCATwu9+XGbqwG/YTRO1iLla81cCz0Le2tqClpQWFhYWqvJ/aDBkQNYt5KsVbKTwKfSgU
        wvHycizPycGc2bMVfS8eDBkQNYo5i+KtFLULvcfjwalTpwxZ2A0XEKWLuRLFWylqFfpoYV+1
        ciWWLFnC/PV5MlRJV7KYq1W8laJ0oQ8EAvjweDnC4TDz1+bJUJ8gXq+XaTHnWbyVomShb21t
        QXv7tw1V2A0TkLGxMVy4eJHJb0ctFW+lKFHojVjYDRMQFsVcy8VbKawLvcfjgdvtRmlJCcNV
        8mOIgAz5/bKKuZ6Kt1JYFfrx8XHU1dVhrctliMKu+5IuCAJ6e3pSKuZ6L95KkVvojVTYdf8J
        kmwxN2LxVoqcQm+Uwq7rgCRTzM1QvJWSSqE3SmHXdUASKeZmLN5KSbbQG6Gw6zYgQ34/urv/
        KPp1Kt7KSbTQG6Gw67KkC4KArs7OuPfVpeKtrukKvd4Luy4/QbxeLz4b/NNXf6bizZ9UoW9t
        bUFz8xq8/PLLnFeZPN0FJLaYU/HWnniFfrKwV2DlqlW6K+y6C8inly5hYMBLxVvjphb6vj4P
        ampq8Pb+/byXlhRddZCRkRHU1bnR1nYOg4OfUTh0IBqU27duoaGhAcPBIO8lJUVXnyAzZsxA
        UdEe2O12tLWdo4DohM1mw4YXXsChQ4cwKzOT93KS8tjExMQE70UkKxwOo7m5GbUnTuDqVe3c
        EE4uQRBww+/HvXv3eC+FifT0dCzPyUHJvn3YtGkTbDYb7yUlTZcBiRoOBuF2u3Hy5EkEAgHe
        y5HNSAH52298Azt3voHXX/9HzHU6eS8nZboOSFR/fz8+PF6u+8MuIwTEZrNh8yt/j9LSEuQs
        X857ObIZIiDA5GFXe3s7Kioq0HflCu/lpETPAYkeTr178CAKCwt1eTgVj2ECEjUyMgJ3fT1q
        a2t1d9il14DMf/JJFBcX49VXX9XdeY7pGC4gUYODg6j8qAptbed0cxJRbwGx2WzYsnUb3iwt
        0e2s1XQMGxBg8n+49o4OVFVVo7v7Iu/lTEsvAUlPT0d+fj4OHDiA9evXIy0tjfeSFGPogESN
        jIzg7NmzKK+ogN/v570cUXoISPaiRdi1axd2bN9u+EcfACYJSNSQ34/y8gp88kmzJg+7tByQ
        JzIzsW3bq9hbXGTou7lPpauACIKAO3fvYlZmZsof64Ig4MrVqygrO4bubja3CWJFiwGx2Wwo
        cK3F/v1v4fk1a2T93H0+H5xOp652uHQVEADo9XgQHB6WfSnn2NgYmpqacKLOjcHBzxiuMHVa
        C0j2okUoKSnBtq1bMWPGjJRfJ/rJvTDrKWzdupXhCpWnu4CEw2E0NjbidiCAgoICLMrOlvUb
        acjvR0NDAxoaGrgfdmklIE9kZmLXrt3Ys2e3rLPgsVvuCxd+E4f/6z9lBY0H3QUEmBwxqamp
        wZ07dzFv3ly4CgqwYMEC2YddVVXVXM/G8w5I7FDh00uXyvp5tnd04INjx9DT24v58+fjV0eP
        6rK76DIgwOR4ScPJjxGJRGC1WrHs6aWyL8jhPQTJKyAshwqj55+amv6AUCgEu92Of/7JT3R5
        NSGg44AIgoCWlhZ0dHZ99XezZmVi2bJlePaZZ2R9lPMaguQREFZDhcPBIE6dOoXKysqHfmbb
        t+/AD3/wfd2eK9FtQIAHx7hTb/0zb95crFq5EtnZ2bL+YdQeglQzIKyGCqMzcMfLy+HxeDA+
        Pv7V13Jzc3HkyBFdj5/oOiDA5Ef6/zWcfOQOJ1arFQuznkL+6tWyfjOqOQSpRkBYDhX2ejyo
        qqpGa2vLIz9/h8OB999/H2tdLrlL5kr3AQGAc21taG09F/drdrsdeXnPyT7sUmMIUumAsBoq
        jG6SNDQ0xP1ZWCwWHDx40BCPZDNEQKJbv/3XBkS/x+GYg7Uul+zDLiWHIJUKCKuhwugmxvHy
        Cni9Aw8dTsVat249/uPff2aIURRDBAR4eOtXDKvDLqWGIFkHhNVQYez0QUdHu+T0gdPpxNEj
        Rwwz3WuYgACTx8RNTaenHR+x2+3IzVmOvLw8Wb/lWA9BsgzI/CefRGlpqeyhwiG/H9XVNaiv
        d2N0dFTye+12O/7p0CHdnS2XYqiACIKA06dP49LlnoS+3+GYg/z8fCZn41kMQbIICKuhwugo
        TnlFBb744gvRw6lYW7ZsxQ9/8H1dzVpNx1ABAcS3fsVED7tWrFjB5Gy8nCFIOQFhOVQYPXzs
        6upMKBgAsHjxEhw9ekTXN2iIx3ABAcS3fqVED7t4DkGmGhBWQ4XRDYgzZ05PezgVKyMjA4cP
        H9b9lm48hgwIIL31K2XWrExuQ5DJBkSJocJku5TFYkFpaamunwEixbABSWTrVwqPIchEAxId
        KiwqKmJyOFVWVvbIWfBErVnzPH7+34cNsaUbj2EDAjz4LZ7KAz4BqD4EmUhAnnn2WSZDhdEx
        mnhnwRPlcDjwP7/+tWG2dOMxdECAxLd+pag1BCkVEJZDhW63G3V1dbImAqxWK378ox8Zaks3
        HsMHJNmtXylKD0HGC4gaQ4WpMOKWbjyGDwgwWUI/qqpCIDAs+7WUHIKMDYhaQ4WpMOqWbjym
        CAiQ2tavFFZDkNHrKGpra3Hz5k3c8Pvxd06nKkOFqTDylm48pgkIADQ3Nz90gRULrIcgg8Gg
        7KHC2HMxUkOFybJYLCguLsabpaW6vQAqWaYKyNjYGGpPnEj4LHuiWA5BAlBlqDAVRt/SjcdU
        AQEeDN+xOtSKxWoIMhXJDBWmwuFw4MiRI4Z4pEEyTBcQgM3WrxRWQ5CJiJ0o9vl8iryHWbZ0
        4zFlQFhu/YphNQQpJtWhwlS89NJ38G//+i+G39KNx5QBAR6cMGOx9SuF1RBkrFSHClNhpi3d
        eEwbEODhe2spjcUQpJyhwlRkZGTgZz/9KQoLCxV/L60ydUDi3VtLaakMQUbXyeoseKJ27nwD
        77170DRbuvGYOiCAclu/UpIZgmQxVJiKZ1aswC9++Utd39OKBdMHBFB261eK1BAkq6HCVJh1
        SzceCsh9qV5gxULsEGQkEkno1jpKMdI9rVhI570ArViZl4fA7dspX2Alx/XrQ7h16zYWZj2F
        Ty9dVv1wKtaLL27ENhOe7xBj4b0ArbDZbFi3fj1mzcrk8v6RSIR7OBYsWIC9xUW6e4aHkigg
        MebMno1vf+tbsFqtvJeiOrvdjn179+ryGR5KooBMkZ2djbznnuW9DNVt3vwKNm7cyHsZmkMB
        mSItLQ15eXmYN28u76WoJjc3F8XFRaY+3yGGAhLHzJkz4SoogN1u570UxTkcDhw6dMj05zvE
        UEBEZGVlIS/vOd7LUJTFYsFrr71G5zskUEAkrMzLw5LFi3gvQzEu11ra0p0GBUQC761fJTmd
        Thw88A5t6U6DAjKNObNno6CgwFBbv3a7Hfvfeou2dBNAAUnA00uXYtnTS3kvg5mXXvoObekm
        iAKSgLS0NLhcLkNs/ebm5mLPnt20pZsgCkiCjLD1m5GRgaKiItNeHZgKCkgS9Lz1a7FYsHPn
        TtPc8I0VCkiS9Lr163KtxY7t23kvQ3coIEmy2WzIX71aV1u/TqcTb5aWmOqGb6xQQFIw1+nU
        zdav1WrFnt27Df0MDyVRQFKkl63fzZtfwaZNm3gvQ7coICmKbv06HHN4L0XU4sVLsGfPblPe
        8I0VCogMM2fOxIbCQk1u/WZkZGD//rdoS1cmCohMWVlZyM3R1jSsxWLBjh078PyaNbyXonsU
        EAby8/M1dZY9P381dr7+Op0tZ4ACwsCMGTOwYcMGTRxqORwOlNKWLjMUEEbmOp3YsKGQ69av
        1WpFyb59dAEUQxQQhnhv/W7Y8AJt6TJGAWEoLS0NK1et4rL1u3jxErz99n7a0mWMAsLYnNmz
        sdblUvVQKyMjA/v2FtOWrgIoIApQ895aFosF3/3uP2D9+vWqvJ/ZUEAUkJaWptrWb25ODt54
        Yydt6SqEAqIQNbZ+HQ4H3n3vPbqnlYIoIAqa63QqdoEV3dNKHRQQhSl1gdWLL27E9u99j/nr
        kodRQBSmxL21oo8poC1d5VFAVMDysQp2ux0H3nmH7mmlEgqISlht/W7ZspW2dFVEAVEJi8cq
        5Obm0pauyiggKpJzby16TAEfFBCVpXJvLdrS5YcCwkGyW7/0mAJ+KCAcJLP1u2DBAnpMAUcU
        EE4SeawCPXmWPwoIR9NdYEVPnuWPAsKR1GMV6Mmz2kAB4Sze1q/D4UBRURFt6WoABUQDYrd+
        LRYLtmzZQo8p0Ih03gsgk1bm5aG/vx8APaZASx6bmJiY4L0IMmnI7wcAurZcQygghEigDkKI
        BAoIIRIoIIRIoIAQIoECQogECgghEigghEj4K06qBE9XkN38AAAAAElFTkSuQmCC
      </shape>
      <shape name='Figuras/iota.png'>
        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
        05jEAslcAAAAAElFTkSuQmCC
      </shape>
      <shape name='Figuras/litecoin.jpeg'>
        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
      </shape>
      <shape name='Figuras/monero.jpeg'>
        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
      </shape>
      <shape name='Figuras/nem.png'>
        iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAACXBIWXMAAA7EAAAOxAGVKw4b
        AAAgAElEQVR4nO2deXAc133nv6+P6ZmeHgyIiwBJECRxECApQTwiKaBkS5GlTaKNJR9ynKp4
        S9nSsVaJ/sO1JXvtkrIrp+KK1o4SWyVtHCV2LFXFu2WvJGcVe7XyrteSGGtLpEyZEmkBPEDw
        AI8BCMxgZnr62j96emYwxNx9zcz7VLGIGbxpPKD727+z3yOGYRhodww9+4Wef49wVXxOhaGm
        YMgLIHIMRvoKjMxV8395EYayDKKnYaQuwdBk8zOZxez/V3OH0dX0modnuKD5RaAz/2ZgHQgr
        AFwYELpB+A4QYR1IsAck0AkS7IEhdIMIXeavwUeq/P1r/N3bBNJ2Aim+GMAAhCkxVoW+cg5E
        jkFPXoCRmIWemAXkGAx5wbzYM1ehq2kYSgIBjoDjS/9oVSk/tYxqnooAR0qOqXR86xiEl8CI
        /ebXoX6QUB8g9JlikobAiAM5IVUlojaltQVS5Z3RUOIwVs7CiJ+EkZiFsfwb6Ik5IHEKupoG
        b6yACxZdtJr5Zyu8KP2EJbKcoNiC+WtGbt5sqAeQtoKRBgGhD8z6W8D231r6ptFmtJYtXSUI
        yzKsPtF6YhZG/DSMq++vEoKWugIxRPIXUvYi0lQDGQCZhP9EUA5LtBnVemft+QuIAfoi1Ll3
        oPfsB+n9rexwnYoEzW5B1hREwbeVOLA8DX15Bvqlt6AvvAc9OY8Qt3KNEPxoBZxEDJm/vxwY
        BrvlPjCDd4ORhjyelf9oPoHkRLG2IPQrh6FffBPG1aMwlo6DVWJ596hNxVCIFSfJ0j5w2z4L
        dssn866nkTU3NEjP4X+BFFqJohNXKAg9dgj61WN560DFsIoAR8AFCWR2G7jxz4Pd8un8DcZQ
        qShK4E+BlBKFoUNf+g30C/8H+sU3YCwdN31oKoiyiBIDWesCO/YguPGHVlsMKoyy+EcgJUSx
        ykpceB3a0gxEiaGCqALLnVL6PwF25xfzMYaDwojLGlR99TnhGNPFjQisIz/TSbwVSDlRzP8C
        +vnXoM//YpWVSKaoIKrBshr8vr8As/Eu802bhLGYUhFLaji9IOPMcgYrsoZlWUdCJVhOplCc
        OQR0dIghSJx57gY6eEQFBgORAAY7A+gMsr4VjzcCsYSxhii02ZdgxA7lRKGmDWolakSUGCi9
        94Lb82dmEdBQUbYgWoG4rOHX8ylciGdw/LKMhEqQ0jkwvFlk0RWzAqopcu4zupbLL4Nh8+eZ
        5QXzPZ6HrijQFBmSwGJDmGCiN4TtfUEMRgN1zdMJ3BNICVEYl/4F2tlX85YC/i2++R2rOEj2
        fgPs1s+Yb9ZpNSxRHDq3gvMrRk4Q1kVdKACTgnR7SfSi75uvGZYDywtgeB5KMoH+MIPxXgGT
        A2GMdAs1z91OnBfIGqlDI3YY6txPoM/+kFoKmxBDBDK6Ebjl70C699RtNWZiMn5xOo7pBRUp
        3TxnawvCTlYLhw+GrxHLjYOSJ5bFGYGsYS30xCyMy29DPfkDsIvvgAtSUdiFKDGQQ3vB3/S0
        GYjXYTVmYjJ+8pur+HBBBS9KUJIJh0VRjrxgisVy+7YIrusPuRaz2CuQtdyo2GGoM/8A9exr
        CAlJGmjbjCgxyEhT4Pd/Jx9v1CAOSxgn4uYFp6RXnJpqnVwrFkFLYbSLw0e2RBx3wewRSJEb
        ZShx6Gd/Qq2Fw1jBOH/j06YrVUP/1GJKxUsfXMV7V8zX/hNGaRiWAy9K0BUFwxENezeGHbMq
        jQmkyM/VE7PQZl40Ywt2gVoLB8mJ46a/zj/PUqU4Xp9exs9OJyGzIcjxBZQPrP2MDj4YyVmV
        fQMB22OV+gRSZMaN2GEox56FdvEthIQktRYOI0oMMp13InDL8zWJYzGl4sV3YziVDmZjjAya
        VxyrsayKkkxg94Bgm/tVm0CKhKGfew3q9HfBXHkLHA9qLVzAijkCH30BtWSpDs4m8E8fJpDS
        uaZyp+qBD4ahKTLGujj83vbOhoRSnUAKhWGo0E7/d6gnfwAh8Q4AKgy3EEMEcmAYgY/9OBuQ
        VxdzvD69jP9xMpNN17aO1agEHwwDQC5OmRqSaj5GeYGsJYzjz0HInABAheEmAY5A47vB3/Fy
        Tancvz90BUeXeMjxq7i2UNceWELpDSi4fVukJqGsLRAqDN8R4AjI/hfADny0anF8++BFnEoH
        s+KgWGnibpKsWiirBVIU8Gmn/pspDO0kDbw9RJQYqMNfAjfxSFXiiMsavnfoChVHCWoRiimQ
        ogKffu41KMf/C40xfIAYIpClfRB+54coLsKWglqOSpiuZjUxCjF0xcgV+GKHofz6PyOw9BYA
        KgyvCXAECglD+Fc/zcYdlYPy1TEHpRoKhVKc9SKGYRh6Yhba+38JMvcSTdf6iFpdqx8dXcBb
        l1gqjrowi46aImP3gIA7RzowGA2AZN79M0M98SJCQhLJhF75OBRXqNW1OjibwA9PaB43GbYG
        QqQzV5knxsuDBn3+wn8EOAL29pfzretlBDK3lMFTb1xuqxqHs+hg2ABYXgBH3Sn/YfVZVSOO
        uKzh+4djYHkhKxBK4zDQNRW6lqG3Gz+SkkWwO7+YTbuXP0WvTS8hZojZ9hF6Ou2GrvniM0SJ
        QWb9x6uqls/EZLxxToeSjrs4w3aCobccv5GSxWzWqrL1+K/vLbgzqTaGIXztDVwUZxAlBuzm
        rPVA+ZrH69PLBa4VxW7MlVh008UKcIRmsXyAmjbAjd5fcVxc1vDSBzEwrH+Wx2lFOsQQmNwu
        RhRPEUMEes9+MJ0T2Yp56djjteklCJEuWu9wAWbV9l4UT2GH/zj7VemCbVzW8L9PLEFJJtyZ
        VBsjcQYN0v1AgDPXtGL6P2K+UcZ6vH1mhVoPx8nfoBgE1pXd947iPFyQgGy4q2CZ0NL87HQy
        az1oW5CT5JZIJay3SztSAGgG2E2/X3HYwVnzmXLTelDj7xzm37ZDYMCAC3s8mfYm51717DHf
        KONeHTpHU7puEhZYcBC6vZ5HW8MFCYzej1RcFXExpeL45fSqldIpzhIVGDCE7/B6Hm0P07e/
        4phjl9IQIp00OHcZhgjrvJ5DW5NM6CC9N2VflY4rDp1bye3DQXGHqMCBI8Eer+fRtgQ4Ai08
        DCa80XyjRGtJXNZwfsVYtUENxUnMDKEYYMAguB4qvTF5AscDJDJsxh1l0rsXE2pB9oriPAw0
        RUafxINhAhHah+UVLAHTvafisNMLcm67M4o76JoKgSNgDKEbhJdy23dRXEQzwHSMVBx2ZjlD
        4w8XsTp5pQADhghdoA2L3pBMGUB4MPuqdIB+YdkSB62eu0WHGALHEDCECwOBTtpu4jIBjoDw
        Ekh4U9lxcVnD+eV0NkCn1XPn0cHyAiTOQERgwYAwIKF+r2fVljBiPwgXMl+UyGBdTWtg2AAN
        0F0j32aSe0VCfQBLYxA34XgAgXXZDFZp10lWjVzjHMUdGJ5HOLudmykToc/L+bQt+UbR0gK5
        lFBoBssDNneYT2syAMBERz2dTFvCEtNyVyCZoYG5F4iBAhcLwfWARmshbmMwlbOHSzKNPdxG
        VxT0SabVNmOQyBa6YLUH0EZRf6KkVyBk64KmQIQuWiykUGAWCTtEAZ3BgiCdcGEwYj+thbgM
        7aT2H4U1EABgzId0GLNpjuIqtJPanwx05C1FrjpFpK20FuImmoFqHneOCvQJQjdheB5RIV+0
        zX1FU70ewFVe9tVKN1LcQVcUDETyK1bmBdIxAjVNM1lukUwZBXWQ0iLok3jayesimiJjsHOV
        QLInp2MUCgnTTJYLVNuoCAACR+iThC7BsBx0LZPLYAEwmxUBmslym2oaFQGgM8hCEli6mokL
        sLyADR3BXAYLsMwHzWS5CsfD7KCu0KgIABGBhcTRhkW3KMxgAUXOL9O9h2ay3IAlQHhz9kXl
        Xqvik0ZxBobnc02KufdWvegYoT1ZLsH27K167OaOAO3odQFdUbCla7WlZlb9F91Oe7JcIJnQ
        QdZdl31VOY27pUvIZrJoZ6+TKOkVdIvsqveyEXq2tTe8EWx0hGayHCTAEbDRkXzdqUyAbrFe
        4hBiVLqjlGPo4INhbOgIYF1odTIkf3ay68KSyDDNZDkIFyRguq6vuBZWIRGBxYYwoYG6Y5gy
        WCvWu+b2RQN1h9EMMBvuqvljezeGaRziIGsF6MAaAiGdO2lF3SECHEFKDed3kqphlZKJviDd
        OMcx9DUDdGDVGcrGIT17aEXdIbggAbepYCepKuIPi3UhDmNdHPhgxMEZticMG0CIUbFeurYY
        mz9DhAEMHYSPgOmcoHGIE2gGmM2frPvjeTeLWhE7YXkBG8JkVQXdougWZv7h2Q0fo3GIzQQ4
        AjkwDLZ/f8VtnktxXX8Igpai2SybYXgeG0oUY5m1XjKDdyOZoHcpO+GCBOyW+7LCqO9vGxFY
        7BsIgBcrt8lTqkdXFEwOrP1szmqBEAYwVDDSEPitn4Qo0WcR7CDAEchaF9iRz2V7r+r/u944
        KNE90m2EYTko6fia8QdQ5kyx2/8dzWbZBBckYMceNINz6DUF58UMRgPYPSBAiHTaN8E2Zq0O
        3kKuPVPZAhbTOQFj8BPUijSIndbD4s6RDmpFbILheYz3li7AljhbZkaL3flFpGTRoam1B1yQ
        gLv+P9hiPSyoFbGPcvEHUEoghAGgm7HIjgPUitSJGCKQ2W1gt3yy7sxVKe7btS6b0aIPUtUL
        w3Il6x+5MWU+Dhg6uPGHILPbaOGwDlQFCNz4zYYyV6WICCz+YEyiGa0GKFf/sCgtkKwVAeHM
        k0ypCVFiYIw8DNK9J9cIajdTQxK2BtPgg2HQ4mHtMDyPid5Q+TFlv5sN2En3HhgjD1NXq0oC
        nOla8ZNfynbsOvd3++Pd3bQVvk6UZALb+8ovIF7FmTNrI/zklyCH9kIMUVerHJYryv/2s3mr
        YUNgXop1IY66WjVjPv/RH2YwGC1/Y6l85ghjDiMc+JuehoxuGo+UgQsSkL3fANM54ZhrVczU
        kIT9fRrNalUNUzG9mx9ZDQUVdu7Gv2p0di2LKDFQNj0EdutnXBOHxad2dWFrMJ0VCY1HKlEp
        vWtRve3PxiPswEdB9n6DulpFiBIDpfde8Dd81XVxWNy/tycbtNOW+HJUk97Nja3pyJZItn4G
        6tiXadCeRZQYZKQp8Dd+07ZqeT1EBBb37+1Bb0Chma0y8KKE0S6ubHrXovYzmRUJN/EI1OEv
        tb1ILHEEPvoCzFiNcTQor0REYPHIzb1ZkWSr95QCzKcHx3sqb38H1HurKxZJm7pbq8ThgUtV
        inUhDl+Y6sNwRIMQ6fJ6Or7Cenrwuv7y9Y/c+Lp/UoFItOu/gQBH2iq7ZcUcOXEY9vRZ2YXl
        buUDdwpgVs+rda+ARp3lgpiE7H8BGt/d8tYkwBGIIQJl00Pgb/pr5P6EPhKHRURgcWBqfS4F
        TPu2TKp1rwA7osmC7BZ/x8uQpX0tG5eIIQKN74a257l8tqoJ+NSuLnx62LxjmsF7e2Jlr6p1
        rwCAGIZhz1NRVmrTUKEc+QuQmb8BAGTU1njoSpQYyKG94G96Gow05FkqtxHmljJ4+f1FnEoH
        Icevej0d1xEindgVVfBv91a/N6R9AgFW+eHahf8L9Vf/EYJ2sqmfbxdDBKoCYOeXwU08Yr7Z
        hOIo5EdHF/Dz0ymwvAAlveL1dFyDD4bx6L4IRrqrX6HSXoFYZC8gQ4lDff9bUE+8iBC30lQL
        Y1uxVCa6H9wNT2RbR7JC92G8USuF1kRJJqBrGXhVv3EeHQwbgCSw+Pqd/TV90hmBAKvusvrV
        Y1CPfhPM/GvgePhaKGKIAKzZjcvt+vdgB+82v9HkVqMUB2cT+KcPE0jpXEtbEyHSif19Gj61
        q7a0t3MCAbJ33PyTdEbsMJRjz5pCCRKoacM3MYplMeTAMLjxz5tPARbuAGWT1UioChKqgpMr
        cSwqGVxIp5DWtDXHBlkWA8EQ1vEBbAtHIHE8JAdW9FtMqXjpg6t474q5iWUrWhOG5fDYrb0V
        u3eLqUsgl+U0eoXqU2XFF5l+9RjU6e/BOP8aBMQAmE/fuS0Wy1okEzq4/lvAjf4JmA2/k7cU
        NliN+XQSby9cwaGlGKbjS3g/sQQAIIIAwlZ3EerJFAxNA2FZ7JSiGI1EsTfajZu6etAftG/N
        gFa1JnwwjN6Agq/ePlDzZ+sSyCvnz+DQUgxPTuyu7YNFQjGUOPSzP4E2+xK02K8Q4lYA1jnL
        EuCIuaRq9mdo4WGwW+4DM3C7GWPk5lm/MBKqgveWFvDTS+fxwfIiPlyJgxHNtKKh6TBkGUYJ
        i1EJwrKrhKUnUxgLR3BbzwD2dHZhqnt9XcctZDGl4sV3Yy2U6dIhRMw099RQ7c/M1CWQhKpg
        6hf/jLFwBI+PT2Iy2l3bAYpcLwDQE7MwLr8N/dJb0Bfeg7Y0k7vDW9vCqdntwiuJJycEILeE
        qpo2oPHdINFxMOtvBdt3s/k4bJk51cKRpRh+dP4MPlhexLSaAWGZ3J3fSQjLghFDMDQdo1wA
        t/UM4NaevtrPSRE/OrqAN87pTe9yMSwHSWDxlY/0Vl09L6TuGOSJY+/ix0uXoSdT+MK2CTyw
        Zaz2g1gXJYoa/AwV+so5GItHocd+BSNxCkb8BJC5Cl1Nw1ASubYWjr9WOGyoBwh0mjvJhjeD
        7dlr7r/YMZpdfgerftY1P78GXp2fw6vzZ/HmwiUwYsgVUZTCEoueTOGWrj7c3b8Jd/cP1n28
        g7MJ/OOvTZdQ15qjKFpMPbWPQuoWyJGlGD536E0YmgY2ImEqGMHDW8cau3NZlekSd3FDicOQ
        F8whcuza77MhgBNBhK5rhZAbVEKUNfLK+TN4YW4G02oGAKAnk3UfywkY0YxNRrkA/mRotG6h
        zMRk/N3hxWxcEkdzWRIzvVtPcG7RUBbrj/7fz/GBkoaeTIIRRRiyjIeGxnD/0Ejj2ZbchWzN
        tA7Xp/gYDYoCMC3Gd2enMWOonlqLarGEsoMP4sDwRF1xytxSBt8/HMPlDN9UImkkOLdoSCCv
        zs/hq6ePQYvnl8FkIxJGCIffXb8Jn9201d60pFWpv+bCtyg4cTYX8w7GLuLFuZN4ayXrcvjM
        YlTCEso9XevxyNbtNWe/FlMqnv3l5SYSSWPBuUVDArGCdQCr7qSWLzxCOHxucAR39A04kr93
        A0sYby5cAhGEphNGMWxEgqHpeHLrDtyzYXNNn20mkTQanFs0XCh85sQxPH95bpUVyR28QCi3
        9Qzg0xuHbM3bO0VCVfCzSxfwg7Mn8YGSBtB8FqMc1nn5eLQXj43uqunmtZhS8dSbV5CQNV9n
        t4RIJ35/kOBjox0NHadhgcynk7jr4P8q64sXZlfuHdiM3+3bgOujXb6zKkeWYnjjyiX8/MoF
        zBgqDE1vKWEUY7nDtabq55YyeOqNywDgU5Ho6BBDeOyWnmv2Pa8VW1pNrJTvWlakmMLsyo6O
        dZ6LpVAUVlGvGYJvu7CSK1/fsaemTNdMTMYz78SzdRJ/pYAbTe0WYotArJQvgKovrMIClyHL
        uKWrD3s6u7EjEsWoFK2tlaVKEqqCEyvLOL2ygkNLsVWV7la3FuWwKvQHNm6rqZ71+vQy/nnO
        8F3Fvd6+q7WwrVnxkV/9C95aWarrIitsobAEMxaOYEfHOvQFghgMhdErCAhzHNYLIbCEQYhl
        V1mdRLZaaP1/UU7hbCqJC+kUzqRWVvVBWa0f7WQpKmHdsB7oHcSjwxOVP5Dl7w9dwdElHnJ8
        Ad67Wjr4YATDEQ0HphpvuwFsFMjB2EV8/vi7ttyFi3uOgNV9TIQtn5WwxhQeo9E+qHaBjUg1
        iSQua/jWwUuYX9F94WrV81BUOWyT/FT3euzgg7kYoxEMTYOeTEKLJ3L/9GSyqovbGlN8jGo/
        3+5o8QSevzyH509/WNX4iMDiD6/vAsvbc0E2Ah8MYzii2SYOwGabeKAG09wIhqaV/EdpHD2Z
        wrfPncSr83NVjR/pFnDrRsYX6wL/3nZ7lziyVSB2WhGKdxiaBkOW8ZUT7+PI0rU9b2tx12gU
        3SSZ3afEfZFYbSV2Wg/AgajKLStCcRZLJF87fgSX5XTF8RGBxe3bIllXy5tg/Q+vt38VSdt/
        E2pFWgdD0zBjqPjTY+9WNX5qSMJwRHN97S2nrAfgkNSpFWkdtHgCB9PxqoP2e3eug6bIDs/q
        WpywHoBDAqFWpLXQkyl86+QxzKcrp/Dd3sPdSesBOOgsUivSOhiaBiIIePL4karG3znSASVZ
        ue3ILpyyHoCDApnqXo/94Si1Ii2CnkziYDpeVerXHSuiO1L3KMbRdMPDW8dgyO77oxRn0JMp
        fHd2OtfOU468FXEu5aspMu7duc6x4wMOC2Qy2o1buvrARugWxa2AldX6wdlTFccORgMY6+Ic
        2i/RfFpw94BgS0NiORxPWD8xPgk9marYP0VpDqyAvRorsnejc+leJZnAJ3Y4nwhwXCD9QREP
        DY3lOmgpzY2haWDEUFVWZGpIQohRsxv32OVqmdbjti2hhh+GqgZXSp73D41QK9JC6MkUfnrx
        bFVj9w0EwIsS7LnUzGV8BC2Fu0ajNhyvMq4IROJ4fG18N7UiLYKhaZhWMzgYu1hx7I2Dkq3B
        Oi9K+IMxqaGFGGrBtaaZezZsxgjhaNq3hXhx7mTFMYPRAPrDjC1bUvPBCLpJsqFlfGrF1a6y
        x8cnAYC6Wi2AnkzizYVLVVXXx3sFMDwPOy43J4uCa+GqQCaj3binaz11tVoERgzh7YUrFcdN
        DoShK5WzXqXRIUQ6cX0PHC0KroXrfckHtk3A0HRqRVoAQ9PxPy+dqzhuvWSu61vvNtRWYH7f
        LmeLgmv+bLd/YK8QxJNbd1Ar0gIYsow3Fy5VfF4kIrAY7xXrfCxXdz0wL8STJ1vu2bAZE0yA
        BuxNjtXEOJ1dLaYcGzr4bBxSG14E5oV4tk7Ll7dfB4AG7M0OYRkcvrpQcdxAJJCNQ2rJZJkb
        +PybPY1tBtQInglkMtqNB/uHqKvV5BiajreqqIcMdgayD1JVf8lZFXOn+63K4elKX48OT9Da
        SJNjyDLeTyxV7M3qDLKQBLbqQJ0PhtFNkjVv22w3Xi+Fh8fHJ2HIMnW1mhRrqaUTK8tlx0UE
        FhJn1BSou13zWAvPBTIZ7abNjE0OEQScTVUuGHYI1V1uQqQTt25kXK95rIXnAgGoq9XsEJbB
        hXSq4riwwFbIZOm+ca0sfCEQgLpazc6Z1ErFMdEKFoRhzUDeD66VhW8EQl2t5uZKFYvLRYXy
        ATovSrhtS8gXrpWFbwQCmK4WLSA2H4ZWXW1DDJS+3PzmWln4SiAA8PT1N1JXqwlZzFS3OMda
        TYsMy3leECyF7wTSHxTpw1VNiGLU/6wHL0r4o+uinhYES+E7gQBmr9ZUMEJXQ2lZ8mKy9hP0
        qteqEr4UCAA8tWsfRghHXa0mgSfVXUr5B6fyKV0v2tirxbcCkTgej49PZrdRoyJpRay4w4s2
        9mrxrUAAM/V7YOM2Go80AesClVOzyUyha9WFe7ZHfBl3FOJrgQDAA1vGaDzicwjLoKeKbbuX
        ZBW6ooAPhrErquBjox0uzK4xfC8QIB+P0PqIf+kLVCMQHQzPozeg+DruKKQpBCJxPJ6ZvJnW
        R3zMYKjyMqMrsgZdUXwfdxTSFAIBzPrI13fsARH804ZAMdGTKWwJVxbIsqzjM+NB38cdhTSN
        QADg7v5BPNg/ROMRH7Khwr6EcVnD7dsivq13lKKpBAKY/Vo0aPcPjChiLBxBb4UgPSKwTScO
        oAkFAtCg3U8QlsGOjuYIuOuhKQViBe0AXRXFD+yN+q/J0C6aUiCAGbR/f9dv0Uq7x+jJFG7q
        6vF6Go7RtAIBzEr7nw/vpCLxCEYUsVOKoj/Yuq5uUwsEMDNbtB3FGwjL4I6+DV5Pw1Gc38PK
        BR7YMoa0puF5zEGLu7c/d7ujJ1P41/2bvJ6Go7SEQAAz/Xspk8aPASoSF2BEETv4YEu7V0AL
        uFiFPDmxm9ZIXIKwDD67aZvX03CclhIIADx7w29jgglQkTgIYVnoyRTu6BvweiqO03ICAYC/
        3bOfFhIdhBFDeGhoDBJX+3YGzUZLCkTieDx3wxRGObqEkBPoyRQ+vXHI62m4QksKBDB3snpm
        8mYqEpthIxLuHdjc8sG5RcsKBDCr7VQk9qInU3hk63avp+EaLS0QgIrETtrNegBtIBCAisQO
        rMxVO1kPoE0EAlCRNIqVuWon6wG0kUAAKpJ6YSMSRgiH+4dGvJ6K67SVQABTJFYKmBYTK8OI
        IkYIh2cmb26LukcxxDAMw+tJeMFlOY0vHPkljukZ2rtVAstyPHfDVMVHaluVthUIACRUBY8d
        fQcH03EqkiLYiISpYARP7drXlpbDoq0FYvHEsXfx46XLVCRZ2IiEj0d78eTEbq+n4jlUIFks
        kejJVG5r43aDsCwYMUTFUQAVSAHPn/4Q3z53Enqy8pbGrQgjijiwcRse2DLm9VR8AxVIEa+c
        P4MnTn0AQ5bbxpIQlgURBDy5dQfu2bDZ6+n4CiqQNTgYu4jPH38XAFremlj1oOfGd2Oqe73H
        s/EfVCAlmE8n8eiRX2LGUFs2eLfSuM9M3tx2FfJqoQIpQyungWkatzqoQKrgmRPH8Pzl1lkx
        hY1IeKB3EI8OT3g9Fd9DBVIlrRC802C8dqhAauDIUgxfO36kKeMSK954fHwSky28lq7dUIHU
        yGU5jT899m5TxSVWvPGfJna3bU9VvVCB1MkzJ47hb+dnfe1yWS7Vg/1DNN6oEyqQBvBzvYTW
        N+yBCqRB5tNJPHn8iK9cLsulemJ8ktY3GoQKxCaeOXEM35n9EAA8c7msLSAeGhqjLpVNUIHY
        yMHYRfzlzPueZLmsLNUXR3ZSl8pGqEBsJqEqeGr6KF5ZuOhKAG8F4vd0rcdjo7toVdxmqEAc
        4tX5OXzlxPsgLOOYNWEjEgxNx58P78Td/YOO/Ix2hwrEQS7LaXz75DHbrUmh1R+ai5AAAACk
        SURBVDiwbYLWNhyECsQF7LQm1Gq4CxWIS8ynk3j21G/qtibUangDFYjLvDo/h+/OTteU6aIZ
        Ku+gAvGAhKrge7Mz+M7shyCCULIKz4giDFnGQ0NjuH9ohGaoPIAKxEOOLMXwN6c+xMF0fNVq
        KtbqIlPBCB7eOka7bz2ECsQHvHL+DF6Ym8G0mgEAjHIBfG5whD6z4QOoQHyC5XZdyqRpwc9H
        /H+Yw9yjTTtbPgAAAABJRU5ErkJggg==
      </shape>
      <shape name='Figuras/qtum.png'>
        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
      </shape>
      <shape name='Figuras/ripple.png'>
        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
        TkSuQmCC
      </shape>
      <shape name='Figuras/verge.jpeg'>
        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
      </shape>
      <shape name='Figuras/zcash.jpeg'>
        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
      </shape>
    </shapes>
  </external>
</workbook>
